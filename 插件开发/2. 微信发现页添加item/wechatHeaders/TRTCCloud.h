//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TRTCAudioFrameDelegate-Protocol.h"
#import "TXBeautyManagerTraitControl-Protocol.h"
#import "TXIAudioCorePlayDelegate-Protocol.h"
#import "TXIAudioEffectDelegate-Protocol.h"
#import "TXIAudioSystemEventDelegate-Protocol.h"
#import "TXICaptureAndEncDelegate-Protocol.h"
#import "TXICustomPreprocessDelegate-Protocol.h"
#import "TXICustomRenderDelegate-Protocol.h"
#import "TXINotifyDelegate-Protocol.h"
#import "TXIRenderAndDecDelegate-Protocol.h"

@class NSDateFormatter, NSString, TRTCConfig, TRTCDashBoard, TRTCParams, TRTCRoomInfo, TRTCVideoEncParam, TXCCaptureAndEnc;
@protocol OS_dispatch_queue, OS_dispatch_source, TRTCAudioFrameDelegate, TRTCCloudDelegate, TRTCVideoRenderDelegate;

@interface TRTCCloud : NSObject <TXINotifyDelegate, TXICaptureAndEncDelegate, TXIRenderAndDecDelegate, TXIAudioSystemEventDelegate, TXBeautyManagerTraitControl, TXICustomRenderDelegate, TXICustomPreprocessDelegate, TRTCAudioFrameDelegate, TXIAudioCorePlayDelegate, TXIAudioEffectDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    TRTCParams *_param;
    TRTCConfig *_config;
    _Bool _startedPreview;
    _Bool _startedLocalAudio;
    _Bool _startedScreenCapture;
    _Bool _isNetworkModuleReady;
    unsigned long long _roomState;
    _Bool _isSwitchingRoom;
    _Bool _connectLost;
    struct shared_ptr<txliteav::TRTCNetwork> _trtcNetWork;
    struct shared_ptr<txliteav::TRTCEngineAdapter> _trtcNetworkCallbackAdpt;
    NSString *_cameraDeviceId;
    TRTCDashBoard *_dashBoard;
    NSObject<OS_dispatch_source> *_timer;
    _Bool _isCollecting;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _members;
    unsigned long long _enterStartingTime;
    long long _lastFPS;
    unsigned long long _lastTS;
    NSObject<OS_dispatch_source> *_statisticTimer;
    NSObject<OS_dispatch_queue> *_statisticTimerQueue;
    struct TXCopyOnWriteBuffer _0x0Token;
    struct TXCStatusModule _selfIDStatusModule;
    _Bool _remoteAudioMute;
    _Bool _remoteVideoMute;
    _Bool _enableAudioEarMonitoring;
    unsigned int _volumeCallbackIntervalMs;
    NSObject<OS_dispatch_source> *_volumeTimer;
    NSObject<OS_dispatch_queue> *_volumeTimerQueue;
    CDUnknownBlockType _speakerTestBlock;
    int _remotePriorStreamType;
    unsigned long long _lastSendMsgTimeMs;
    long long _sendMsgCount;
    long long _sendMsgSize;
    struct vector<TrtcStreamType, std::__1::allocator<TrtcStreamType>> _streamsTypes;
    _Bool _enableSmallVideo;
    TRTCVideoEncParam *_smallVideoEncParam;
    struct CGSize _smallVideoSize;
    CDUnknownBlockType _speedTestCompletion;
    int _netType;
    NSString *_strRoomId;
    _Bool _enableAudioEosMode;
    unsigned long long _captureFrameCount;
    unsigned long long _lastCaptureFrameCount;
    unsigned long long _lastCaptureCalculateTS;
    struct TXCLocalAudioRecorder *_localAudioRecorder;
    struct TXCLocalAudioRecordListener *_localAudioRecordListener;
    long long _dashboardDateFormatterOnceToken;
    NSDateFormatter *_dashboardDateFormatter;
    int _recvMode;
    _Bool _enableBlackStream;
    _Bool _enableCustomVideoCapture;
    _Bool _enableCustomAudioCapture;
    _Bool _isAutoFaceFoucs;
    _Bool _isSystemVolumeTypeSetByPublicAPI;
    id <TRTCCloudDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    TXCCaptureAndEnc *_capture;
    id <TRTCVideoRenderDelegate> _localRenderDelegate;
    id <TRTCAudioFrameDelegate> _audioFrameDelegate;
    TRTCRoomInfo *_roomInfo;
    long long _currentRole;
    long long _targetRole;
    long long _exitedRoomFlags;
}

+ (void)setLogDelegate:(id)arg1;
+ (void)setLogDirPath:(id)arg1;
+ (void)setLogCompressEnabled:(_Bool)arg1;
+ (void)setConsoleEnabled:(_Bool)arg1;
+ (void)setLogLevel:(long long)arg1;
+ (id)getSDKVersion;
+ (void)destroySharedIntance;
+ (id)sharedInstance;
+ (void)setNetEnv:(int)arg1;
+ (void)load;
@property _Bool isSystemVolumeTypeSetByPublicAPI; // @synthesize isSystemVolumeTypeSetByPublicAPI=_isSystemVolumeTypeSetByPublicAPI;
@property _Bool isAutoFaceFoucs; // @synthesize isAutoFaceFoucs=_isAutoFaceFoucs;
@property long long exitedRoomFlags; // @synthesize exitedRoomFlags=_exitedRoomFlags;
@property(nonatomic) long long targetRole; // @synthesize targetRole=_targetRole;
@property(nonatomic) long long currentRole; // @synthesize currentRole=_currentRole;
@property(retain) TRTCRoomInfo *roomInfo; // @synthesize roomInfo=_roomInfo;
@property(nonatomic) _Bool enableCustomAudioCapture; // @synthesize enableCustomAudioCapture=_enableCustomAudioCapture;
@property(nonatomic) _Bool enableCustomVideoCapture; // @synthesize enableCustomVideoCapture=_enableCustomVideoCapture;
@property(nonatomic) __weak id <TRTCAudioFrameDelegate> audioFrameDelegate; // @synthesize audioFrameDelegate=_audioFrameDelegate;
@property __weak id <TRTCVideoRenderDelegate> localRenderDelegate; // @synthesize localRenderDelegate=_localRenderDelegate;
@property(retain) TXCCaptureAndEnc *capture; // @synthesize capture=_capture;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <TRTCCloudDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)destroyClean;
- (void)onPlayData:(id)arg1 timestamp:(unsigned long long)arg2 sampleRate:(int)arg3 channels:(int)arg4;
- (void)onPlayAudioFrame:(id)arg1 userId:(id)arg2;
- (void)appendLocalAudio:(id)arg1 timeStamp:(unsigned long long)arg2 channels:(int)arg3 isMic:(_Bool)arg4;
- (void)onRecordPcmData:(id)arg1 timeStamp:(unsigned long long)arg2 sampleRate:(int)arg3 channels:(int)arg4;
- (void)onLocalAudioWriteFail;
- (void)onSendFirstLocalAudioFrame;
- (void)onSendFirstLocalVideoFrame:(int)arg1;
- (void)onChangeRole:(int)arg1 msg:(basic_string_90719d97)arg2;
- (void)onCancelTranscoding:(int)arg1 msg:(id)arg2;
- (void)onTranscodingUpdated:(int)arg1 msg:(id)arg2;
- (void)onStreamUnpublished:(int)arg1 msg:(id)arg2;
- (void)onStreamPublished:(int)arg1 msg:(id)arg2;
- (void)sendWarningToDelegate:(int)arg1 message:(id)arg2;
- (void)sendErrorToDelegate:(int)arg1 message:(id)arg2;
- (void)sendCustomAudioData:(id)arg1;
- (void)enableCustomAudioCapture:(_Bool)arg1;
- (void)sendCustomVideoData:(id)arg1;
- (void)enableCustomVideoCapture:(_Bool)arg1;
- (void)callExperimentalAPI:(id)arg1;
- (int)setRemoteVideoRenderDelegate:(id)arg1 delegate:(id)arg2 pixelFormat:(long long)arg3 bufferType:(long long)arg4;
- (int)setLocalVideoRenderDelegate:(id)arg1 pixelFormat:(long long)arg2 bufferType:(long long)arg3;
- (void)stopVolumeTimer;
- (void)startVolumeTimer:(CDUnknownBlockType)arg1;
- (void)volumeCallback;
- (void)onEncNAL:(id)arg1;
- (void)onEncAudio:(id)arg1;
- (void)apiLog:(id)arg1;
- (void)setDebugViewMargin:(id)arg1 margin:(struct UIEdgeInsets)arg2;
- (void)showDebugView:(long long)arg1;
- (void)onLog:(id)arg1 LogLevel:(int)arg2 WhichModule:(id)arg3;
- (void)collectDeviceInfo;
- (void)collectCustomCaptureFps;
- (void)collectStatus;
- (void)stopCollectStatus;
- (void)startCollectStatus;
- (void)appendDashboardLogForUID:(id)arg1 errCode:(int)arg2 errMsg:(id)arg3;
- (id)_dateStringForDashboard:(id)arg1;
- (void)onNotifyEvent:(int)arg1 withParams:(id)arg2;
- (void)onRenderSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 pts:(unsigned long long)arg2 rotation:(long long)arg3 steamType:(int)arg4;
- (_Bool)onCustomRender:(id)arg1 sampleBuffer:(struct opaqueCMSampleBuffer *)arg2 rotation:(long long)arg3 pts:(unsigned long long)arg4;
- (id)_userIDFromTinyID:(id)arg1;
- (void)onRequestKeyFrame:(id)arg1 streamType:(int)arg2;
- (void)handleStateChange:(id)arg1 newUserInfo:(id)arg2;
- (void)onRecvFirstVideo:(const unsigned long long *)arg1 stream:(int)arg2;
- (void)onRecvFirstAudio:(const unsigned long long *)arg1;
- (void)onVideoConfigChanged:(const struct TXVideoConfig *)arg1;
- (void)onRecvSEIMsg:(unsigned long long)arg1 streamType:(int)arg2 msg:(const struct TXCopyOnWriteBuffer *)arg3;
- (void)onRecvCustomCmdMsg:(const struct TXSMsgItem *)arg1;
- (void)onSendCustomCmdMsgResult:(unsigned int)arg1 seq:(unsigned int)arg2 errCode:(int)arg3 errMsg:(basic_string_90719d97)arg4;
- (void)onConnectionRecovery;
- (void)onTryToReconnect;
- (void)onConnectionLost;
- (void)onAVMemberExit:(id)arg1;
- (void)onAVMemberEnter:(id)arg1;
- (void)onDataReportResponse:(struct TC_StatusReportRes)arg1;
- (void)onIdrFpsChanged:(int)arg1;
- (void)onVideoQosChange:(const struct VideoQosPara *)arg1;
- (void)onAudioQosChange:(const struct AudioQosPara *)arg1;
- (void)onWholeUserListChange:(id)arg1 userExit:(id)arg2;
- (void)onAVUserListChange:(id)arg1 userExit:(id)arg2 userChange:(id)arg3;
- (void)onNetworkTestCallback:(id)arg1 finishedCount:(unsigned int)arg2 totalCount:(unsigned int)arg3;
- (void)onNotify:(unsigned long long)arg1 streamType:(int)arg2 errCode:(int)arg3 errMsg:(basic_string_90719d97)arg4;
- (void)onRequestDownStream:(int)arg1 errMsg:(basic_string_90719d97)arg2 TinyId:(unsigned long long)arg3 Type:(int)arg4;
- (void)onRemoveUpStream:(int)arg1 errMsg:(basic_string_90719d97)arg2 type:(int)arg3;
- (void)onAddUpStream:(int)arg1 errMsg:(basic_string_90719d97)arg2 type:(int)arg3;
- (void)onDisconnectOtherRoom:(int)arg1 errMsg:(basic_string_90719d97)arg2;
- (void)onConnectOtherRoom:(basic_string_90719d97)arg1 errCode:(int)arg2 errMsg:(basic_string_90719d97)arg3;
- (void)onKickOut:(int)arg1 errMsg:(basic_string_90719d97)arg2;
- (void)onExitRoom:(int)arg1 errMsg:(basic_string_90719d97)arg2;
- (void)onEnterRoom:(int)arg1 errMsg:(basic_string_90719d97)arg2;
- (void)onRequestAccIP:(int)arg1 errMsg:(basic_string_90719d97)arg2 isAcc:(_Bool)arg3;
- (void)onRequestToken:(int)arg1 errMsg:(basic_string_90719d97)arg2 tinyId:(unsigned long long)arg3 token:(const struct TXCopyOnWriteBuffer *)arg4;
- (void)initNetwork:(unsigned int)arg1 UserID:(basic_string_90719d97)arg2 UserSig:(basic_string_90719d97)arg3;
- (void)asyncRunOnDelegateQueue:(CDUnknownBlockType)arg1;
- (void)runAfter:(int)arg1 block:(CDUnknownBlockType)arg2;
- (void)syncRun:(CDUnknownBlockType)arg1;
- (void)asyncRun:(CDUnknownBlockType)arg1;
- (void)configSystemVolumeTypeByScene:(long long)arg1;
- (void)setEncVideoSizeWithParam:(id)arg1 customVideoSize:(struct CGSize)arg2;
- (struct CGSize)getEncVideoSizeWithParam:(id)arg1 customVideoSize:(struct CGSize)arg2;
- (void)setSmallEncVideoSize;
- (struct CGSize)getSmallEncVideoSize;
- (void)setEncVideoSize;
- (struct CGSize)getEncVideoSize;
- (void)applyScreenConfig;
- (void)applyCaptureConfig;
- (void)applyRenderPlayStrategy:(id)arg1;
- (void)applyRenderConfig:(id)arg1;
- (long long)captureResolutionForVideoResolution:(long long)arg1;
- (long long)convertRotation:(long long)arg1;
- (void)setVoiceChangerType:(long long)arg1;
- (void)setReverbType:(long long)arg1;
- (void)setBGMVolume:(unsigned long long)arg1;
- (void)setMicVolumeOnMixing:(unsigned long long)arg1;
- (int)setBGMPosition:(long long)arg1;
- (long long)getBGMDuration:(id)arg1;
- (void)resumeBGM;
- (void)pauseBGM;
- (void)stopBGM;
- (void)playBGM:(id)arg1 withBeginNotify:(CDUnknownBlockType)arg2 withProgressNotify:(CDUnknownBlockType)arg3 andCompleteNotify:(CDUnknownBlockType)arg4;
- (void)setAllAudioEffectsVolume:(int)arg1;
- (void)setAudioEffectVolume:(int)arg1 volume:(int)arg2;
- (void)stopAllAudioEffects;
- (void)stopAudioEffect:(int)arg1;
- (void)playAudioEffect:(id)arg1;
- (void)onAudioEffectFinished:(int)arg1 code:(int)arg2;
- (void)audioSystem:(id)arg1 onEvent:(int)arg2 info:(id)arg3;
- (void)setMixTranscodingConfig:(id)arg1;
- (void)stopPublishCDNStream;
- (void)startPublishCDNStream:(id)arg1;
- (void)setPriorRemoteVideoStreamType:(long long)arg1;
- (void)setRemoteVideoStreamType:(id)arg1 type:(long long)arg2;
- (void)doSetSmallVideoEncParam:(id)arg1 enable:(_Bool)arg2 customVideoSize:(struct CGSize)arg3;
- (int)enableEncSmallVideoStream:(_Bool)arg1 withQuality:(id)arg2;
- (void)enableAudioEarMonitoring:(_Bool)arg1;
- (void)setSystemVolumeType:(long long)arg1;
- (void)stopAudioRecording;
- (int)startAudioRecording:(id)arg1;
- (void)stopAudioVolumeEvaluation;
- (void)startAudioVolumeEvaluation;
- (void)enableAudioVolumeEvaluation:(unsigned long long)arg1;
- (void)setRemoteAudioVolume:(id)arg1 volume:(int)arg2;
- (void)muteAllRemoteAudio:(_Bool)arg1;
- (void)muteRemoteAudioInternal:(id)arg1 mute:(_Bool)arg2;
- (void)muteRemoteAudio:(id)arg1 mute:(_Bool)arg2;
- (void)setAudioRoute:(long long)arg1;
- (void)muteLocalAudio:(_Bool)arg1;
- (_Bool)stopLocalAudioInternal;
- (void)stopLocalAudio;
- (void)startLocalAudio;
- (void)stopSpeedTest;
- (void)startSpeedTest:(unsigned int)arg1 userId:(id)arg2 userSig:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)onAppDidBecomeActive:(id)arg1;
- (void)onAppEnterBackground:(id)arg1;
- (void)setWatermark:(struct UIImage *)arg1 streamType:(long long)arg2 rect:(struct CGRect)arg3;
- (void)setFilterConcentration:(float)arg1;
- (void)setFilter:(struct UIImage *)arg1;
- (void)setBeautyStyle:(long long)arg1 beautyLevel:(long long)arg2 whitenessLevel:(long long)arg3 ruddinessLevel:(long long)arg4;
- (_Bool)enbaleTorch:(_Bool)arg1;
- (void)setFocusPosition:(struct CGPoint)arg1;
- (void)setZoom:(double)arg1;
- (void)enableAutoFaceFoucs:(_Bool)arg1;
- (void)setGSensorMode:(long long)arg1;
- (void)setVideoEncoderRotation:(long long)arg1;
- (void)setRemoteSubStreamViewRotation:(id)arg1 rotation:(long long)arg2;
- (void)setRemoteViewRotation:(id)arg1 rotation:(long long)arg2;
- (void)snapshotRemoteSubStreamView:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)snapshotRemoteView:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)snapshotLocalView:(CDUnknownBlockType)arg1;
- (void)setMotionMute:(_Bool)arg1;
- (void)selectMotionTmpl:(id)arg1;
- (void)setGreenScreenFile:(id)arg1;
- (void)setNoseSlimLevel:(float)arg1;
- (void)setFaceShortLevel:(float)arg1;
- (void)setChinLevel:(float)arg1;
- (void)setFaceVLevel:(float)arg1;
- (void)setFaceScaleLevel:(float)arg1;
- (void)setEyeScaleLevel:(float)arg1;
- (void)setVideoEncoderMirror:(_Bool)arg1;
- (void)setLocalViewMirror:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool enterprisePituEnabled;
- (id)getBeautyManager;
- (void)enableBlackStream:(_Bool)arg1;
- (void)setLocalViewRotation:(long long)arg1;
- (void)setRemoteSubStreamViewFillMode:(id)arg1 mode:(long long)arg2;
- (void)setRemoteViewFillMode:(id)arg1 mode:(long long)arg2;
- (void)setLocalViewFillMode:(long long)arg1;
- (_Bool)enableLocalVideoInternal:(_Bool)arg1;
- (void)muteAllRemoteVideoStreams:(_Bool)arg1;
- (void)muteRemoteVideoStreamInternal:(id)arg1 mute:(_Bool)arg2;
- (void)muteRemoteVideoStream:(id)arg1 mute:(_Bool)arg2;
- (void)muteLocalVideo:(_Bool)arg1;
- (_Bool)isCameraAutoFocusFaceModeSupported;
- (_Bool)isCameraTorchSupported;
- (_Bool)isCameraFocusPositionInPreviewSupported;
- (_Bool)isCameraZoomSupported;
- (void)switchCamera;
- (void)setNetworkQosParam:(id)arg1;
- (void)setSubStreamMixVolume:(long long)arg1;
- (void)doSetVideoEncoderParam:(id)arg1 customVideoSize:(struct CGSize)arg2;
- (void)setVideoEncoderParam:(id)arg1;
- (void)stopAllRemoteView;
- (_Bool)stopRemoteRenderInternal:(id)arg1 onlyVideo:(_Bool)arg2;
- (void)cancelSubVideoDownStream:(id)arg1 muteStream:(_Bool)arg2;
- (void)cancelMainVideoDownStream:(id)arg1 muteStream:(_Bool)arg2;
- (void)stopRemoteView:(id)arg1;
- (_Bool)stopRemoteScreenRenderInternal:(id)arg1 onlyVideo:(_Bool)arg2;
- (void)stopRemoteSubStreamView:(id)arg1;
- (_Bool)startRemoteScreenRenderInternal:(id)arg1 view:(id)arg2;
- (void)startRemoteSubStreamView:(id)arg1 view:(id)arg2;
- (void)_requestDownStream:(id)arg1 streamType:(int)arg2 setReqTick:(_Bool)arg3;
- (_Bool)startRemoteRenderInternal:(id)arg1 view:(id)arg2;
- (void)startRemoteView:(id)arg1 view:(id)arg2;
- (void)stopPreviewInternal;
- (void)stopLocalPreview;
- (void)startLocalPreview:(_Bool)arg1 view:(id)arg2;
- (void)setDefaultStreamRecvMode:(_Bool)arg1 video:(_Bool)arg2;
- (void)disconnectOtherRoom;
- (void)connectOtherRoom:(id)arg1;
- (void)exitRoomInternalWithStopCapture:(_Bool)arg1 reqExit:(_Bool)arg2;
- (void)exitRoom;
- (void)onTerminate:(id)arg1;
- (void)switchRole:(long long)arg1;
- (void)enterRoom:(id)arg1 appScene:(long long)arg2;
- (long long)calcNetworkQualityWithLoss:(unsigned int)arg1 rtt:(unsigned int)arg2;
- (id)remoteStatistcsWithStreamType:(int)arg1 tinyId:(id)arg2;
- (id)locaStatisticsWithStreamType:(int)arg1;
- (void)_onStatisticsTimer;
- (void)startStatistics;
- (void)stopStatistics;
- (void)tryStartStatistics;
- (_Bool)sendSEIMsg:(id)arg1 repeatCount:(int)arg2;
- (_Bool)sendCustomCmdMsg:(long long)arg1 data:(id)arg2 reliable:(_Bool)arg3 ordered:(_Bool)arg4;
- (void)dealloc;
- (id)initInternal;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

