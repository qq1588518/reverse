//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CdnDownloadTaskInfo, NSString, WCPlayerPlayArgs, WCPlayerPlaybackInfo;

@interface WCPlayerReporter : NSObject
{
    _Bool _hadReported;
    _Bool _hadReportStream;
    unsigned int _reportId;
    float _bufferPosWhenPlayerReady;
    unsigned int _moovWaitTime;
    unsigned int _hasPreloadSize;
    unsigned int _preloadStatus;
    WCPlayerPlayArgs *_playerArgs;
    WCPlayerPlaybackInfo *_playbackInfo;
    unsigned long long _startDownloadTime;
    unsigned long long _startPlayTime;
    unsigned long long _clickToStartTime;
    unsigned long long _playerCreateTime;
    unsigned long long _recievePreDataTime;
    unsigned long long _previousCompletedSize;
    unsigned long long _responsePreDataTime;
    unsigned long long _responsedDataWhenPlayerReady;
    unsigned long long _playerReadyTime;
    unsigned long long _timeParseDurationFromMoov;
    long long _showLoadingCount;
    long long _stalledCount;
    long long _audioDecoderType;
    long long _videoDecoderType;
    unsigned long long _leavePlayerTime;
    CdnDownloadTaskInfo *_downloadInfo;
    unsigned long long _downloadMode;
    NSObject *_mediaWrap;
    NSString *_clientMediaId;
    NSString *_nsHostName;
    struct C2CDownloadResult _downloadResult;
}

@property(nonatomic) _Bool hadReportStream; // @synthesize hadReportStream=_hadReportStream;
@property(nonatomic) _Bool hadReported; // @synthesize hadReported=_hadReported;
@property(retain, nonatomic) NSString *nsHostName; // @synthesize nsHostName=_nsHostName;
@property(retain, nonatomic) NSString *clientMediaId; // @synthesize clientMediaId=_clientMediaId;
@property(nonatomic) unsigned int preloadStatus; // @synthesize preloadStatus=_preloadStatus;
@property(nonatomic) unsigned int hasPreloadSize; // @synthesize hasPreloadSize=_hasPreloadSize;
@property(retain, nonatomic) NSObject *mediaWrap; // @synthesize mediaWrap=_mediaWrap;
@property(nonatomic) unsigned int moovWaitTime; // @synthesize moovWaitTime=_moovWaitTime;
@property(nonatomic) struct C2CDownloadResult downloadResult; // @synthesize downloadResult=_downloadResult;
@property(nonatomic) unsigned long long downloadMode; // @synthesize downloadMode=_downloadMode;
@property(retain, nonatomic) CdnDownloadTaskInfo *downloadInfo; // @synthesize downloadInfo=_downloadInfo;
@property(nonatomic) unsigned long long leavePlayerTime; // @synthesize leavePlayerTime=_leavePlayerTime;
@property(nonatomic) long long videoDecoderType; // @synthesize videoDecoderType=_videoDecoderType;
@property(nonatomic) long long audioDecoderType; // @synthesize audioDecoderType=_audioDecoderType;
@property(nonatomic) long long stalledCount; // @synthesize stalledCount=_stalledCount;
@property(nonatomic) long long showLoadingCount; // @synthesize showLoadingCount=_showLoadingCount;
@property(nonatomic) unsigned long long timeParseDurationFromMoov; // @synthesize timeParseDurationFromMoov=_timeParseDurationFromMoov;
@property(nonatomic) float bufferPosWhenPlayerReady; // @synthesize bufferPosWhenPlayerReady=_bufferPosWhenPlayerReady;
@property(nonatomic) unsigned long long playerReadyTime; // @synthesize playerReadyTime=_playerReadyTime;
@property(nonatomic) unsigned long long responsedDataWhenPlayerReady; // @synthesize responsedDataWhenPlayerReady=_responsedDataWhenPlayerReady;
@property(nonatomic) unsigned long long responsePreDataTime; // @synthesize responsePreDataTime=_responsePreDataTime;
@property(nonatomic) unsigned long long previousCompletedSize; // @synthesize previousCompletedSize=_previousCompletedSize;
@property(nonatomic) unsigned long long recievePreDataTime; // @synthesize recievePreDataTime=_recievePreDataTime;
@property(nonatomic) unsigned long long playerCreateTime; // @synthesize playerCreateTime=_playerCreateTime;
@property(nonatomic) unsigned long long clickToStartTime; // @synthesize clickToStartTime=_clickToStartTime;
@property(nonatomic) unsigned long long startPlayTime; // @synthesize startPlayTime=_startPlayTime;
@property(nonatomic) unsigned long long startDownloadTime; // @synthesize startDownloadTime=_startDownloadTime;
@property(nonatomic) unsigned int reportId; // @synthesize reportId=_reportId;
@property(nonatomic) __weak WCPlayerPlaybackInfo *playbackInfo; // @synthesize playbackInfo=_playbackInfo;
@property(nonatomic) __weak WCPlayerPlayArgs *playerArgs; // @synthesize playerArgs=_playerArgs;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned int)getReportIdWithSource:(int)arg1 Keys:(id)arg2 FromIdkey:(unsigned int)arg3;
- (void)reportPlaybackStallCount;
- (void)reportDownloadProxyInitFail;
- (void)reportStartPlayCost;
- (void)reportNetworkSpeed;
- (void)reportStreamingPlayInfoWithIDKey;
- (void)reportPlayerNoMoreLoadingReq;
- (void)reportPlayerLeak;
- (void)reportGetDurationFailWhenPlayerReady;
- (void)reportLoadingPreWhenStopPlayer;
- (void)reportResetAndPlaySuccInResourceloaderBug;
- (void)reportWhenResetToSystemInResourceloaderBug;
- (void)reportResourceloaderBugNotResumeInPreloadDataResp;
- (void)reportPlayerResumedInLiklyResourceloaderBug;
- (void)reportNotRealPlayWhenPlayerExit;
- (void)reportWhenStartPlayer;
- (void)reportWhenLiklyResourceloaderBugAfterSeek;
- (void)reportWhenLiklyResourceloaderBug;
- (void)reportResetAndPlaySuccWhenMediaServicesWereReset;
- (void)reportWhenMediaServicesWereReset;
- (void)reportWhenResetAndPlaySucc;
- (void)reportWhenResetPlayer;
- (void)reportWhenStateError;
- (void)reportPlayerInfo;
- (id)getNetNameWithType:(unsigned int)arg1;
- (unsigned int)getPlayLenPerSec;
- (id)getMoovFailReason:(int)arg1;
- (void)calculateBuffersWithStat:(id)arg1 PlayDecs:(id)arg2;
- (void)reportStreamPlayInfo;
- (id)commonReportInfo;
- (void)report;
- (id)getPreloadReportInfo:(struct C2CDownloadResult)arg1;
- (id)getCdnReportInfo:(struct C2CDownloadResult)arg1;
- (id)getPlayerInfoWith:(struct C2CDownloadResult)arg1;
- (id)getIplist:(vector_ebb6ef3e)arg1;
- (struct C2CDownloadResult)getDownloadResult;
- (void)onRecievePreData;
- (void)onStartDownload;
- (void)onStartPlay:(float)arg1;

@end

