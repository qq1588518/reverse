//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WBVideoFeedbackViewDelegate-Protocol.h"

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, UIWindow, WBVideoFeedbackItem, WBVideoPlayerController, WBVideoPlayerLog;
@protocol OS_dispatch_queue;

@interface WBVideoFeedbackManager : NSObject <WBVideoFeedbackViewDelegate>
{
    NSObject<OS_dispatch_queue> *_videoLogQueue;
    _Bool _hasCacheLogs;
    UIWindow *_feedbackWindow;
    NSArray *_feedbackItems;
    WBVideoFeedbackItem *_selectedItem;
    NSMutableArray *_playingLogsArr;
    NSMutableDictionary *_feedbackItemsDic;
    NSMutableDictionary *_performingTraceRouteDic;
    NSMutableDictionary *_feedbackViewLogData;
    NSString *_curMediaID;
    NSString *_curTraceID;
    NSDictionary *_curAnalysisParameters;
    WBVideoPlayerController *_curPlayerController;
    WBVideoPlayerLog *_playerLog;
}

+ (double)feedbackBtnDelayShowDefaultTime;
+ (_Bool)shouldShowFeedbackViewWithStatus:(id)arg1;
+ (id)sharedManager;
@property(nonatomic) __weak WBVideoPlayerLog *playerLog; // @synthesize playerLog=_playerLog;
@property(retain, nonatomic) WBVideoPlayerController *curPlayerController; // @synthesize curPlayerController=_curPlayerController;
@property(copy, nonatomic) NSDictionary *curAnalysisParameters; // @synthesize curAnalysisParameters=_curAnalysisParameters;
@property(retain, nonatomic) NSString *curTraceID; // @synthesize curTraceID=_curTraceID;
@property(retain, nonatomic) NSString *curMediaID; // @synthesize curMediaID=_curMediaID;
@property(retain, nonatomic) NSMutableDictionary *feedbackViewLogData; // @synthesize feedbackViewLogData=_feedbackViewLogData;
@property(retain, nonatomic) NSMutableDictionary *performingTraceRouteDic; // @synthesize performingTraceRouteDic=_performingTraceRouteDic;
@property(retain, nonatomic) NSMutableDictionary *feedbackItemsDic; // @synthesize feedbackItemsDic=_feedbackItemsDic;
@property(retain, nonatomic) NSMutableArray *playingLogsArr; // @synthesize playingLogsArr=_playingLogsArr;
@property(nonatomic) _Bool hasCacheLogs; // @synthesize hasCacheLogs=_hasCacheLogs;
@property(retain, nonatomic) WBVideoFeedbackItem *selectedItem; // @synthesize selectedItem=_selectedItem;
@property(retain, nonatomic) NSArray *feedbackItems; // @synthesize feedbackItems=_feedbackItems;
@property(retain, nonatomic) UIWindow *feedbackWindow; // @synthesize feedbackWindow=_feedbackWindow;
- (void).cxx_destruct;
- (_Bool)isTraceRouteEnable;
- (_Bool)isVipMember;
- (_Bool)isFeedbackEnable;
- (void)uploadLog:(id)arg1;
- (void)beginTraceRouteWithLog:(id)arg1;
- (_Bool)triggerVipStallStateMonitorStrategyWithLogData:(id)arg1;
- (void)handleVipStallStateMonitorStrategyWithLogData:(id)arg1;
- (void)handleVideoPlayerCommitLogWithLogData:(id)arg1;
- (void)handleFeedbackViewCommitLogWithItem:(id)arg1;
- (void)logFeedbackViewCommitWithItemType:(long long)arg1;
- (id)defaultFeedbackItems;
- (id)createNewFeedBackLogWithMediaID:(id)arg1;
- (void)preventPlayerControllerCompleteAndRotation:(_Bool)arg1;
- (void)purgeCacheLogs;
- (void)resetFeedbackViewVariables;
- (id)createFeedbackWindow;
- (id)playerLogWithNotification:(id)arg1;
- (void)videoLogDidCommit:(id)arg1;
- (void)videoLogCreate:(id)arg1;
- (void)feedbackViewDidCommit:(id)arg1 item:(id)arg2;
- (void)feedbackViewDidDismiss:(id)arg1;
- (void)updateFeedbackViewLogDataWithViewController:(id)arg1 status:(id)arg2 videoItem:(id)arg3;
- (void)showFeedBackViewWithStyle:(long long)arg1;
- (void)showFeedBackView;
- (void)showVideoFeedbackViewWithPlayerController:(id)arg1 inViewController:(id)arg2 videoItem:(id)arg3 style:(long long)arg4;
- (void)showVideoFeedbackViewWithPlayerController:(id)arg1 inViewController:(id)arg2 videoItem:(id)arg3;
- (void)showVideoFeedbackViewWithPlayerController:(id)arg1 inViewController:(id)arg2 status:(id)arg3;
- (_Bool)isVideoFeedbackViewShowing;
- (void)startVideoFeedbackMonitor;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

