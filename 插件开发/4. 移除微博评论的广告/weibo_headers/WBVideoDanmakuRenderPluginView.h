//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WBVideoExternalPluginBaseView.h"

#import "WBDanmakuReportViewDelegate-Protocol.h"
#import "WBVideoDanmakuRendererDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, UIView, WBDanmakuReportView, WBStatus, WBVideoDanmakuActionView, WBVideoDanmakuRenderer, WBVideoDanmakuReportManager, WBVideoDanmakuSegment, WBVideoDanmakuSegmentItem;

@interface WBVideoDanmakuRenderPluginView : WBVideoExternalPluginBaseView <WBVideoDanmakuRendererDelegate, WBDanmakuReportViewDelegate>
{
    struct {
        unsigned int danmakuStateEnabled:1;
    } _flags;
    UIView *_danmakuBackView;
    WBVideoDanmakuRenderer *_renderer;
    double _currentTime;
    double _previoutTime;
    WBVideoDanmakuSegment *_currentSegment;
    NSMutableArray *_loadedSegmentArr;
    NSMutableSet *_currentQueryingItems;
    NSMutableDictionary *_segmentItemQueryFailedTimes;
    NSMutableArray *_playedNoticeDanmakuArr;
    _Bool _enteringScreen;
    _Bool _userWillSeek;
    _Bool _active;
    WBVideoDanmakuActionView *_danmakuActionView;
    WBVideoDanmakuSegmentItem *_item;
    WBDanmakuReportView *_reportView;
    WBVideoDanmakuReportManager *_danmakuReportManager;
    WBStatus *_status;
}

+ (unsigned long long)defaultPlaybackStateVisibilityOptions;
+ (unsigned long long)defaultPresentationStateVisibilityOptions;
@property(retain, nonatomic) WBStatus *status; // @synthesize status=_status;
@property(retain, nonatomic) WBVideoDanmakuReportManager *danmakuReportManager; // @synthesize danmakuReportManager=_danmakuReportManager;
@property(retain, nonatomic) WBDanmakuReportView *reportView; // @synthesize reportView=_reportView;
@property(retain, nonatomic) WBVideoDanmakuSegmentItem *item; // @synthesize item=_item;
@property(retain, nonatomic) WBVideoDanmakuActionView *danmakuActionView; // @synthesize danmakuActionView=_danmakuActionView;
- (void).cxx_destruct;
- (void)videoControlStateChanged:(id)arg1;
- (void)videoDanmakuStateChanged:(id)arg1;
- (void)userComposeVideoDanmaku:(id)arg1 withStatusID:(id)arg2 commentId:(id)arg3;
- (void)reportViewCommitReport:(id)arg1 mainReportItem:(id)arg2 subReportItem:(id)arg3;
- (void)reportView:(id)arg1 didSelectFirstLevelItem:(id)arg2 andSecondLevelItem:(id)arg3;
- (void)reportViewDidDismiss:(id)arg1;
- (void)reportViewDidShow:(id)arg1;
- (void)danmakuRendererClick:(id)arg1 spriteParams:(id)arg2;
- (double)timeForDanmakuRenderer:(id)arg1;
- (void)videoPlayerControllerUserWillStartSeek:(id)arg1;
- (void)videoPlayerController:(id)arg1 willExitFullscreenAnimated:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 didEnterFullscreenAnimated:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 willEnterFullscreenAnimated:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 didUpdateCurrentTime:(CDStruct_1b6d18a9)arg2;
- (void)videoPlayerControllerDidSwitchPlaySpeedRate:(id)arg1 hasChange:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 didTransitionFromPlaybackState:(long long)arg2 toPlaybackState:(long long)arg3;
- (void)showDanmakuReportView;
- (void)dismissDanmakuActionView;
- (void)dismissDanmakuActionViewWithDelay:(double)arg1;
- (void)updateDanmakuRenderStateWithPlaybackState;
- (double)currentDanmakuSegmentCacheTime;
- (long long)currentDanmakuSegmentSize;
- (double)danmakuSpeedWithContent:(id)arg1;
- (id)walkTextSpriteDescriptorWithDanmakuSegmentItem:(id)arg1;
- (void)removeDanmakuSpritesFromRenderWithSegment:(id)arg1;
- (void)addDanmakuSpritesToRenderWithSegment:(id)arg1;
- (void)updateDanmakuResourceWithPlayerTime:(long long)arg1 isPrefetch:(_Bool)arg2;
- (void)updateTimes;
- (void)loadNoticeDanmaku;
- (void)initDanmakuRender;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)prepareForHidden;
- (void)prepareForDisplay;
- (_Bool)visibilityWithPlaybackState:(unsigned long long)arg1 presentationState:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

