//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSCache, NSMutableArray, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface WBFResourceLoaderManager : NSObject
{
    _Bool _running;
    _Bool _synchronizedCacheWriteEnabled;
    _Bool _synchronizedProxyPathUpdatesEnabled;
    _Bool _hlsPlaybackCacheEnabled;
    _Bool _dashPlaybackEnabled;
    _Bool _dashDemuxRefactorEnabled;
    _Bool _asyncHttpOpenDisabled;
    _Bool _generatesPreloadTaskInfo;
    _Bool _restrictedBackgroundLoadingEnabled;
    _Bool _preventsDuplicatePreloads;
    _Bool _videoCacheStorageEnabled;
    _Bool _resourceLoadingDisabledDueToBackgroundState;
    NSString *_customHttpSchemeOverride;
    CDUnknownBlockType _cacheKeyRequestBlock;
    CDUnknownBlockType _storageProgressBlock;
    NSString *_cacheDirectory;
    CDUnknownBlockType _requestUpdateBlock;
    CDUnknownBlockType _asyncRequestUpdateBlock;
    CDUnknownBlockType _hostResolutionBlock;
    NSString *_currentPrefetchKey;
    NSArray *_pendingPrefetchKeys;
    NSSet *_finishedPrefetchKeys;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSMutableArray *_pendingTasks;
    NSMutableArray *_storageCacheKeys;
    NSCache *_preloadedCacheKeys;
}

+ (id)notificationCenter;
+ (id)defaultManager;
@property(retain, nonatomic) NSCache *preloadedCacheKeys; // @synthesize preloadedCacheKeys=_preloadedCacheKeys;
@property(nonatomic) _Bool resourceLoadingDisabledDueToBackgroundState; // @synthesize resourceLoadingDisabledDueToBackgroundState=_resourceLoadingDisabledDueToBackgroundState;
@property(retain, nonatomic) NSMutableArray *storageCacheKeys; // @synthesize storageCacheKeys=_storageCacheKeys;
@property(retain, nonatomic) NSMutableArray *pendingTasks; // @synthesize pendingTasks=_pendingTasks;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *ioQueue; // @synthesize ioQueue=_ioQueue;
@property(readonly, nonatomic) NSSet *finishedPrefetchKeys; // @synthesize finishedPrefetchKeys=_finishedPrefetchKeys;
@property(readonly, nonatomic) NSArray *pendingPrefetchKeys; // @synthesize pendingPrefetchKeys=_pendingPrefetchKeys;
@property(readonly, nonatomic) NSString *currentPrefetchKey; // @synthesize currentPrefetchKey=_currentPrefetchKey;
@property(copy, nonatomic) CDUnknownBlockType hostResolutionBlock; // @synthesize hostResolutionBlock=_hostResolutionBlock;
@property(copy, nonatomic) CDUnknownBlockType asyncRequestUpdateBlock; // @synthesize asyncRequestUpdateBlock=_asyncRequestUpdateBlock;
@property(copy, nonatomic) CDUnknownBlockType requestUpdateBlock; // @synthesize requestUpdateBlock=_requestUpdateBlock;
@property(retain, nonatomic) NSString *cacheDirectory; // @synthesize cacheDirectory=_cacheDirectory;
@property(copy, nonatomic) CDUnknownBlockType storageProgressBlock; // @synthesize storageProgressBlock=_storageProgressBlock;
@property(nonatomic) _Bool videoCacheStorageEnabled; // @synthesize videoCacheStorageEnabled=_videoCacheStorageEnabled;
@property(copy, nonatomic) CDUnknownBlockType cacheKeyRequestBlock; // @synthesize cacheKeyRequestBlock=_cacheKeyRequestBlock;
@property(nonatomic) _Bool preventsDuplicatePreloads; // @synthesize preventsDuplicatePreloads=_preventsDuplicatePreloads;
@property(nonatomic) _Bool restrictedBackgroundLoadingEnabled; // @synthesize restrictedBackgroundLoadingEnabled=_restrictedBackgroundLoadingEnabled;
@property(nonatomic) _Bool generatesPreloadTaskInfo; // @synthesize generatesPreloadTaskInfo=_generatesPreloadTaskInfo;
@property(nonatomic) _Bool asyncHttpOpenDisabled; // @synthesize asyncHttpOpenDisabled=_asyncHttpOpenDisabled;
@property(nonatomic) _Bool dashDemuxRefactorEnabled; // @synthesize dashDemuxRefactorEnabled=_dashDemuxRefactorEnabled;
@property(nonatomic) _Bool dashPlaybackEnabled; // @synthesize dashPlaybackEnabled=_dashPlaybackEnabled;
@property(nonatomic) _Bool hlsPlaybackCacheEnabled; // @synthesize hlsPlaybackCacheEnabled=_hlsPlaybackCacheEnabled;
@property(nonatomic) _Bool synchronizedProxyPathUpdatesEnabled; // @synthesize synchronizedProxyPathUpdatesEnabled=_synchronizedProxyPathUpdatesEnabled;
@property(nonatomic) _Bool synchronizedCacheWriteEnabled; // @synthesize synchronizedCacheWriteEnabled=_synchronizedCacheWriteEnabled;
@property(retain, nonatomic) NSString *customHttpSchemeOverride; // @synthesize customHttpSchemeOverride=_customHttpSchemeOverride;
@property(readonly, nonatomic) _Bool running; // @synthesize running=_running;
- (void).cxx_destruct;
- (void)createCacheEntryWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)convertCacheFormatIfNeededForKey:(id)arg1;
- (void)queryCacheStatusWithURL:(id)arg1 playbackIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_updateGlobalResourceLoadingStates;
- (void)applicationBecomeActiveNotification:(id)arg1;
- (void)applicationResignActiveNotification:(id)arg1;
- (void)applicationEnterBackgroundNotification:(id)arg1;
- (void)applicationEnterForgroundNotificaiton:(id)arg1;
- (void)setCacheDirectory:(id)arg1 forCacheKey:(id)arg2;
- (id)getCacheDirectory;
- (void)setNeedsUpdateProxyPath;
- (void)resourceLoaderDidUpdateStorageProgress:(long long)arg1 totalSize:(long long)arg2 cacheKey:(id)arg3;
- (void)resourceLoaderDidFinishStorage:(long long)arg1 cacheKey:(id)arg2;
- (void)resourceLoaderDidPerformHostResolution:(id)arg1 family:(int)arg2 key:(id)arg3 userInfo:(id)arg4 traceId:(long long)arg5 completion:(CDUnknownBlockType)arg6;
- (void)resourceLoaderDidReceiveResponse:(id)arg1 key:(id)arg2;
- (void)wbmd_resourceLoaderWillSendRequest:(struct WBMDHttpRequestCallbackInfo *)arg1 key:(id)arg2 userInfo:(id)arg3 requestType:(int)arg4 taskInfo:(struct WBCNetworkTaskInfo *)arg5 completion:(CDUnknownBlockType)arg6;
- (void)legacy_resourceLoaderWillSendRequest:(id *)arg1 key:(id)arg2 headers:(id *)arg3 userInfo:(id)arg4 requestType:(int)arg5 taskInfo:(struct WBFResourceNetworkTaskInfo)arg6;
- (id)cacheLogForKey:(id)arg1;
- (id)cacheInfoForKey:(id)arg1;
- (void)resetCacheWithPriority:(long long)arg1 cacheKeys:(id)arg2;
- (void)updateVideosPriority:(long long)arg1 cacheKeys:(id)arg2;
- (_Bool)isStorageCacheAtDirectory:(id)arg1;
- (_Bool)isPreloadCacheAtDirectory:(id)arg1;
- (void)stopPreloadVideoWithCacheKeys:(id)arg1;
- (void)stopPreloadVideoWithCacheKey:(id)arg1;
- (void)stopAllVideoPreloads;
- (void)stopCurrentStorageTask;
- (void)_createDashPreloadTaskFromRep:(id)arg1 task:(id)arg2 headers:(id)arg3 intoVector:(vector_d0687bf1 *)arg4;
- (void)_createDashPreloadTasksFromTracks:(const vector_2878bd1a *)arg1 forPreloadTask:(id)arg2 intoVector:(vector_d0687bf1 *)arg3;
- (void)_createCacheTasksFromPreloadTask:(id)arg1 intoVector:(vector_d0687bf1 *)arg2;
- (void)preloadViewWithPreloadTasks:(id)arg1;
- (void)commitPreloadTransaction;
- (void)preloadVideoWithPreloadTask:(id)arg1;
- (void)beginPreloadTransaction;
- (void)_DEBUG_resetCacheMemoryStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)clearNonStorageCaches;
- (void)clearAllCaches;
- (_Bool)createDirectoryIfNotExist:(id)arg1;
- (void)run;
- (id)init;
- (void)dealloc;
- (void)videokit_reachabilityDidChangeNotification:(id)arg1;
- (void)videokit_start;
- (void)logHttpDNSNodeWithRequest:(id)arg1 originHeader:(id)arg2 originUrl:(id)arg3 mediaId:(id)arg4 startTime:(double)arg5;
- (void)videokit_setupDefaultRequestUpdater;
- (_Bool)videokit_shouldPerformHttpDnsWithRequest:(id)arg1 taskInfo:(struct WBFResourceNetworkTaskInfo)arg2;

@end

