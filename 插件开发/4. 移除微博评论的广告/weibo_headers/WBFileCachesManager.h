//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface WBFileCachesManager : NSObject
{
    id observerEnterForeground;
    id observerEnterBackground;
    CDUnknownBlockType blockClear;
    _Bool _isClearing;
    _Bool _isDictionarySnapshotChanged;
    float _defaultRate;
    NSDictionary *_dictionarySnapshot;
    NSSet *_nameSpaceClearExclude;
    unsigned long long _defaultType;
    unsigned long long _defaultSize;
    unsigned long long _defaultTime;
    unsigned long long _defaultSort;
    unsigned long long _defaultCaculateType;
    unsigned long long _defaultManageType;
    unsigned long long _defaultCatagory;
    unsigned long long _defaultByte;
    NSDictionary *_dictionaryCustomeNameSpaceNotification;
    NSObject<OS_dispatch_queue> *_dispatch_queue_file_caches;
    NSObject<OS_dispatch_queue> *_dispatch_queue_file_caches_property;
    NSString *_filefullSnapshot;
}

+ (void)writeNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 type:(id)arg4 callback:(CDUnknownBlockType)arg5;
+ (id)writeNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 type:(id)arg4;
+ (id)arraySortWithArrayItemfull:(id)arg1 sortKey:(id)arg2 sortOrder:(id)arg3;
+ (id)arrayItemfullWithPathfull:(id)arg1 itemType:(id)arg2 recursive:(_Bool)arg3;
+ (id)arrayItemfullWithPathfull:(id)arg1 sort:(unsigned long long)arg2;
+ (unsigned long long)sizeWithFolder:(const char *)arg1;
+ (id)snapshotWithFolder:(id)arg1 haveSizePolicy:(_Bool)arg2 haveTimePolicy:(_Bool)arg3;
+ (id)timeWithItemfull:(id)arg1;
+ (id)sizeWithItemfull:(id)arg1;
+ (unsigned long long)sizeWithNameSpaceTotal;
+ (unsigned long long)sizeWithFoldPath:(id)arg1;
+ (unsigned long long)keepDataTotalSize;
+ (unsigned long long)sizeWithCatagoryTotal:(unsigned long long)arg1;
+ (unsigned long long)sizeWithNameSpace:(id)arg1;
+ (void)changeFileCachesRate:(id)arg1 policy:(unsigned long long)arg2 rate:(float)arg3 catagory:(unsigned long long)arg4 type:(unsigned long long)arg5 caculateSize:(unsigned long long)arg6;
+ (id)arrayPathfullTotalFromItemfull;
+ (id)arrayPathfullTotal;
+ (id)pathfullWithNameSpace:(id)arg1;
+ (id)filefullWithNameSpace:(id)arg1 filename:(id)arg2;
+ (id)pathfullWithNameSpace:(id)arg1 type:(unsigned long long)arg2;
+ (id)pathfullWithType:(unsigned long long)arg1;
+ (id)pathfullWithDirectory:(unsigned long long)arg1;
+ (id)firstNameSelector:(SEL)arg1;
+ (id)stringTrim:(id)arg1;
+ (id)pathfullDescriptionTotal;
+ (id)pathfullDescription:(id)arg1;
+ (id)pathfullPolicy:(id)arg1;
+ (id)getPolicyWithPathfull:(id)arg1 type:(unsigned long long *)arg2 size:(unsigned long long *)arg3 time:(unsigned long long *)arg4 sort:(unsigned long long *)arg5 rate:(float *)arg6 catagory:(unsigned long long *)arg7 manageType:(unsigned long long *)arg8 caculateSize:(unsigned long long *)arg9;
+ (id)getPolicyEnumWithPathfull:(id)arg1 type:(unsigned long long *)arg2 size:(unsigned long long *)arg3 time:(unsigned long long *)arg4 sort:(unsigned long long *)arg5 rate:(float *)arg6;
+ (id)nameSpaceDescriptionTotal;
+ (id)nameSpaceDescription:(id)arg1;
+ (id)nameSpacePolicy:(id)arg1;
+ (id)getNameSpace:(id)arg1 type:(unsigned long long *)arg2 size:(unsigned long long *)arg3 time:(unsigned long long *)arg4 sort:(unsigned long long *)arg5 rate:(float *)arg6;
+ (id)dictionaryPolicyWithPathfull:(id)arg1;
+ (id)dictionaryPolicy:(unsigned long long)arg1 rate:(float)arg2 catagory:(unsigned long long)arg3 type:(unsigned long long)arg4 caculateSize:(unsigned long long)arg5;
+ (void)componentPolicy:(unsigned long long)arg1 type:(unsigned long long *)arg2 size:(unsigned long long *)arg3 time:(unsigned long long *)arg4 sort:(unsigned long long *)arg5;
+ (id)enumSortConvertDescription:(unsigned long long)arg1;
+ (id)enumSortConvertName:(unsigned long long)arg1;
+ (unsigned long long)timeConvertEnumTime:(unsigned long long)arg1;
+ (unsigned long long)enumTimeConvertTime:(unsigned long long)arg1;
+ (unsigned long long)sizeConvertEnumSize:(unsigned long long)arg1;
+ (unsigned long long)enumSizeConvertSize:(unsigned long long)arg1;
+ (id)enumTypeConvertName:(unsigned long long)arg1;
+ (void)snapshotUpdate:(id)arg1 nameSpace:(id)arg2 filefull:(id)arg3 sizeUpdate:(double)arg4;
+ (void)snapshotUpdate:(id)arg1 pathfull:(id)arg2 resetTimeScan:(_Bool)arg3;
+ (void)snapshotUpdateWithArrayPathfull:(id)arg1;
+ (void)snapshotScan;
+ (void)snapshotCreate;
+ (void)scanFileCachesRootFile;
+ (void)emptyTemp;
+ (void)autoEmptyFileCaches:(CDUnknownBlockType)arg1;
+ (void)autoClearFileCaches:(CDUnknownBlockType)arg1;
+ (void)autoEmptyFileCachesSync:(_Bool)arg1;
+ (id)logStringByCataory:(unsigned long long)arg1;
+ (void)autoClearFileCaches;
+ (void)emptyNameSpace:(id)arg1 fileExclude:(id)arg2;
+ (void)clearNameSpace:(id)arg1 fileExclude:(id)arg2;
+ (void)clearPathfull:(id)arg1 type:(unsigned long long)arg2 size:(unsigned long long)arg3 time:(unsigned long long)arg4 sort:(unsigned long long)arg5 rate:(float)arg6 fileExclude:(id)arg7;
+ (void)clearPathfull:(id)arg1 arrayFilefull:(id)arg2 type:(unsigned long long)arg3 size:(unsigned long long)arg4 time:(unsigned long long)arg5 sort:(unsigned long long)arg6 rate:(float)arg7 fileExclude:(id)arg8;
+ (id)fileHandleEditWeekRemoveFilename:(id)arg1;
+ (id)fileHandleEdit100MRemoveFilename:(id)arg1;
+ (id)fileHandleEditCoreFilename:(id)arg1;
+ (id)fileHandleEditUserFilename:(id)arg1;
+ (id)fileHandleEditTempFilename:(id)arg1;
+ (id)fileHandleSaveWeekRemoveFilename:(id)arg1;
+ (id)fileHandleSave100MRemoveFilename:(id)arg1;
+ (id)fileHandleSaveCoreFilename:(id)arg1;
+ (id)fileHandleSaveUserFilename:(id)arg1;
+ (id)fileHandleSaveTempFilename:(id)arg1;
+ (id)fileHandleReadWeekRemoveFilename:(id)arg1;
+ (id)fileHandleRead100MRemoveFilename:(id)arg1;
+ (id)fileHandleReadCoreFilename:(id)arg1;
+ (id)fileHandleReadUserFilename:(id)arg1;
+ (id)fileHandleReadTempFilename:(id)arg1;
+ (id)attributeWeekRemoveFilename:(id)arg1;
+ (id)attribute100MRemoveFilename:(id)arg1;
+ (id)attributeCoreFilename:(id)arg1;
+ (id)attributeUserFilename:(id)arg1;
+ (id)attributeTempFilename:(id)arg1;
+ (id)removeWeekRemoveFilename:(id)arg1;
+ (id)remove100MRemoveFilename:(id)arg1;
+ (id)removeCoreFilename:(id)arg1;
+ (id)removeUserFilename:(id)arg1;
+ (id)removeTempFilename:(id)arg1;
+ (void)appendWeekRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)append100MRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)appendCoreFilename:(id)arg1 data:(id)arg2;
+ (void)appendUserFilename:(id)arg1 data:(id)arg2;
+ (void)appendTempFilename:(id)arg1 data:(id)arg2;
+ (void)insertWeekRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)insert100MRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)insertCoreFilename:(id)arg1 data:(id)arg2;
+ (void)insertUserFilename:(id)arg1 data:(id)arg2;
+ (void)insertTempFilename:(id)arg1 data:(id)arg2;
+ (void)saveWeekRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)save100MRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)saveCoreFilename:(id)arg1 data:(id)arg2;
+ (void)saveUserFilename:(id)arg1 data:(id)arg2;
+ (void)saveTempFilename:(id)arg1 data:(id)arg2;
+ (id)readWeekRemoveFilename:(id)arg1;
+ (id)read100MRemoveFilename:(id)arg1;
+ (id)readCoreFilename:(id)arg1;
+ (id)readUserFilename:(id)arg1;
+ (id)readTempFilename:(id)arg1;
+ (id)fileHandleNameSpace:(id)arg1 filename:(id)arg2 type:(id)arg3;
+ (id)fileHandleEditNameSpace:(id)arg1 filename:(id)arg2;
+ (id)fileHandleSaveNameSpace:(id)arg1 filename:(id)arg2;
+ (id)fileHandleReadNameSpace:(id)arg1 filename:(id)arg2;
+ (id)attributeNameSpace:(id)arg1 filename:(id)arg2;
+ (id)removeNameSpace:(id)arg1 filename:(id)arg2;
+ (void)appendNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 callback:(CDUnknownBlockType)arg4;
+ (id)appendNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3;
+ (void)insertNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 callback:(CDUnknownBlockType)arg4;
+ (id)insertNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3;
+ (void)saveNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 callback:(CDUnknownBlockType)arg4;
+ (id)saveNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3;
+ (void)readNameSpace:(id)arg1 filename:(id)arg2 pathfullMoveFrom:(id)arg3 callback:(CDUnknownBlockType)arg4;
+ (id)readNameSpace:(id)arg1 filename:(id)arg2 pathfullMoveFrom:(id)arg3;
+ (void)readNameSpace:(id)arg1 filename:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (id)readNameSpace:(id)arg1 filename:(id)arg2;
+ (id)changeNameSpace:(id)arg1 nameSpaceNew:(id)arg2 policy:(unsigned long long)arg3 rate:(float)arg4 catagory:(unsigned long long)arg5 type:(unsigned long long)arg6 caculateSize:(unsigned long long)arg7;
+ (id)changeNameSpace:(id)arg1 nameSpaceNew:(id)arg2 policy:(unsigned long long)arg3 catagory:(unsigned long long)arg4 type:(unsigned long long)arg5 caculateSize:(unsigned long long)arg6;
+ (id)changeNameSpace:(id)arg1 policy:(unsigned long long)arg2 catagory:(unsigned long long)arg3 type:(unsigned long long)arg4 caculateSize:(unsigned long long)arg5;
+ (id)removeNameSpace:(id)arg1;
+ (id)createNameSpace:(id)arg1 policy:(unsigned long long)arg2 rate:(float)arg3 catagory:(unsigned long long)arg4 type:(unsigned long long)arg5 caculateSize:(unsigned long long)arg6;
+ (id)createNameSpace:(id)arg1 policy:(unsigned long long)arg2 catagory:(unsigned long long)arg3 type:(unsigned long long)arg4 caculateSize:(unsigned long long)arg5;
+ (id)createNameSpace:(id)arg1 policy:(unsigned long long)arg2;
+ (_Bool)existsNameSpace:(id)arg1 filename:(id)arg2;
+ (_Bool)existsNameSpace:(id)arg1;
+ (id)sharedInstance;
+ (void)createPredefinedNameSpace;
@property(nonatomic) _Bool isDictionarySnapshotChanged; // @synthesize isDictionarySnapshotChanged=_isDictionarySnapshotChanged;
@property(retain, nonatomic) NSString *filefullSnapshot; // @synthesize filefullSnapshot=_filefullSnapshot;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatch_queue_file_caches_property; // @synthesize dispatch_queue_file_caches_property=_dispatch_queue_file_caches_property;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatch_queue_file_caches; // @synthesize dispatch_queue_file_caches=_dispatch_queue_file_caches;
@property(retain, nonatomic) NSDictionary *dictionaryCustomeNameSpaceNotification; // @synthesize dictionaryCustomeNameSpaceNotification=_dictionaryCustomeNameSpaceNotification;
@property(nonatomic) unsigned long long defaultByte; // @synthesize defaultByte=_defaultByte;
@property(nonatomic) unsigned long long defaultCatagory; // @synthesize defaultCatagory=_defaultCatagory;
@property(nonatomic) unsigned long long defaultManageType; // @synthesize defaultManageType=_defaultManageType;
@property(nonatomic) unsigned long long defaultCaculateType; // @synthesize defaultCaculateType=_defaultCaculateType;
@property(nonatomic) float defaultRate; // @synthesize defaultRate=_defaultRate;
@property(nonatomic) unsigned long long defaultSort; // @synthesize defaultSort=_defaultSort;
@property(nonatomic) unsigned long long defaultTime; // @synthesize defaultTime=_defaultTime;
@property(nonatomic) unsigned long long defaultSize; // @synthesize defaultSize=_defaultSize;
@property(nonatomic) unsigned long long defaultType; // @synthesize defaultType=_defaultType;
@property(retain, nonatomic) NSSet *nameSpaceClearExclude; // @synthesize nameSpaceClearExclude=_nameSpaceClearExclude;
- (void).cxx_destruct;
- (void)enterBackground;
- (void)enterForeground;
@property(retain, nonatomic) NSDictionary *dictionarySnapshot; // @synthesize dictionarySnapshot=_dictionarySnapshot;
@property(nonatomic) _Bool isClearing; // @synthesize isClearing=_isClearing;
- (void)dealloc;
- (id)init;

@end

