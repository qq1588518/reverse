//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WBFAVAsset-Protocol.h"

@class NSArray, NSDictionary, NSString, NSURL, WBFAssetMessagePool, WBFPlayerAdaptationContext;
@protocol OS_dispatch_queue, WBFAssetCacheDelegate, WBFAssetInternalDelegate;

@interface WBFAsset : NSObject <WBFAVAsset>
{
    struct IjkMediaPlayer *_mediaPlayer;
    WBFAssetMessagePool *_messagePool;
    struct {
        unsigned int prepared:1;
        unsigned int prepareFinished:1;
        unsigned int preparedMessageReceived:1;
        unsigned int shutedDown:1;
        unsigned int ready:1;
    } _flags;
    double _creationTimestamp;
    double _moovHeaderBytes;
    double _moovBufferSize;
    double _consumedDataBytes;
    struct {
        _Bool valid;
        double firstTaskStartTimestamp;
        double firstTaskDuration;
        double firstTransactionHTTPRequestResponseDuration;
        double firstTransactionDNSDuration;
        double firstTransactionIPConnectDuration;
        long long taskCountBeforeFirstFrame;
        long long reusedConnectionCountBeforeFirstFrame;
    } _httpMetricsStats;
    NSString *_httpMetricsRemoteAddressPort;
    _Bool _respondsToAssetMessage;
    float _wbf_estimatedDataRate;
    float _pixelSAR;
    NSString *_mediaTitle;
    NSString *_mediaFormat;
    NSString *_httpContextIdentifier;
    NSURL *_URL;
    NSArray *_tracks;
    NSObject<OS_dispatch_queue> *_operationQueue;
    NSArray *_availableMediaCharacteristicsWithMediaSelectionOptions;
    id _collectHttpContextOpenObserver;
    NSDictionary *_additionalHTTPHeaderFields;
    long long _prefetchSizeHint;
    long long _contentLengthHint;
    long long _averageBitrateHint;
    double _durationHint;
    long long _recommendReceiveBufferSize;
    id <WBFAssetInternalDelegate> _internalDelegate;
    id <WBFAssetCacheDelegate> _cacheDelegate;
    WBFPlayerAdaptationContext *_adaptationContext;
    long long _automaticMediaSelectionMaximumResolution;
    long long _automaticMediaSelectionPreferedResolution;
    double _playbackMaximumBufferDuration;
    struct CGSize _wbf_naturalSize;
    struct CGSize _videoSize;
    struct CGSize _videoSizeInPixel;
    CDStruct_1b6d18a9 _duration;
}

+ (id)assetWithURL:(id)arg1;
@property(nonatomic) double playbackMaximumBufferDuration; // @synthesize playbackMaximumBufferDuration=_playbackMaximumBufferDuration;
@property(nonatomic) long long automaticMediaSelectionPreferedResolution; // @synthesize automaticMediaSelectionPreferedResolution=_automaticMediaSelectionPreferedResolution;
@property(nonatomic) long long automaticMediaSelectionMaximumResolution; // @synthesize automaticMediaSelectionMaximumResolution=_automaticMediaSelectionMaximumResolution;
@property(readonly, nonatomic) WBFPlayerAdaptationContext *adaptationContext; // @synthesize adaptationContext=_adaptationContext;
@property(nonatomic) __weak id <WBFAssetCacheDelegate> cacheDelegate; // @synthesize cacheDelegate=_cacheDelegate;
@property(nonatomic) __weak id <WBFAssetInternalDelegate> internalDelegate; // @synthesize internalDelegate=_internalDelegate;
@property(nonatomic) long long recommendReceiveBufferSize; // @synthesize recommendReceiveBufferSize=_recommendReceiveBufferSize;
@property(nonatomic) double durationHint; // @synthesize durationHint=_durationHint;
@property(nonatomic) long long averageBitrateHint; // @synthesize averageBitrateHint=_averageBitrateHint;
@property(nonatomic) long long contentLengthHint; // @synthesize contentLengthHint=_contentLengthHint;
@property(nonatomic) long long prefetchSizeHint; // @synthesize prefetchSizeHint=_prefetchSizeHint;
@property(copy, nonatomic) NSDictionary *additionalHTTPHeaderFields; // @synthesize additionalHTTPHeaderFields=_additionalHTTPHeaderFields;
@property(retain, nonatomic) id collectHttpContextOpenObserver; // @synthesize collectHttpContextOpenObserver=_collectHttpContextOpenObserver;
@property(retain, nonatomic) NSArray *availableMediaCharacteristicsWithMediaSelectionOptions; // @synthesize availableMediaCharacteristicsWithMediaSelectionOptions=_availableMediaCharacteristicsWithMediaSelectionOptions;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) float pixelSAR; // @synthesize pixelSAR=_pixelSAR;
@property(nonatomic) struct CGSize videoSizeInPixel; // @synthesize videoSizeInPixel=_videoSizeInPixel;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(retain, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
@property(nonatomic) struct CGSize wbf_naturalSize; // @synthesize wbf_naturalSize=_wbf_naturalSize;
@property(nonatomic) float wbf_estimatedDataRate; // @synthesize wbf_estimatedDataRate=_wbf_estimatedDataRate;
@property(nonatomic) CDStruct_1b6d18a9 duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool respondsToAssetMessage; // @synthesize respondsToAssetMessage=_respondsToAssetMessage;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSString *httpContextIdentifier; // @synthesize httpContextIdentifier=_httpContextIdentifier;
@property(retain) NSString *mediaFormat; // @synthesize mediaFormat=_mediaFormat;
@property(retain) NSString *mediaTitle; // @synthesize mediaTitle=_mediaTitle;
- (void).cxx_destruct;
- (id)customProtocolURLScheme;
- (id)mediaSelectionGroupForMediaCharacteristic:(id)arg1;
- (void)_assetDidCreateStreamAdaptor:(void *)arg1;
- (void)_configureAdaptationContext:(id)arg1;
- (_Bool)fillServiceQualityInfo:(id)arg1 localCacheAvailable:(_Bool)arg2;
- (void)postMessage:(id)arg1;
- (id)obtainMessage;
- (struct CGSize)naturalSizeWithTracks:(id)arg1;
- (void)_retriveInfomationFromMeta:(struct IjkMediaMeta *)arg1;
- (id)_assetResourceCacheKeyWithUserInfo:(id *)arg1;
- (void)_assetDidReportFirstFrameStep:(id)arg1 failed:(_Bool)arg2;
- (void)_assetDidGetCacheType:(int)arg1 cacheSize:(long long)arg2;
- (id)_assetPlayerWholeLineTraceLogWithTraceId:(id)arg1;
- (id)wbf_reportPlayerWholeLineTraceLogWithTraceId:(id)arg1;
- (id)_assetReportTraceInfoWithState:(long long)arg1;
- (id)wbf_reportTraceInfoWithState:(long long)arg1;
- (void)_assetDidUpdateStreamSelection:(int)arg1 type:(int)arg2;
- (void)_assetDidUpdateCacheActiveState:(_Bool)arg1;
- (void)_assetDidRenderFirstAudioFrame;
- (void)_assetDidRenderFirstVideoFrame;
- (void)_assetDidUpdateVideoToolboxUsage:(_Bool)arg1;
- (void)_assetDidCompleteSeekingWithSeekId:(int)arg1;
- (void)_assetDidUpdatePlaybackState;
- (void)_assetDidUpdateBufferingTime:(int)arg1;
- (void)_assetDidUpdateBufferingBytes:(int)arg1;
- (void)_assetDidUpdateBufferPosition:(int)arg1 progress:(int)arg2;
- (void)_assetLikelyToKeepUp;
- (void)_assetDidStall;
- (void)_assetDidUpdateAspectRatioNumerator:(int)arg1 denominator:(int)arg2;
- (void)_assetDidUpdateVideoSize:(struct CGSize)arg1;
- (void)_assetDidPlayToEnd;
- (void)_assetReadyToPlay;
- (void)_assetNonFatalError:(id)arg1;
- (void)_assetError:(id)arg1;
- (void)_assetDidCollectHttpMetrics:(struct WBHTTPTaskMetrics *)arg1;
- (void)_assetDidOpenHTTPContext:(id)arg1;
- (void)_performActionIfMediaPlayerPrepared:(CDUnknownBlockType)arg1;
- (void)_updateVideoSize;
- (void)setDisablesIdleTimer:(_Bool)arg1;
- (id)initWithURL:(id)arg1 options:(id)arg2;
- (void)shutdownWithCompletion:(CDUnknownBlockType)arg1;
- (void)shutdownAsync:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_performAsyncOperation:(CDUnknownBlockType)arg1;
- (void)performAsyncOperation:(CDUnknownBlockType)arg1;
- (void)updateBackgroundPauseEnabled:(_Bool)arg1;
- (void)dealloc;
- (long long)_downloaderAudioBufferBytes;
- (long long)_downloaderVideoBufferBytes;
- (long long)_downloaderAvailableBufferBytes;
- (int)_currentPlayerStateMachineState;
- (unsigned long long)_downloadedDataLengthInPeriod;
- (long long)_currentCacheType;
- (void)_setVolume:(float)arg1 rampSec:(float)arg2;
- (double)_duration;
- (void)_seekToPosition:(double)arg1 seekId:(int)arg2;
- (double)_playableDuration;
- (id)LEGACY_wbf_reportPlayerPlayStrategyMetrics;
- (long long)_decoderType;
- (double)_decoderFPSRatio;
- (double)_currentBandwidthBitPerSecond;
- (float)_floatPropertyForKey:(int)arg1 defaultValue:(float)arg2;
- (long long)_intPropertyForKey:(int)arg1 defaultValue:(long long)arg2;
- (double)_currentNetworkLatencySeconds;
- (double)_currentBitrateBitPerSecond;
- (double)_bufferHealthSeconds;
- (unsigned long long)_networkActivityBytes;
- (double)_currentPosition;
- (void)_setDisplayEngine:(id)arg1;
- (void)_updatePlaybackRate:(double)arg1;
- (void)_pausePlaying;
- (void)_startPlaying;
- (void)_stopPlaying;
- (void)_prepareToPlay;
- (void)_updateOptionsForMediaPlayer:(struct IjkMediaPlayer *)arg1;
- (_Bool)_wholeLinkTraceLogEnabled;
- (_Bool)_playbackRateEnabled;
- (_Bool)_videoToolboxEnabled;
- (_Bool)_bandwidthMeasureEnabled;
- (_Bool)_dashTraceLogDetailEnabled;
- (_Bool)_dashTraceLogEnabled;
- (_Bool)_generalHttpMetricsReportEnabled;
- (_Bool)_firstFrameWorkflowStatisticEnabaled;
- (_Bool)_decodePerformanceReportEnabled;
- (_Bool)_playerRawLogUploadEnabled;
- (_Bool)_bufferingStatisticEnabled;
- (_Bool)_firstFrameMetricsReportEnabled;
- (_Bool)_asynchronousOperationsEnabled;
- (_Bool)_httpContextMetricsReportEnabled;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

