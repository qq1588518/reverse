//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSString, WBVideoCachingItem, WBVideoCachingManagerStateAnnouncer;
@protocol OS_dispatch_queue;

@interface WBVideoCachingManager : NSObject
{
    _Bool _isReady;
    _Bool _usingFileCacheManager;
    NSMutableDictionary *_allItemsDict;
    NSMutableArray *_cachedItemIdList;
    NSMutableArray *_cachingItemIdList;
    NSMutableArray *_pendingItemIdList;
    WBVideoCachingItem *_currentCachingItem;
    WBVideoCachingItem *_nextCachingItem;
    NSObject<OS_dispatch_queue> *_cachingQueue;
    NSString *_cacheRootPath;
    WBVideoCachingManagerStateAnnouncer *_announcer;
    WBVideoCachingItem *_lastProgressCallbackItem;
    double _lastProgressCallbackTime;
    double _progressCallbackInterval;
    NSMutableDictionary *_loggerDict;
    NSString *_fromCachingPath;
    NSString *_toCachingPath;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSString *toCachingPath; // @synthesize toCachingPath=_toCachingPath;
@property(retain, nonatomic) NSString *fromCachingPath; // @synthesize fromCachingPath=_fromCachingPath;
@property(nonatomic) _Bool usingFileCacheManager; // @synthesize usingFileCacheManager=_usingFileCacheManager;
@property(retain, nonatomic) NSMutableDictionary *loggerDict; // @synthesize loggerDict=_loggerDict;
@property(nonatomic) double progressCallbackInterval; // @synthesize progressCallbackInterval=_progressCallbackInterval;
@property(nonatomic) double lastProgressCallbackTime; // @synthesize lastProgressCallbackTime=_lastProgressCallbackTime;
@property(nonatomic) __weak WBVideoCachingItem *lastProgressCallbackItem; // @synthesize lastProgressCallbackItem=_lastProgressCallbackItem;
@property(retain, nonatomic) WBVideoCachingManagerStateAnnouncer *announcer; // @synthesize announcer=_announcer;
@property(nonatomic) _Bool isReady; // @synthesize isReady=_isReady;
@property(retain, nonatomic) NSString *cacheRootPath; // @synthesize cacheRootPath=_cacheRootPath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cachingQueue; // @synthesize cachingQueue=_cachingQueue;
@property(retain, nonatomic) WBVideoCachingItem *nextCachingItem; // @synthesize nextCachingItem=_nextCachingItem;
@property(retain, nonatomic) WBVideoCachingItem *currentCachingItem; // @synthesize currentCachingItem=_currentCachingItem;
@property(retain, nonatomic) NSMutableArray *pendingItemIdList; // @synthesize pendingItemIdList=_pendingItemIdList;
@property(retain, nonatomic) NSMutableArray *cachingItemIdList; // @synthesize cachingItemIdList=_cachingItemIdList;
@property(retain, nonatomic) NSMutableArray *cachedItemIdList; // @synthesize cachedItemIdList=_cachedItemIdList;
@property(retain, nonatomic) NSMutableDictionary *allItemsDict; // @synthesize allItemsDict=_allItemsDict;
- (void).cxx_destruct;
- (unsigned long long)availableDiskSize;
- (unsigned long long)loadTotalCachedSize;
- (unsigned long long)cachedVideoSize;
- (void)accountChangedNotification:(id)arg1;
- (id)itemForCacheKey:(id)arg1;
- (void)resourceLoadFinishNotification:(id)arg1;
- (void)pauseAllPendingItems;
- (void)updatePendingItems:(unsigned long long)arg1;
- (void)applicationWillResignActiveNotification:(id)arg1;
- (void)reachabilityDidUpdate:(id)arg1;
- (_Bool)_validatePlaybackResource:(id)arg1;
- (id)playbackResourceWithVideoItem:(id)arg1 selectionOption:(id)arg2;
- (void)updateAntiLeechForVideoItem:(id)arg1 playbackResource:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadPlaybackResourceWithItem:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)recacheItem:(id)arg1;
- (void)cleanLocalResourceForResources:(id)arg1;
- (void)cleanLocalResourceWithResourceId:(id)arg1;
- (void)deleteCachedItem:(id)arg1;
- (void)deleteCachingItem:(id)arg1;
- (void)deleteItems:(id)arg1;
- (void)deleteAllCachingItemsWithExtraItems:(id)arg1;
- (void)deleteAllItems;
- (void)finishCachingItem:(id)arg1;
- (void)itemResourceLoadFailed:(id)arg1;
- (void)pauseCachingItem:(id)arg1;
- (void)willStopCachingItem:(id)arg1;
- (void)didStartCachingItem:(id)arg1;
- (id)loggerForKey:(id)arg1;
- (_Bool)cacheItem:(id)arg1 selectedResource:(id)arg2;
- (void)startCachingItem:(id)arg1;
- (void)startCachingIfNeeded;
- (void)stopCachingItem:(id)arg1;
- (void)cachingItemImmediately:(id)arg1;
- (void)cacheStatus:(id)arg1 selectionOption:(id)arg2;
- (_Bool)shouldStartDownload;
- (_Bool)shouldCacheStatusNow:(id)arg1;
- (void)updateStorageProgressForKey:(id)arg1 cachedSize:(long long)arg2 totalSize:(long long)arg3;
- (void)removeLisener:(id)arg1;
- (void)addLisener:(id)arg1;
- (long long)cachingStateForItem:(id)arg1;
- (_Bool)isItemCacheComplete:(id)arg1;
- (id)cacheParametersForKey:(id)arg1;
- (id)allItems;
- (id)cachedItems;
- (id)cachingItems;
- (id)cachingItemForKey:(id)arg1;
- (void)saveCacheList:(_Bool)arg1;
- (void)appWillTerminate;
- (void)setupCacheDirectoryForItem:(id)arg1;
- (void)updateItem:(id)arg1 localParams:(id)arg2;
- (void)sortItemArray:(id)arg1 hintArray:(id)arg2;
- (void)loadAllGroups;
- (void)setupCacheRootPath;
- (void)setup;
- (id)init;
- (void)dealloc;

@end

