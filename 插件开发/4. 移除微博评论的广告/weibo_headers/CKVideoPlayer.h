//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVPlayerItemOutputPullDelegate-Protocol.h"

@class AVPlayer, AVPlayerItem, AVPlayerItemVideoOutput, CKTimer, NSString;
@protocol CKVideoPlayerDelegate, CKVideoPlayerOutputDelegate, OS_dispatch_queue;

@interface CKVideoPlayer : NSObject <AVPlayerItemOutputPullDelegate>
{
    id _playToEndObserver;
    id _timeObserver;
    _Bool _loop;
    _Bool _markAsPlaying;
    _Bool _readyToPlay;
    double _rate;
    id <CKVideoPlayerOutputDelegate> _outputDelegate;
    id <CKVideoPlayerDelegate> _delegate;
    AVPlayerItem *_currentItem;
    double _volume;
    AVPlayer *_player;
    CKTimer *_timer;
    AVPlayerItemVideoOutput *_videoOutput;
    NSObject<OS_dispatch_queue> *_videoOutputQueue;
    struct CGAffineTransform _transform;
}

@property(nonatomic) _Bool readyToPlay; // @synthesize readyToPlay=_readyToPlay;
@property(nonatomic) _Bool markAsPlaying; // @synthesize markAsPlaying=_markAsPlaying;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *videoOutputQueue; // @synthesize videoOutputQueue=_videoOutputQueue;
@property(retain, nonatomic) AVPlayerItemVideoOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain, nonatomic) CKTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(nonatomic) _Bool loop; // @synthesize loop=_loop;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(nonatomic) struct CGAffineTransform transform; // @synthesize transform=_transform;
@property(retain, nonatomic) AVPlayerItem *currentItem; // @synthesize currentItem=_currentItem;
@property(nonatomic) __weak id <CKVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak id <CKVideoPlayerOutputDelegate> outputDelegate; // @synthesize outputDelegate=_outputDelegate;
- (void).cxx_destruct;
- (void)addTimeChangeCallBack;
- (void)addDidPlayToEndTimeNotificationForPlayerItem:(id)arg1;
- (void)outputMediaDataWillChange:(id)arg1;
- (void)updateVolume:(double)arg1 forTrack:(unsigned long long)arg2;
- (void)replaceVideoAsset:(id)arg1;
- (void)replaceVideoURL:(id)arg1;
- (void)replacePlayerItem:(id)arg1;
- (void)needOriginalPlayer;
- (void)loadPlayerItem:(id)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)timerUpdate:(id)arg1;
- (void)refreshOutputAtTime:(CDStruct_1b6d18a9)arg1;
- (void)reloadVideoOutput;
- (void)invalide;
- (void)pause;
- (void)play;
@property(nonatomic) double rate; // @synthesize rate=_rate;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime;
@property(readonly, nonatomic) CDStruct_1b6d18a9 duration;
- (void)dealloc;
- (id)initWithAVAsset:(id)arg1 outputDelegate:(id)arg2;
- (id)initWithURL:(id)arg1 outputDelegate:(id)arg2;
- (id)initWithPlayerItem:(id)arg1 outputDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

