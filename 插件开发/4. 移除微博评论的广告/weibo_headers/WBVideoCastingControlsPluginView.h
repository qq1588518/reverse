//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WBVideoPluginBaseView.h"

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "WBFCastingExtendedEventListener-Protocol.h"
#import "WBVideoNetworkTypeObserverListener-Protocol.h"
#import "WBVideoPluginResolutionButtonItemResolverEventListener-Protocol.h"

@class NSString, UIButton, UIImageView, UILabel, UIPanGestureRecognizer, UIView, UIVisualEffectView, WBContentImageView, WBVideoControlsIndicatorView, WBVideoPluginResolutionButtonItemResolver, WBVideoProgressBarPluginView;
@protocol WBFCastingExtendedControlling, WBVideoCastingDevice;

@interface WBVideoCastingControlsPluginView : WBVideoPluginBaseView <WBVideoPluginResolutionButtonItemResolverEventListener, UIGestureRecognizerDelegate, WBVideoNetworkTypeObserverListener, WBFCastingExtendedEventListener>
{
    _Bool _didSetup;
    _Bool _fullscreenMode;
    _Bool _panGestureSeeking;
    _Bool _isHUDShowing;
    id <WBVideoCastingDevice> _effectiveDevice;
    WBContentImageView *_coverImageView;
    UIVisualEffectView *_blurView;
    UIView *_controlsContainerView;
    UILabel *_castingDeviceLabel;
    UIImageView *_castingDeviceBackground;
    UILabel *_statusLabel;
    UIView *_buttonGroupContainer;
    UIView *_buttonGroupSeparatorLeft;
    UIView *_buttonGroupSeparatorRight;
    UIButton *_qualityButton;
    UIButton *_exitButton;
    UIButton *_deviceButton;
    UIButton *_retryButton;
    WBVideoProgressBarPluginView *_progressBarPlugin;
    long long _castingState;
    double _fullscreenHeightThreshold;
    double _controlsVisibleHeightThresholdMax;
    double _controlsVisibleHeightThresholdMin;
    WBVideoPluginResolutionButtonItemResolver *_resolutionButtonItemResolver;
    UIPanGestureRecognizer *_panGesture;
    WBVideoControlsIndicatorView *_videoProgressHud;
    UIButton *_backButton;
    id <WBFCastingExtendedControlling> _extendedController;
    struct CGPoint _panGestureBeginPoint;
    CDStruct_1b6d18a9 _seekStartTime;
    struct UIEdgeInsets _safeInsets;
}

@property(retain, nonatomic) id <WBFCastingExtendedControlling> extendedController; // @synthesize extendedController=_extendedController;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton=_backButton;
@property(nonatomic) _Bool isHUDShowing; // @synthesize isHUDShowing=_isHUDShowing;
@property(retain, nonatomic) WBVideoControlsIndicatorView *videoProgressHud; // @synthesize videoProgressHud=_videoProgressHud;
@property(nonatomic) CDStruct_1b6d18a9 seekStartTime; // @synthesize seekStartTime=_seekStartTime;
@property(nonatomic) _Bool panGestureSeeking; // @synthesize panGestureSeeking=_panGestureSeeking;
@property(nonatomic) struct CGPoint panGestureBeginPoint; // @synthesize panGestureBeginPoint=_panGestureBeginPoint;
@property(retain, nonatomic) UIPanGestureRecognizer *panGesture; // @synthesize panGesture=_panGesture;
@property(retain, nonatomic) WBVideoPluginResolutionButtonItemResolver *resolutionButtonItemResolver; // @synthesize resolutionButtonItemResolver=_resolutionButtonItemResolver;
@property(nonatomic) _Bool fullscreenMode; // @synthesize fullscreenMode=_fullscreenMode;
@property(nonatomic) double controlsVisibleHeightThresholdMin; // @synthesize controlsVisibleHeightThresholdMin=_controlsVisibleHeightThresholdMin;
@property(nonatomic) double controlsVisibleHeightThresholdMax; // @synthesize controlsVisibleHeightThresholdMax=_controlsVisibleHeightThresholdMax;
@property(nonatomic) double fullscreenHeightThreshold; // @synthesize fullscreenHeightThreshold=_fullscreenHeightThreshold;
@property(nonatomic) long long castingState; // @synthesize castingState=_castingState;
@property(retain, nonatomic) WBVideoProgressBarPluginView *progressBarPlugin; // @synthesize progressBarPlugin=_progressBarPlugin;
@property(retain, nonatomic) UIButton *retryButton; // @synthesize retryButton=_retryButton;
@property(retain, nonatomic) UIButton *deviceButton; // @synthesize deviceButton=_deviceButton;
@property(retain, nonatomic) UIButton *exitButton; // @synthesize exitButton=_exitButton;
@property(retain, nonatomic) UIButton *qualityButton; // @synthesize qualityButton=_qualityButton;
@property(retain, nonatomic) UIView *buttonGroupSeparatorRight; // @synthesize buttonGroupSeparatorRight=_buttonGroupSeparatorRight;
@property(retain, nonatomic) UIView *buttonGroupSeparatorLeft; // @synthesize buttonGroupSeparatorLeft=_buttonGroupSeparatorLeft;
@property(retain, nonatomic) UIView *buttonGroupContainer; // @synthesize buttonGroupContainer=_buttonGroupContainer;
@property(retain, nonatomic) UILabel *statusLabel; // @synthesize statusLabel=_statusLabel;
@property(retain, nonatomic) UIImageView *castingDeviceBackground; // @synthesize castingDeviceBackground=_castingDeviceBackground;
@property(retain, nonatomic) UILabel *castingDeviceLabel; // @synthesize castingDeviceLabel=_castingDeviceLabel;
@property(retain, nonatomic) UIView *controlsContainerView; // @synthesize controlsContainerView=_controlsContainerView;
@property(retain, nonatomic) UIVisualEffectView *blurView; // @synthesize blurView=_blurView;
@property(retain, nonatomic) WBContentImageView *coverImageView; // @synthesize coverImageView=_coverImageView;
@property(retain, nonatomic) id <WBVideoCastingDevice> effectiveDevice; // @synthesize effectiveDevice=_effectiveDevice;
@property(nonatomic) _Bool didSetup; // @synthesize didSetup=_didSetup;
@property(nonatomic) struct UIEdgeInsets safeInsets; // @synthesize safeInsets=_safeInsets;
- (void).cxx_destruct;
- (void)networkTypeObserver:(id)arg1 didUpdateNetworkTypeFrom:(long long)arg2 to:(long long)arg3;
- (void)backButtonPressed:(id)arg1;
- (void)videoPlayerController:(id)arg1 userDidPerformEvent:(unsigned long long)arg2 sender:(id)arg3 info:(id)arg4;
- (double)newProgressToSeek:(double)arg1 startTime:(CDStruct_1b6d18a9)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (void)panGestureAction:(id)arg1;
- (void)updateProgressHudDisplay;
- (void)updateProgressHudTimeOffset;
- (void)pluginResolutionButtonItemResolver:(id)arg1 didUpdateResolutionButtonItems:(id)arg2 selectedButtonItem:(id)arg3;
- (void)_updateQualityButton;
- (void)setVideoController:(id)arg1;
- (void)castingExtentdedController:(id)arg1 didUpdateReceiverState:(long long)arg2;
- (void)videoPlayerController:(id)arg1 didExitFullscreenAnimated:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 willExitFullscreenAnimated:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 didEnterFullscreenAnimated:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 willEnterFullscreenAnimated:(_Bool)arg2;
- (void)videoPlayerController:(id)arg1 didTransitionFromPlaybackState:(long long)arg2 toPlaybackState:(long long)arg3;
- (void)videoPlayerController:(id)arg1 didFailWithError:(id)arg2;
- (void)videoPlayerController:(id)arg1 didChangeVideoPlayerItem:(id)arg2;
- (void)videoPlayerController:(id)arg1 didRequestPlaybackForVideoItem:(id)arg2 reason:(long long)arg3;
- (_Bool)visibilityWithPlaybackState:(unsigned long long)arg1 presentationState:(unsigned long long)arg2;
- (void)_updateExtendedController;
- (void)_updateCastingStateWithPlaybackState:(long long)arg1;
- (void)_updateEffectiveDevice;
- (id)_resolveEffectiveDevice;
- (void)_updateCoverImage;
- (void)prepareForHidden;
- (void)prepareForDisplay;
- (void)retryButtonAction:(id)arg1;
- (void)deviceButtonAction:(id)arg1;
- (void)exitButtonAction:(id)arg1;
- (void)qualityButtonAction:(id)arg1;
- (double)_resolveControlsAlphaWithBounds:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)_updateCenterArea;
- (void)_updateWithCastingState;
- (void)_updateCastingDeviceBackground;
- (void)_updateStatusArea;
- (id)_resolveStatusText;
- (_Bool)_effectiveDeviceSupportsWWAN;
- (void)_updateQualityButtonState;
- (void)_updateWithCurrentDevice;
- (void)_setupOnce;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

