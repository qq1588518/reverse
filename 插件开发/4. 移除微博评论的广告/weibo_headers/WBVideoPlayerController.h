//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WBMediaPlaybackControlling-Protocol.h"
#import "WBVideoPlaybackUserEventListener-Protocol.h"

@class NSArray, NSMutableSet, NSString, UIView, WBStatus, WBVideoCloseButtonPluginView, WBVideoItem, WBVideoLoadingIndicatorPluginView, WBVideoOverlayBusinessPluginView, WBVideoOverlayControlsPluginView, WBVideoOverlayGesturesPluginView, WBVideoPlayButtonPluginView, WBVideoPlaybackEventAnnouncer, WBVideoPlaybackMediaSelectionManager, WBVideoPlaybackUserEventAnnouncer, WBVideoPlayerControllerTraceLogManager, WBVideoPlayerItemLoadingOptions, WBVideoPlayerLayerView, WBVideoPlayerLogManager, WBVideoPlayerViewController, WBVideoPluginResolutionButtonItemResolver, WBVideoUpNextPluginView, WBVideoViewManager, WBViewController;
@protocol WBFAVMediaSelection, WBMediaPlaybackItem, WBVideoCastingDevice, WBVideoPlayerControllerDelegate, WBVideoPlayerItem, WBVideoPlayerSourceView;

@interface WBVideoPlayerController : NSObject <WBMediaPlaybackControlling, WBVideoPlaybackUserEventListener>
{
    struct {
        unsigned int playerDidPlayToEndTime:1;
        unsigned int playerPlaybackStalled:1;
        long long playerPlayReason;
        long long playerPauseReason;
        long long pauseReasonDuringItemRequesting;
        unsigned int instreamContentPlaying:1;
        unsigned int prebuffering:1;
    } _playbackStateFlags;
    struct {
        unsigned int becomeActive:1;
        unsigned int resignActive:1;
        unsigned int playbackStalled_LEGACY:1;
        unsigned int playbackEnded_LEGACY:1;
        id playbackStalled;
        id playbackEnded;
        unsigned int vcStateChanged:1;
    } _registeredNotification;
    struct CGRect _originalRect;
    long long _pendingRotationOrientation;
    WBVideoPlaybackEventAnnouncer *_playbackEventAnnouncer;
    WBVideoViewManager *_viewManager;
    NSMutableSet *_rotationPreventionReasons;
    NSMutableSet *_playbackCompletePreventionReasons;
    NSMutableSet *_playbackPreventionReasons;
    struct {
        unsigned int pendingDidPlayToEndTime;
    } _playbackCompletePreventionFlags;
    struct {
        unsigned int playingByUser:1;
        unsigned int videoPausedByEnteringBackground:1;
        unsigned int videoPausedByExternalOverlay:1;
        unsigned int videoPausedByPlaybackPrevention:1;
        unsigned int pendingSeek:1;
        unsigned int performingUserSeek:1;
        unsigned int exitFullscreenWhenOrientationChange:1;
    } _flags;
    double _restoreAfterSeekingRate;
    WBVideoOverlayGesturesPluginView *_LEGACY_gesturePlugin;
    WBVideoOverlayControlsPluginView *_LEGACY_overlayControlsPlugin;
    WBVideoUpNextPluginView *_LEGACY_upNextPlugin;
    WBVideoOverlayBusinessPluginView *_LEGACY_overlayBusinessPlugin;
    WBVideoPlayButtonPluginView *_LEGACY_playButtonPlugin;
    WBVideoCloseButtonPluginView *_LEGACY_closePlugin;
    _Bool _fullscreen;
    _Bool _enteringFullscreen;
    _Bool _exitingFullscreen;
    _Bool _inAnimatedTransition;
    _Bool _automaticallyPauseWhenKeyboardShown;
    _Bool _automaticallyPauseWhenApplicationInactive;
    _Bool _shouldEnterFullscreenWhenRotate;
    _Bool _shouldKeepFullscreenWhenRotate;
    _Bool _shouldKeepFullscreenWhenAppInactive;
    _Bool _muteWhenFullScreen;
    _Bool _isPlayingNotFreeVideoForUnicom;
    _Bool _seeksDuringCursorMove;
    _Bool _disableFullScreenAutoResetPlaySpeed;
    _Bool _allowsExternalPlayback;
    _Bool _backingToHomeView;
    _Bool _externalWindowBecomeKey;
    _Bool _isApplicationInactive;
    _Bool _savedMuteStateOverridedBySourceView;
    _Bool _animatedTransferSavedAspectFill;
    _Bool _animatedTransferInitialAspectFill;
    _Bool _animatedTransferTargetAspectFill;
    _Bool _transferingPlaybackState;
    _Bool _mute;
    _Bool _enterFullScreenByButton;
    WBVideoPlaybackUserEventAnnouncer *_userEventAnnouncer;
    long long _sourceViewMutePreference;
    UIView<WBVideoPlayerSourceView> *_sourceView;
    double _currentSpeedRate;
    NSString *_name;
    id <WBVideoPlayerControllerDelegate> _delegate;
    long long _currentOrientation;
    WBVideoPlayerLogManager *_playerLogManager;
    WBVideoPlaybackMediaSelectionManager *_mediaSelectionManager;
    WBVideoPlayerViewController *_presentTransitioningfullscreenContainerController;
    double _seekTarget;
    NSArray *_availableMediaSelectionCharacteristics;
    id <WBFAVMediaSelection> _currentMediaSelection;
    WBVideoPlayerControllerTraceLogManager *_videoTraceLogManager;
    NSString *_currentVideoItemIdentifier;
    WBVideoItem *_playerItemRequestFailedVideoItem;
    long long _playerItemRequestFailedPlayReason;
    long long _replayCallToActionPlayReasonOverride;
    WBVideoPlayerViewController *_fullscreenViewController;
    WBVideoPlayerLayerView *_playerLayerView;
    unsigned long long _queryPlayerItemRequestID;
    WBVideoItem *_queryingAVPlayerItemForVideoItem;
    WBVideoPlayerItemLoadingOptions *_queryingPlayerItemWithOptions;
    id _timeObserver;
}

+ (Class)fullScreenViewControllerClass;
+ (_Bool)isInCallStatusBar;
+ (void)addCommonPluginsToPlayerController:(id)arg1 overlayControlsDelegate:(id)arg2 upNextDelegate:(id)arg3;
+ (id)finalSchemeForVideoItem:(id)arg1;
+ (id)finalSchemeForVideoItem:(id)arg1 sourceView:(id)arg2;
+ (_Bool)_openSchemeForVideoItem:(id)arg1 sourceView:(id)arg2 currentPlayerTime:(double)arg3;
+ (_Bool)openSchemeForVideoItem:(id)arg1 sourceView:(id)arg2;
@property(retain, nonatomic) id timeObserver; // @synthesize timeObserver=_timeObserver;
@property(retain, nonatomic) WBVideoPlayerItemLoadingOptions *queryingPlayerItemWithOptions; // @synthesize queryingPlayerItemWithOptions=_queryingPlayerItemWithOptions;
@property(retain, nonatomic) WBVideoItem *queryingAVPlayerItemForVideoItem; // @synthesize queryingAVPlayerItemForVideoItem=_queryingAVPlayerItemForVideoItem;
@property(nonatomic) unsigned long long queryPlayerItemRequestID; // @synthesize queryPlayerItemRequestID=_queryPlayerItemRequestID;
@property(nonatomic) _Bool enterFullScreenByButton; // @synthesize enterFullScreenByButton=_enterFullScreenByButton;
@property(nonatomic) _Bool mute; // @synthesize mute=_mute;
@property(readonly, nonatomic) WBVideoPlayerLayerView *playerLayerView; // @synthesize playerLayerView=_playerLayerView;
@property(nonatomic) __weak WBVideoPlayerViewController *fullscreenViewController; // @synthesize fullscreenViewController=_fullscreenViewController;
@property(nonatomic) long long replayCallToActionPlayReasonOverride; // @synthesize replayCallToActionPlayReasonOverride=_replayCallToActionPlayReasonOverride;
@property(nonatomic) _Bool transferingPlaybackState; // @synthesize transferingPlaybackState=_transferingPlaybackState;
@property(nonatomic) _Bool animatedTransferTargetAspectFill; // @synthesize animatedTransferTargetAspectFill=_animatedTransferTargetAspectFill;
@property(nonatomic) _Bool animatedTransferInitialAspectFill; // @synthesize animatedTransferInitialAspectFill=_animatedTransferInitialAspectFill;
@property(nonatomic) _Bool animatedTransferSavedAspectFill; // @synthesize animatedTransferSavedAspectFill=_animatedTransferSavedAspectFill;
@property(readonly, nonatomic) long long playerItemRequestFailedPlayReason; // @synthesize playerItemRequestFailedPlayReason=_playerItemRequestFailedPlayReason;
@property(readonly, nonatomic) WBVideoItem *playerItemRequestFailedVideoItem; // @synthesize playerItemRequestFailedVideoItem=_playerItemRequestFailedVideoItem;
@property(copy, nonatomic) NSString *currentVideoItemIdentifier; // @synthesize currentVideoItemIdentifier=_currentVideoItemIdentifier;
@property(retain, nonatomic) WBVideoPlayerControllerTraceLogManager *videoTraceLogManager; // @synthesize videoTraceLogManager=_videoTraceLogManager;
@property(nonatomic) _Bool savedMuteStateOverridedBySourceView; // @synthesize savedMuteStateOverridedBySourceView=_savedMuteStateOverridedBySourceView;
@property(retain, nonatomic) id <WBFAVMediaSelection> currentMediaSelection; // @synthesize currentMediaSelection=_currentMediaSelection;
@property(retain, nonatomic) NSArray *availableMediaSelectionCharacteristics; // @synthesize availableMediaSelectionCharacteristics=_availableMediaSelectionCharacteristics;
@property(nonatomic) _Bool isApplicationInactive; // @synthesize isApplicationInactive=_isApplicationInactive;
@property(nonatomic) double seekTarget; // @synthesize seekTarget=_seekTarget;
@property(nonatomic) _Bool externalWindowBecomeKey; // @synthesize externalWindowBecomeKey=_externalWindowBecomeKey;
@property(nonatomic) _Bool backingToHomeView; // @synthesize backingToHomeView=_backingToHomeView;
@property(nonatomic) __weak WBVideoPlayerViewController *presentTransitioningfullscreenContainerController; // @synthesize presentTransitioningfullscreenContainerController=_presentTransitioningfullscreenContainerController;
@property(nonatomic) _Bool allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property(nonatomic) _Bool disableFullScreenAutoResetPlaySpeed; // @synthesize disableFullScreenAutoResetPlaySpeed=_disableFullScreenAutoResetPlaySpeed;
@property(nonatomic) _Bool seeksDuringCursorMove; // @synthesize seeksDuringCursorMove=_seeksDuringCursorMove;
@property(readonly, nonatomic) WBVideoPlaybackMediaSelectionManager *mediaSelectionManager; // @synthesize mediaSelectionManager=_mediaSelectionManager;
@property(retain, nonatomic) WBVideoPlayerLogManager *playerLogManager; // @synthesize playerLogManager=_playerLogManager;
@property(nonatomic) _Bool isPlayingNotFreeVideoForUnicom; // @synthesize isPlayingNotFreeVideoForUnicom=_isPlayingNotFreeVideoForUnicom;
@property(nonatomic) long long currentOrientation; // @synthesize currentOrientation=_currentOrientation;
@property(nonatomic) __weak id <WBVideoPlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) double currentSpeedRate; // @synthesize currentSpeedRate=_currentSpeedRate;
@property(nonatomic) _Bool muteWhenFullScreen; // @synthesize muteWhenFullScreen=_muteWhenFullScreen;
@property(nonatomic) _Bool shouldKeepFullscreenWhenAppInactive; // @synthesize shouldKeepFullscreenWhenAppInactive=_shouldKeepFullscreenWhenAppInactive;
@property(nonatomic) _Bool shouldKeepFullscreenWhenRotate; // @synthesize shouldKeepFullscreenWhenRotate=_shouldKeepFullscreenWhenRotate;
@property(nonatomic) _Bool shouldEnterFullscreenWhenRotate; // @synthesize shouldEnterFullscreenWhenRotate=_shouldEnterFullscreenWhenRotate;
@property(nonatomic) _Bool automaticallyPauseWhenApplicationInactive; // @synthesize automaticallyPauseWhenApplicationInactive=_automaticallyPauseWhenApplicationInactive;
@property(nonatomic) _Bool automaticallyPauseWhenKeyboardShown; // @synthesize automaticallyPauseWhenKeyboardShown=_automaticallyPauseWhenKeyboardShown;
@property(retain, nonatomic) UIView<WBVideoPlayerSourceView> *sourceView; // @synthesize sourceView=_sourceView;
@property(nonatomic) _Bool inAnimatedTransition; // @synthesize inAnimatedTransition=_inAnimatedTransition;
@property(nonatomic) _Bool exitingFullscreen; // @synthesize exitingFullscreen=_exitingFullscreen;
@property(nonatomic) _Bool enteringFullscreen; // @synthesize enteringFullscreen=_enteringFullscreen;
@property(nonatomic) _Bool fullscreen; // @synthesize fullscreen=_fullscreen;
@property(readonly, nonatomic) long long sourceViewMutePreference; // @synthesize sourceViewMutePreference=_sourceViewMutePreference;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
- (id)debugContextData:(id)arg1;
- (_Bool)_delegateShouldExitFullscreenAnimated:(_Bool)arg1;
- (_Bool)_delegateShouldEnterFullscreenAnimated:(_Bool)arg1;
- (_Bool)_delegateShouldEnterFullscreenByPressingPlayButton:(id)arg1;
- (void)_announceViewDidUnvisibleToUser;
- (void)_announceViewDidVisibleToUser;
- (void)_announceViewDidMoveToSuperview:(id)arg1;
- (void)_announceMuteStateChanged;
- (void)_announcePlaySpeedRateChanged:(_Bool)arg1;
- (void)_announceUserSeekDone;
- (void)_announceUserWillStartSeek;
- (void)_announcePlayerWillStartSeek:(_Bool)arg1;
- (void)_announcePlayerSeekFinished:(_Bool)arg1;
- (void)_announcePlayerSeekStart:(CDStruct_1b6d18a9)arg1 fromPosition:(CDStruct_1b6d18a9)arg2 isResume:(_Bool)arg3;
- (void)_announcePlaybackLikelyToKeepUp;
- (void)_announceDidStallPlayback;
- (void)_announceDidMoveToSourceView:(id)arg1;
- (void)_announceDidExitFullscreenAnimated:(_Bool)arg1;
- (void)_announceDidEnterFullscreenAnimated:(_Bool)arg1;
- (void)_announceWillExitFullscreenAnimated:(_Bool)arg1;
- (void)_announceWillEnterFullscreenAnimated:(_Bool)arg1;
- (void)_announceWillToggleFullScreenState;
- (void)_announceDidReceiveOrientationChange:(long long)arg1;
- (void)_announceDidPausePlayingWithReason:(long long)arg1 reasonApplied:(_Bool)arg2;
- (void)_announceWillPausePlayingWithReason:(long long)arg1;
- (void)_announceDidStartPlayingWithReason:(long long)arg1 reasonApplied:(_Bool)arg2;
- (void)_announceDidFinishPlayback;
- (void)_announceDidPlayToEnd;
- (void)_announceDidChangeVideoPlayerItem:(id)arg1;
- (void)_announceDidUpdateCurrentTime:(CDStruct_1b6d18a9)arg1;
- (void)_announcePlaybackStateTransitionFrom:(long long)arg1 to:(long long)arg2;
- (void)_announcePlaybackReady;
- (void)_announcePlaybackFailedWithError:(id)arg1;
- (void)_announceQueryPlayerItemFinishedWithError:(id)arg1 extraParams:(id)arg2;
- (void)_announceDidRequestPlayback:(id)arg1 reason:(long long)arg2;
- (void)removePlaybackEventListener:(id)arg1;
- (void)addPlaybackEventListener:(id)arg1;
- (void)_didEndPlaybackPrevention;
- (void)_didStartPlaybackPrevention;
@property(readonly, nonatomic) _Bool playbackPrevented;
- (void)endPlaybackPreventionForReason:(id)arg1;
- (void)beginPlaybackPreventionForReason:(id)arg1;
@property(readonly, nonatomic) _Bool pendingPlaybackCompleteDueToPrevention;
@property(readonly, nonatomic) _Bool playbackCompletePrevented;
- (void)endPlaybackCompletePreventionForReason:(id)arg1;
- (void)beginPlaybackCompletePreventionForReason:(id)arg1;
@property(readonly, nonatomic) _Bool rotationDisabled;
- (void)endRotationPreventionForReason:(id)arg1;
- (void)beginRotationPreventionForReason:(id)arg1;
- (void)videoPlayerController:(id)arg1 userDidPerformEvent:(unsigned long long)arg2 sender:(id)arg3 info:(id)arg4;
- (void)resetPlaySpeedState;
- (void)_transferInstreamContentPlaybackState:(_Bool)arg1;
- (void)_restoreToPlayerPlaybackStallStateAfterTransfer;
- (void)_restoreToDidPlayToEndStateAfterTransfer;
- (_Bool)disableFullScreenAutoRotate;
- (void)resetFullScreenAutoRotate;
- (void)layoutViewsImmediately;
- (void)_updateLayerStates;
@property(readonly, nonatomic) long long presentationState;
@property(readonly, nonatomic) long long playbackState;
- (void)_updatePresentationState;
- (void)_updatePlaybackState;
- (void)setupObserversForPlayerLayerView:(id)arg1;
- (void)removeObserversForPlayerLayerView:(id)arg1;
- (void)setupKeyValueObserverForPlayer:(id)arg1;
- (void)removeKeyValueObserverForPlayer:(id)arg1;
- (void)setupObserversForAVPlayer:(id)arg1;
- (void)removeObserversForAVPlayer:(id)arg1;
- (void)_updateVisibleToUser:(_Bool)arg1;
- (void)viewDidMoveToSuperview:(id)arg1;
- (void)updateVideoContainerControllerStates;
- (void)updateLikeStateForCurrentVideo;
- (id)configLoadingOptionsForItem:(id)arg1;
- (void)startPlayVideoItem:(id)arg1 sourceView:(id)arg2 entersFullscreen:(_Bool)arg3 playReason:(long long)arg4;
- (_Bool)playVideoItem:(id)arg1 sourceView:(id)arg2 entersFullscreen:(_Bool)arg3 playReason:(long long)arg4;
@property(readonly, nonatomic) id <WBVideoCastingDevice> currentCastingDevice;
@property(readonly, nonatomic) _Bool attchedToView;
@property(readonly, nonatomic) _Bool playingByUser;
@property(readonly, nonatomic) _Bool currentVideoPlaybackFinished;
@property(readonly, nonatomic) _Bool currentPlayerPlaybackStalled;
@property(readonly, nonatomic) _Bool currentVideoDidPlayToEnd;
- (void)forceQuit;
- (void)cancelLoadingAndFinishPlayingAnimated:(_Bool)arg1 reason:(long long)arg2;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentPlayerTime;
- (void)finishAutoplay;
@property(readonly, nonatomic) _Bool inlinePlaying;
@property(readonly, nonatomic) _Bool transitioningFullscreenState;
- (void)_playbackViewDidFinishSeekingWithProgress:(double)arg1;
- (void)_playbackViewDidMoveSeekingCursorWithProgress:(double)arg1;
- (void)_playbackViewWillStartSeeking;
- (void)performRemoteSeek;
- (void)_performUserSeek:(_Bool)arg1;
@property(readonly, nonatomic, getter=isSeeking) _Bool seeking;
@property(readonly, nonatomic) WBVideoPlayerViewController *currentFullscreenViewController;
- (id)addContextToOpenUrlManager:(id)arg1;
- (void)informSourceViewActionTriggered;
- (void)restartCurrentPlaybackWithReason:(long long)arg1;
- (void)performReplayEntersFullScreen:(_Bool)arg1;
- (void)_updateInstreamContentPlaying:(_Bool)arg1;
@property(readonly, nonatomic) _Bool instreamContentPlaying;
- (_Bool)isCurrentViewTopAndVisible;
- (_Bool)isNotIos7Ipad;
- (id)snapshot;
@property(readonly, nonatomic) WBVideoViewManager *viewManager;
@property(readonly, nonatomic) UIView *view;
@property(readonly, nonatomic) UIView *videoContainerView;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentVideoDuration;
@property(readonly, nonatomic) id <WBVideoPlayerItem> currentVideoPlayerItem;
@property(readonly, nonatomic) WBVideoItem *currentVideoItem;
@property(readonly, nonatomic) WBVideoItem *sourceViewVideoItem;
@property(readonly, nonatomic) WBVideoPlaybackUserEventAnnouncer *userEventAnnouncer; // @synthesize userEventAnnouncer=_userEventAnnouncer;
- (void)addPluginForKey:(id)arg1 setup:(CDUnknownBlockType)arg2;
- (void)setPlayerLayerView:(id)arg1;
- (void)updateMuteStateFromSourceView;
- (void)setSourceViewMutePreference:(long long)arg1;
- (void)setNeedsUpdateSourceViewMuteState;
- (void)updateMuteState;
- (_Bool)muteWhenPlaying;
- (void)backToHomeViewController;
- (void)_actuall_didPlayToEndTime;
- (void)didPlayToEndTime:(id)arg1;
- (void)enterForeground:(id)arg1;
- (void)enterBackGround:(id)arg1;
- (void)rotateToCurrentOrientationAnimated:(_Bool)arg1;
- (void)didRotate;
- (struct CGRect)getViewFrameBy:(long long)arg1;
- (struct CGAffineTransform)getViewTransformBy:(long long)arg1;
- (void)_animatePlayingViewTransitioningToInlineModeWithDuration:(double)arg1;
- (void)_preparePlayerViewForTransitioningToInlineModeAnimated:(_Bool)arg1;
- (void)exitFullScreenAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_finishPlayerViewTransitioningToFullscreenModeAnimated:(_Bool)arg1;
- (void)_animatePlayingViewTransitioningToFullscreenModeWithDuration:(double)arg1;
- (void)enterFullScreenAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldKeepPauseWhenExternalWindowShow;
- (void)_resumePlaybackIfNeeded;
- (void)viewControllerStateDidChange:(id)arg1;
- (void)windowDidBecomeKeyNotification:(id)arg1;
- (void)updateExternalWindowState:(id)arg1;
- (void)externalOverlayViewDidDismissNotification:(id)arg1;
- (void)handleExternalOverlayViewPresent;
- (void)externalOverlayViewDidPresentNotification:(id)arg1;
- (void)resumePlayVideoItem:(id)arg1 sourceView:(id)arg2 playerViewController:(id)arg3;
- (_Bool)canResumePlaybackWithVideoItem:(id)arg1;
- (_Bool)validateCurrentPlayerItemContentAccessScope;
@property(readonly, nonatomic) _Bool pendingUrgentPlayerItemRefresh;
- (void)playbackFailedWithError:(id)arg1;
- (void)playbackFailedWithPlayerItem:(id)arg1;
- (void)playerItemPlaybackStalledNotification:(id)arg1;
- (void)playerLayerBecomesReady;
- (void)_actuall_showActionSheet:(id)arg1 inViewController:(id)arg2 undim:(CDUnknownBlockType)arg3;
- (void)showActionSheet:(id)arg1 inViewController:(id)arg2 sender:(id)arg3;
- (id)showProgressWithText:(id)arg1 image:(id)arg2 duration:(double)arg3;
- (void)openRepostComposerForCurrentStatus;
- (void)toggleFullscreenStateIgnoreStates:(_Bool)arg1;
- (void)toggleFullscreenState;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 resume:(_Bool)arg2 player:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToProgress:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)performPauseWithReason:(long long)arg1;
- (void)performPlayWithReason:(long long)arg1;
- (_Bool)_pauseWithReason:(long long)arg1;
- (_Bool)_replayWithReason:(long long)arg1;
- (_Bool)_playWithReason:(long long)arg1;
- (void)_didPauseWithPauseReason:(long long)arg1;
- (void)_didPlayWithPlayReason:(long long)arg1;
@property(readonly, nonatomic) _Bool scaleAspectFitWhenInlinePlaying;
- (id)currentPlaybackPageInfo;
@property(readonly, nonatomic) WBStatus *mediaPlaybackStatus;
- (id)createMediaSelectionManager;
- (id)init;
- (void)dealloc;
- (void)completeAnimatedTransfer;
- (void)animatedStateTransferSetAnimationEndStateFromPlayerController:(id)arg1;
- (void)animatedStateTransferSetAnimationBeginStateFromPlayerController:(id)arg1;
- (void)prepareAnimatedStateTransferFromPlayerController:(id)arg1 toPlayerController:(id)arg2;
- (_Bool)canTransferStateToOtherPlayerController:(id)arg1;
- (void)transferPlaybackStateToPlayerController:(id)arg1;
- (void)_applyPlaybackState:(id)arg1;
- (id)_transferOutCurrentPlaybackState;
@property(readonly, nonatomic) WBVideoItem *statusVideoItem;
@property(readonly, nonatomic) WBVideoPluginResolutionButtonItemResolver *sharedResolutionButtonItemResolver;
@property(readonly, nonatomic) _Bool bgp_backgroundPlaybackAllowed;
@property(readonly, nonatomic) _Bool bgp_backgroundPlaybackActivated;
@property(nonatomic) _Bool bgp_enabled;
- (id)bgp_model;
- (_Bool)replaceCurrentVideoItemWithItem:(id)arg1 player:(id)arg2 playerLayerView:(id)arg3 pauseReason:(long long)arg4 playReason:(long long)arg5;
- (void)removeCurrentVideoItemWithReason:(long long)arg1;
- (void)removeCurrentVideoItem;
@property(readonly, nonatomic) WBVideoLoadingIndicatorPluginView *loadingIndicatorPlugin;
@property(readonly, nonatomic) WBVideoCloseButtonPluginView *closePlugin;
@property(readonly, nonatomic) WBVideoPlayButtonPluginView *playButtonPlugin;
@property(readonly, nonatomic) WBVideoOverlayBusinessPluginView *overlayBusinessPlugin;
@property(readonly, nonatomic) WBVideoUpNextPluginView *upNextPlugin;
@property(readonly, nonatomic) WBVideoOverlayControlsPluginView *overlayControlsPlugin;
@property(readonly, nonatomic) WBVideoOverlayGesturesPluginView *gesturePlugin;
@property(readonly, nonatomic) long long playerLogVideoSource;
@property(readonly, nonatomic) WBViewController *analysisViewController;
- (void)currentAutoPlayContainerControllerWillDisappear;
@property(nonatomic) _Bool tableViewScrolling;
@property(readonly, nonatomic) _Bool mediaPlaybackViewAttachedToSourceView;
@property(readonly, nonatomic) id <WBMediaPlaybackItem> currentPlaybackItem;
- (_Bool)finishMediaPlayback;
- (_Bool)startMediaPlaybackWithPlaybackItem:(id)arg1 sourceView:(id)arg2 reason:(long long)arg3;
- (_Bool)openSchemeForCurrentPlaybackItem;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

