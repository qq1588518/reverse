//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CFNetwork/NSURLProtocol.h>

#import "NSStreamDelegate-Protocol.h"
#import "XMReSessionURLProtocolDelegate-Protocol.h"

@class NSHTTPURLResponse, NSInputStream, NSMutableData, NSMutableDictionary, NSNumber, NSString, NSURL, XMReSessionURLProtocol;

@interface ProxyHttp : NSURLProtocol <NSStreamDelegate, XMReSessionURLProtocolDelegate>
{
    struct __CFHTTPMessage *_HTTPMessage;
    int _compression;
    _Bool _isStoped;
    struct streamURLPotocol streamURLProtocol;
    _Bool _shouldAttemptPersistentConnection;
    _Bool _connectionCanBeReused;
    _Bool _useSessionPersistence;
    NSMutableDictionary *_connectionInfo;
    NSNumber *_requestID;
    double _persistentConnectionTimeoutSeconds;
    NSString *_proxyHost;
    long long _proxyPort;
    NSString *_proxyDomain;
    NSString *_domain;
    NSURL *_url;
    NSInputStream *_httpStream;
    NSHTTPURLResponse *_urlResponse;
    NSMutableData *_buffer;
    NSMutableData *_plantData;
    NSString *_proxyType;
    NSString *_proxyUsername;
    NSString *_proxyPassword;
    NSString *_username;
    NSString *_password;
    XMReSessionURLProtocol *_currSessionURLProtocol;
}

+ (void)setProxyHttpClientDelegate:(id)arg1;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (void)removeAuthenticationCredentialsFromSessionStore:(id)arg1;
+ (void)removeProxyAuthenticationCredentialsFromSessionStore:(id)arg1;
+ (void)storeAuthenticationCredentialsInSessionStore:(id)arg1;
+ (void)storeProxyAuthenticationCredentialsInSessionStore:(id)arg1;
+ (id)sessionCredentialsStore;
+ (id)sessionProxyCredentialsStore;
+ (void)closeConnection:(id)arg1;
+ (void)httpStreamCloseConnection:(id)arg1;
+ (void)httpStreamExpiresReuseConnection;
+ (void)initialize;
@property(nonatomic) _Bool useSessionPersistence; // @synthesize useSessionPersistence=_useSessionPersistence;
@property(retain, nonatomic) XMReSessionURLProtocol *currSessionURLProtocol; // @synthesize currSessionURLProtocol=_currSessionURLProtocol;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(retain, nonatomic) NSString *proxyPassword; // @synthesize proxyPassword=_proxyPassword;
@property(retain, nonatomic) NSString *proxyUsername; // @synthesize proxyUsername=_proxyUsername;
@property(retain, nonatomic) NSString *proxyType; // @synthesize proxyType=_proxyType;
@property(retain, nonatomic) NSMutableData *plantData; // @synthesize plantData=_plantData;
@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSHTTPURLResponse *urlResponse; // @synthesize urlResponse=_urlResponse;
@property(retain, nonatomic) NSInputStream *httpStream; // @synthesize httpStream=_httpStream;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(retain, nonatomic) NSString *proxyDomain; // @synthesize proxyDomain=_proxyDomain;
@property(nonatomic) long long proxyPort; // @synthesize proxyPort=_proxyPort;
@property(retain, nonatomic) NSString *proxyHost; // @synthesize proxyHost=_proxyHost;
@property double persistentConnectionTimeoutSeconds; // @synthesize persistentConnectionTimeoutSeconds=_persistentConnectionTimeoutSeconds;
@property _Bool connectionCanBeReused; // @synthesize connectionCanBeReused=_connectionCanBeReused;
@property(nonatomic) _Bool shouldAttemptPersistentConnection; // @synthesize shouldAttemptPersistentConnection=_shouldAttemptPersistentConnection;
@property(retain) NSNumber *requestID; // @synthesize requestID=_requestID;
@property(retain) NSMutableDictionary *connectionInfo; // @synthesize connectionInfo=_connectionInfo;
- (void)urlProtocolDidEndRequest:(id)arg1;
- (void)urlProtocolWithStream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)urlProtocolWillStartSendRequest;
- (void)needRequestProxyHost;
- (void)needRequestAuthen:(_Bool)arg1;
- (_Bool)addAuthenticationToRequest:(struct __CFHTTPMessage *)arg1 withResponse:(struct __CFHTTPMessage *)arg2 isProxy:(_Bool)arg3;
- (void)checkAuthenticationWithResponse:(struct __CFHTTPMessage *)arg1;
- (void)handleCookiesWithURLResponse:(id)arg1;
- (unsigned long long)lengthOfDataSent;
- (id)getHttpProxyDictinary;
- (void)setSteamProxyProperty:(struct __CFReadStream *)arg1;
- (struct __CFHTTPMessage *)newMessageWithURLRequest:(id)arg1;
- (void)handleStreamError:(id)arg1;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (_Bool)processRespondHeader:(id)arg1;
- (_Bool)checkTrafficProxyEffect;
- (_Bool)proxyEffectCheck:(id)arg1;
- (void)streamHttpRequest;
- (void)checkAndApplyAuthentication;
- (_Bool)isPersistentConnection:(id)arg1;
- (void)innerStopLoading;
- (void)authenResumeLoading;
- (void)stopLoading;
- (void)startLoading;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (void)dealloc;
- (id)findSessionAuthenticationCredentials;
- (id)findSessionProxyAuthenticationCredentials;
- (void)httpStreamDestroy;
- (void)httpStreamResetReuseConnection;
- (void)httpStreamResumeConnection:(id)arg1 withOldSteam:(id *)arg2;
- (id)connectionID;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

