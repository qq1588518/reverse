//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "XMLiveChatMessageHandlerDelegate-Protocol.h"
#import "XMMQSubscriptionDelegate-Protocol.h"
#import "XMZegoAudioManagerDelegate-Protocol.h"

@class NSString, NSTimer, XMLiveRoomApproachInfo, XMZegoAudioManager;
@protocol OS_dispatch_queue, OS_dispatch_source, XMLoveModeControlDelegate, XMMicManagerLiveStreamDelegate;

@interface XMLoveModeControlManager : NSObject <XMMQSubscriptionDelegate, XMZegoAudioManagerDelegate, XMLiveChatMessageHandlerDelegate>
{
    NSObject<OS_dispatch_queue> *_ioQueue;
    void *_ioQueueTag;
    NSObject<OS_dispatch_source> *_countDownTimer;
    _Bool _needAutoPlay;
    _Bool _loveVoiceOn;
    _Bool _needRefreshFightInfo;
    int _userStatus;
    int _muteType;
    int _playMode;
    XMLiveRoomApproachInfo *_liveItem;
    id <XMMicManagerLiveStreamDelegate> _delegate;
    id <XMLoveModeControlDelegate> _controlDelegate;
    long long _appendMicNo;
    double _countDownTime;
    long long _selectedMicNo;
    XMZegoAudioManager *_zegoAudioManager;
    CDUnknownBlockType _startSuccessBlock;
    CDUnknownBlockType _startFailBlock;
    CDUnknownBlockType _stopSuccessBlock;
    CDUnknownBlockType _stopFailBlock;
    CDUnknownBlockType _joinSuccessBlock;
    CDUnknownBlockType _joinFailBlock;
    CDUnknownBlockType _leaveSuccessBlock;
    CDUnknownBlockType _leaveFailBlock;
    CDUnknownBlockType _startPKSuccessBlock;
    CDUnknownBlockType _startPKFailBlock;
    CDUnknownBlockType _stopPKSuccessBlock;
    CDUnknownBlockType _stopPKFailBlock;
    CDUnknownBlockType _startMarrySuccessBlock;
    CDUnknownBlockType _startMarryFailBlock;
    CDUnknownBlockType _stopMarrySuccessBlock;
    CDUnknownBlockType _stopMarryFailBlock;
    double _statusSynTime;
    double _onlineUserSynTime;
    double _micListSynTime;
    double _favorTimeSynTime;
    double _judgeTime;
    double _pkPanelTime;
    double _voiceSendTime;
    NSTimer *_onlineUserSyncTimer;
    NSTimer *_userStatusSyncTimer;
    NSTimer *_micListSyncTimer;
    NSTimer *_favorTimeSyncTimer;
    double _reloadGiftsInterval;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(nonatomic) _Bool needRefreshFightInfo; // @synthesize needRefreshFightInfo=_needRefreshFightInfo;
@property(nonatomic) double reloadGiftsInterval; // @synthesize reloadGiftsInterval=_reloadGiftsInterval;
@property(nonatomic) _Bool loveVoiceOn; // @synthesize loveVoiceOn=_loveVoiceOn;
@property(retain, nonatomic) NSTimer *favorTimeSyncTimer; // @synthesize favorTimeSyncTimer=_favorTimeSyncTimer;
@property(retain, nonatomic) NSTimer *micListSyncTimer; // @synthesize micListSyncTimer=_micListSyncTimer;
@property(retain, nonatomic) NSTimer *userStatusSyncTimer; // @synthesize userStatusSyncTimer=_userStatusSyncTimer;
@property(retain, nonatomic) NSTimer *onlineUserSyncTimer; // @synthesize onlineUserSyncTimer=_onlineUserSyncTimer;
@property(nonatomic) double voiceSendTime; // @synthesize voiceSendTime=_voiceSendTime;
@property(nonatomic) double pkPanelTime; // @synthesize pkPanelTime=_pkPanelTime;
@property(nonatomic) double judgeTime; // @synthesize judgeTime=_judgeTime;
@property(nonatomic) double favorTimeSynTime; // @synthesize favorTimeSynTime=_favorTimeSynTime;
@property(nonatomic) double micListSynTime; // @synthesize micListSynTime=_micListSynTime;
@property(nonatomic) double onlineUserSynTime; // @synthesize onlineUserSynTime=_onlineUserSynTime;
@property(nonatomic) double statusSynTime; // @synthesize statusSynTime=_statusSynTime;
@property(copy, nonatomic) CDUnknownBlockType stopMarryFailBlock; // @synthesize stopMarryFailBlock=_stopMarryFailBlock;
@property(copy, nonatomic) CDUnknownBlockType stopMarrySuccessBlock; // @synthesize stopMarrySuccessBlock=_stopMarrySuccessBlock;
@property(copy, nonatomic) CDUnknownBlockType startMarryFailBlock; // @synthesize startMarryFailBlock=_startMarryFailBlock;
@property(copy, nonatomic) CDUnknownBlockType startMarrySuccessBlock; // @synthesize startMarrySuccessBlock=_startMarrySuccessBlock;
@property(copy, nonatomic) CDUnknownBlockType stopPKFailBlock; // @synthesize stopPKFailBlock=_stopPKFailBlock;
@property(copy, nonatomic) CDUnknownBlockType stopPKSuccessBlock; // @synthesize stopPKSuccessBlock=_stopPKSuccessBlock;
@property(copy, nonatomic) CDUnknownBlockType startPKFailBlock; // @synthesize startPKFailBlock=_startPKFailBlock;
@property(copy, nonatomic) CDUnknownBlockType startPKSuccessBlock; // @synthesize startPKSuccessBlock=_startPKSuccessBlock;
@property(copy, nonatomic) CDUnknownBlockType leaveFailBlock; // @synthesize leaveFailBlock=_leaveFailBlock;
@property(copy, nonatomic) CDUnknownBlockType leaveSuccessBlock; // @synthesize leaveSuccessBlock=_leaveSuccessBlock;
@property(copy, nonatomic) CDUnknownBlockType joinFailBlock; // @synthesize joinFailBlock=_joinFailBlock;
@property(copy, nonatomic) CDUnknownBlockType joinSuccessBlock; // @synthesize joinSuccessBlock=_joinSuccessBlock;
@property(copy, nonatomic) CDUnknownBlockType stopFailBlock; // @synthesize stopFailBlock=_stopFailBlock;
@property(copy, nonatomic) CDUnknownBlockType stopSuccessBlock; // @synthesize stopSuccessBlock=_stopSuccessBlock;
@property(copy, nonatomic) CDUnknownBlockType startFailBlock; // @synthesize startFailBlock=_startFailBlock;
@property(copy, nonatomic) CDUnknownBlockType startSuccessBlock; // @synthesize startSuccessBlock=_startSuccessBlock;
@property(retain, nonatomic) XMZegoAudioManager *zegoAudioManager; // @synthesize zegoAudioManager=_zegoAudioManager;
@property(nonatomic) long long selectedMicNo; // @synthesize selectedMicNo=_selectedMicNo;
@property(nonatomic) _Bool needAutoPlay; // @synthesize needAutoPlay=_needAutoPlay;
@property(nonatomic) double countDownTime; // @synthesize countDownTime=_countDownTime;
@property(nonatomic) int playMode; // @synthesize playMode=_playMode;
@property(nonatomic) long long appendMicNo; // @synthesize appendMicNo=_appendMicNo;
@property(nonatomic) int muteType; // @synthesize muteType=_muteType;
@property(nonatomic) int userStatus; // @synthesize userStatus=_userStatus;
@property(nonatomic) __weak id <XMLoveModeControlDelegate> controlDelegate; // @synthesize controlDelegate=_controlDelegate;
@property(nonatomic) __weak id <XMMicManagerLiveStreamDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) XMLiveRoomApproachInfo *liveItem; // @synthesize liveItem=_liveItem;
- (void)processUserStatusSync:(int)arg1 andMuteType:(int)arg2;
- (void)reset;
- (void)clearLoveStatus;
- (void)leaveChannel;
- (void)nextVoiceRate;
- (void)onVoiceRateChanged:(float)arg1;
- (void)onLivingDuration:(double)arg1;
- (void)onPlayStateUpdate:(int)arg1 streamID:(id)arg2;
- (void)onPublishStateUpdate:(int)arg1 streamID:(id)arg2 streamInfo:(id)arg3;
- (void)onLoginRoom:(int)arg1 roomID:(id)arg2;
- (void)onDisconnect:(int)arg1 roomID:(id)arg2;
- (void)didOfflineOfUid:(unsigned long long)arg1;
- (void)didJoinedOfUid:(unsigned long long)arg1 username:(id)arg2;
- (void)closeMicFail;
- (void)closeMicSuccess;
- (void)openMicFail;
- (void)openMicSuccess;
- (id)convertLovePBGiftComboOverFrom:(id)arg1;
- (id)convertLovePBUserInfo:(id)arg1 toMsg:(id)arg2;
- (id)getEntertainmentGiftDetails:(unsigned long long)arg1;
- (id)convertLovePBGiftMessageFrom:(id)arg1;
- (_Bool)sendLoveModeStopMarryReq;
- (_Bool)sendLoveModeStartMarryReq;
- (_Bool)sendLoveModeExtendTimeReq;
- (_Bool)sendLoveModeStopFightReq;
- (_Bool)sendLoveModeStartFightReq;
- (_Bool)sendLoveModeStopLoveTimeReq;
- (_Bool)sendLoveModeLoveTimeStatusReq;
- (_Bool)sendLoveModeSelectLoverReq:(unsigned long long)arg1 isSelect:(_Bool)arg2 loverMicNo:(unsigned long long)arg3 loverUserId:(unsigned long long)arg4;
- (_Bool)sendLoveModeStartLoveTimeReq;
- (_Bool)sendLoveModeCleanLoveValueReq;
- (_Bool)sendLoveModeLockPositionReq:(unsigned long long)arg1 positionIsOpen:(_Bool)arg2;
- (_Bool)sendLoveModeWaitUserReq;
- (_Bool)sendLoveModeOnlineUserReq;
- (_Bool)sendLoveModeUserStatusSyncReq;
- (_Bool)sendLoveModeUserVoices:(id)arg1;
- (_Bool)sendLoveModeMuteSelfReq:(_Bool)arg1;
- (_Bool)sendLoveModeMuteUserReq:(long long)arg1 isMute:(_Bool)arg2;
- (_Bool)sendLoveModeHangUpReq:(long long)arg1;
- (_Bool)sendLoveModeAllowConnectReq:(long long)arg1;
- (_Bool)sendLoveModeLeaveReq;
- (_Bool)sendLoveModeJoinReq:(long long)arg1;
- (_Bool)sendLoveModeStopReq;
- (_Bool)sendLoveModeStartReqOfChannel:(id)arg1;
- (void)recvLoveModeStopMarryRsp:(id)arg1;
- (void)recvLoveModeStartMarryRsp:(id)arg1;
- (void)recvLoveModeCalibrationPKTime:(id)arg1;
- (void)recvLoveModePKResultPanel:(id)arg1;
- (void)recvLoveModePKPanel:(id)arg1;
- (void)recvLoveModeStartPKRsp:(id)arg1;
- (void)recvLoveModeStopPKRsp:(id)arg1;
- (void)recvLoveModeExtendPKTimeRsp:(id)arg1;
- (void)recvLoveModeLoveTimeResult:(id)arg1;
- (void)recvLoveModeStoptLoveTimeRsp:(id)arg1;
- (void)recvLoveModeLoveTimeStatusRsp:(id)arg1;
- (void)recvLoveModeSelectLoverRsp:(id)arg1;
- (void)recvLoveModeStartLoveTime:(id)arg1;
- (void)recvLoveModeStartLoveTimeRsp:(id)arg1;
- (void)recvLoveModeLeaveFail;
- (void)recvLoveModeLeaveSuccess:(id)arg1;
- (void)recvLoveModeJoinFail;
- (void)recvLoveModeJoinSuccess:(id)arg1;
- (void)recvLoveModeHangUpAckFail:(long long)arg1;
- (void)recvLoveModeHangUpAckSuccess:(long long)arg1;
- (void)recvLoveModeAllowConnectAckFail:(long long)arg1;
- (void)recvLoveModeAllowConnectAckSuccess:(long long)arg1;
- (void)recvLoveModeStopFail;
- (void)recvLoveModeStopSuccess;
- (void)recvLoveModeStartFail;
- (void)recvLoveModeStartSuccess:(_Bool)arg1;
- (void)recvLoveModeCleanLoveValueRsp:(id)arg1;
- (void)recvLoveModeLockPositionRsp:(id)arg1;
- (void)recvLoveModeWaitUserUpdate:(id)arg1;
- (void)recvLoveModeWaitUserRsp:(id)arg1;
- (void)recvLoveModeOnlineUserRsp:(id)arg1;
- (void)recvLoveModeUserStatusSyncRsp:(id)arg1;
- (void)recvLoveModeGiftComboOver:(id)arg1;
- (void)recvLoveModeGiftMsg:(id)arg1;
- (void)recvLoveModeUserVoice:(id)arg1;
- (void)recvLoveModeMuteSelfAck:(id)arg1;
- (void)recvLoveModeMuteUserAck:(id)arg1;
- (void)recvLoveModeHangUpAck:(id)arg1;
- (void)recvLoveModeAllowConnectAck:(id)arg1;
- (void)recvLoveModeLeaveRsp:(id)arg1;
- (void)recvLoveModeJoinRsp:(id)arg1;
- (void)recvLoveModeStopRsp:(id)arg1;
- (void)recvLoveModeStartRsp:(id)arg1;
- (_Bool)processSessionMessage:(id)arg1;
- (void)recvNormalMsg:(id)arg1;
- (void)stopMarryReq:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)startMarryReq:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)extendFightTime;
- (void)stopFightReq:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)startFightReq:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)onCountDown;
- (void)endCountDownTimer;
- (void)updateCountDownTimer;
- (void)unMuteSelf;
- (void)muteSelf;
- (void)unMuteAudioOfUser:(long long)arg1;
- (void)muteAudioOfUser:(long long)arg1;
- (void)cleanLoveValue;
- (void)stopFavorTime:(long long)arg1;
- (void)startFavorTime:(long long)arg1;
- (void)selectFavorTimeLover:(long long)arg1 isSelect:(_Bool)arg2 loverUserId:(long long)arg3 loverMicNo:(int)arg4;
- (void)requestFavorTimeInfo;
- (void)requestWaitUser;
- (void)requestUserStatus;
- (void)requestOnlineUser;
- (void)sendUserVoicesStatus:(long long)arg1 isVoice:(_Bool)arg2 micNo:(unsigned long long)arg3;
- (void)lockPosition:(unsigned long long)arg1 positionIsOpen:(_Bool)arg2;
- (void)hangUpUser:(long long)arg1;
- (void)allowUserConnect:(long long)arg1;
- (void)leaveMicSuccess:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)joinMicWithMicNo:(long long)arg1 Success:(CDUnknownBlockType)arg2 fail:(CDUnknownBlockType)arg3;
- (void)stopLoveModeSuccess:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)startLoveModeSuccess:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (_Bool)checkDidRecordAccessAuthorized;
- (void)syncImmediately;
- (void)onMicListSync;
- (void)onFavorTimeSync;
- (void)onUserStatusSync;
- (void)onOnlineUserSync;
- (void)endFavorTimeSync;
- (void)startFavorTimeSync;
- (void)endMicListSync;
- (void)startMicListSync;
- (void)endOnlineUserSync;
- (void)startOnlineUserSync;
- (void)endUserStatusSync;
- (void)startUserStatusSync;
- (void)endSyncPolling;
- (void)startSyncPolling;
- (void)onLiveInfoUpdate:(id)arg1;
- (void)configWithLiveItem:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

