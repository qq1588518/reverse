//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XMHybridVC.h"

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIImagePickerControllerDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"
#import "XMHybridVCProtocol-Protocol.h"
#import "XMHybridViewControllerLoadingAnimationProtocol-Protocol.h"

@class LOTAnimationView, NSDictionary, NSMutableDictionary, NSString, NSURL, UIBarButtonItem, UIButton, UIView, XMActionSheetView, XMHCBModel, XMHCapBackgroundAudioMonitor, XMHCapGplayerMonitor, XMHCapImageUploadData, XMHCapLoginModel, XMHCapNavBackTitleModel, XMHCapNavTitleButtons, XMHCapNavTitleModel, XMHCapNotificationPushModel, XMHCapOrientationRegisterModel, XMHCapPageStartModel, XMHCapRefreshModel, XMHComponentModel, XMHTMLShareModel, XMHWebViewProvider, XMHybridAudioPlayer, XMHybridErrorView, XMHybridMiniGameRecord, XMHybridOverlayView, XMHybridPageStartLogModel, XMHybridRecorder, XMPayReq, XMUploadProgressView;

@interface XMHybridViewController : XMHybridVC <UIGestureRecognizerDelegate, XMHybridViewControllerLoadingAnimationProtocol, UINavigationControllerDelegate, UIImagePickerControllerDelegate, XMHybridVCProtocol>
{
    UIButton *_backButton;
    UIButton *_closeButton;
    _Bool _navBarColorChange;
    _Bool _shouldAddCommonUseragent;
    _Bool _jsReady;
    _Bool _recorderPermissionGranted;
    _Bool _hasInjectJSSDK;
    _Bool _isExternalUrl;
    _Bool _isShare;
    _Bool _isShareByJSSDKOrYa;
    _Bool _isActivityUrl;
    _Bool _closeWebViewAfterCloseAppStore;
    _Bool _bForceLandscape;
    _Bool _needSupportOrientation;
    _Bool _orientationLandscape;
    _Bool _shouldSlide;
    _Bool _ignoreJSSDKStatusBarSetting;
    _Bool _needResetASR;
    float _audioDuration;
    NSURL *url;
    XMHWebViewProvider *webProvider;
    CDUnknownBlockType _backActionBlock;
    XMHybridErrorView *_errorView;
    XMHybridOverlayView *_overlayView;
    NSString *_htmlString;
    NSURL *_baseUrl;
    NSString *_pageKey;
    NSString *_userAgent;
    XMHComponentModel *_component;
    XMHybridRecorder *_hybridRecorder;
    XMHybridMiniGameRecord *_hybridMiniGameRecorder;
    XMHCapOrientationRegisterModel *_orientationRegisterModel;
    XMHCapNavTitleModel *_navTitleBtnModel;
    XMHCapNavBackTitleModel *_navBackTitleModel;
    XMHCapNavBackTitleModel *_navRightTitleModel;
    XMHCBModel *_navBackCBModel;
    XMHCBModel *_navCloseCBModel;
    XMHCapNavTitleButtons *_navRightBtnModels;
    XMActionSheetView *_sheetView;
    UIButton *_navTitleBtn;
    CDUnknownBlockType _loginCallback;
    CDUnknownBlockType _dLoginCallback;
    CDUnknownBlockType _accountChangeCallback;
    XMHCapLoginModel *_loginModel;
    XMHCapLoginModel *_dLoginModel;
    XMHCapPageStartModel *_pageStartModel;
    NSString *_pageResultData;
    CDUnknownBlockType _pageResultBlock;
    NSMutableDictionary *_receiverDict;
    XMHCBModel *_pageResumeModel;
    XMHCBModel *_pagePauseModel;
    XMHCapRefreshModel *_refreshModel;
    XMHCapNotificationPushModel *_notificationPushModel;
    CDUnknownBlockType _imageSaveHandler;
    long long _currentTime;
    XMHCapBackgroundAudioMonitor *_backgroundAudioMonitor;
    XMHCapGplayerMonitor *_gplayerMonitor;
    long long _backgroundAudioTrackId;
    XMHybridAudioPlayer *_audioPlayer;
    XMUploadProgressView *_uploadProgressView;
    XMHybridPageStartLogModel *_startPageLogModel;
    XMPayReq *_payReq;
    XMHTMLShareModel *_htmlShareModel;
    NSString *_urlOfCurrentPage;
    NSString *_shareSource;
    long long _activityId;
    UIButton *_shareBtn;
    UIBarButtonItem *_defaultShareBtn;
    long long _currentStatusBarStyle;
    long long _preOrient;
    NSDictionary *_shareAdParams;
    UIView *_shareAdView;
    NSURL *_uploadImageUrl;
    CDUnknownBlockType _uploadImageBlock;
    XMHCapImageUploadData *_imageUploadCap;
    LOTAnimationView *_loadingAnimationView;
    UIView *_loadingAnimationBgView;
}

+ (void)postStatisticFromComponent:(id)arg1 action:(id)arg2 data:(id)arg3;
+ (void)showMachineVerificationInVC:(id)arg1 sessionId:(id)arg2 bizType:(id)arg3 captchaUrl:(id)arg4 parentViewController:(id)arg5 callBack:(CDUnknownBlockType)arg6;
+ (void)showMachineVerification:(id)arg1 sessionId:(id)arg2 bizType:(id)arg3 captchaUrl:(id)arg4 callBack:(CDUnknownBlockType)arg5;
+ (void)showMachineVerificationInViewController:(id)arg1 bpId:(id)arg2 callBack:(CDUnknownBlockType)arg3;
+ (void)showMachineVerification:(id)arg1 bpId:(id)arg2 callBack:(CDUnknownBlockType)arg3;
+ (void)showMachineVerificationInViewController:(id)arg1 bpId:(id)arg2 bizType:(id)arg3 callBack:(CDUnknownBlockType)arg4;
+ (void)showMachineVerification:(id)arg1 bpId:(id)arg2 bizType:(id)arg3 callBack:(CDUnknownBlockType)arg4;
+ (id)actitvityUrl:(long long)arg1 withDetail:(long long)arg2;
+ (id)urlForActivityVC:(id)arg1 activity:(long long)arg2 detail:(long long)arg3;
+ (id)urlForMyGame;
+ (id)urlForHotlineUrl:(id)arg1;
+ (id)addQueryItemUrl:(id)arg1 withDict:(id)arg2;
+ (id)urlForHotlineMessage;
+ (id)urlForHotlineQuestionString:(id)arg1 autoPlay:(_Bool)arg2;
+ (id)urlForHotlineQuestion:(long long)arg1 autoPlay:(_Bool)arg2;
+ (id)urlForHotlineMine;
+ (id)urlForHotlineUserString:(id)arg1;
+ (id)urlForHotlineUser:(long long)arg1;
+ (id)urlForHotline;
+ (id)activityWebViewControllerWithURL:(id)arg1 configration:(CDUnknownBlockType)arg2;
+ (void)pushActivityWebViewControllerWithURL:(id)arg1 fromViewController:(id)arg2 configration:(CDUnknownBlockType)arg3;
+ (void)pushWebViewControllerWithHTML:(id)arg1 base:(id)arg2 fromViewController:(id)arg3;
+ (void)pushWebViewController:(id)arg1 fromViewController:(id)arg2;
+ (id)webViewControllerWithHTML:(id)arg1 base:(id)arg2;
+ (id)webViewControllerWithHTMLString:(id)arg1 baseURL:(id)arg2;
+ (id)webViewControllerWithURL:(id)arg1;
+ (void)pushWebViewControllerWithURL:(id)arg1 fromViewController:(id)arg2 configration:(CDUnknownBlockType)arg3;
+ (void)pushWebViewControllerWithURL:(id)arg1 fromViewController:(id)arg2;
+ (id)handleViewControllerForUrl:(id)arg1;
+ (_Bool)canFindComponentForUrl:(id)arg1;
+ (_Bool)canHandleUrl:(id)arg1;
+ (id)hybridViewControllerWithURL:(id)arg1;
+ (void)pushHybridViewControllerWithPageModel:(id)arg1 fromViewController:(id)arg2;
+ (void)pushHybridViewControllerWithURL:(id)arg1 fromViewController:(id)arg2;
+ (void)pushWebViewControllerWithURLString:(id)arg1 fromViewController:(id)arg2 configration:(CDUnknownBlockType)arg3;
+ (void)pushWebViewControllerWithURLString:(id)arg1 fromViewController:(id)arg2;
+ (void)pushHybridViewControllerWithPageModel:(id)arg1 fromViewController:(id)arg2 pageResultBlock:(CDUnknownBlockType)arg3;
+ (void)pushHybridViewControllerWithURL:(id)arg1 fromViewController:(id)arg2 pageResultBlock:(CDUnknownBlockType)arg3;
+ (_Bool)openMsgURL:(id)arg1;
+ (id)ignoreAjaxHookList;
+ (_Bool)checkUseAjaxHook:(id)arg1;
+ (_Bool)checkUseNonPersistentDataStore;
+ (_Bool)checkUseWKWebView:(id)arg1;
+ (_Bool)addShareAdInXMHybridVC:(id)arg1;
+ (void)openAppStoreInAppWithId:(id)arg1 delegate:(id)arg2 complete:(CDUnknownBlockType)arg3;
+ (void)jssdkPlayAudio:(long long)arg1 enterView:(id)arg2 vc:(id)arg3 trackChange:(_Bool)arg4;
+ (void)playAudio:(long long)arg1 enterView:(id)arg2 vc:(id)arg3 trackChange:(_Bool)arg4;
+ (void)stopAudio;
+ (void)accessTokenForUrl:(id)arg1 completed:(CDUnknownBlockType)arg2;
+ (_Bool)isFromXMLYDomain:(id)arg1;
@property(retain, nonatomic) UIView *loadingAnimationBgView; // @synthesize loadingAnimationBgView=_loadingAnimationBgView;
@property(retain, nonatomic) LOTAnimationView *loadingAnimationView; // @synthesize loadingAnimationView=_loadingAnimationView;
@property(retain, nonatomic) XMHCapImageUploadData *imageUploadCap; // @synthesize imageUploadCap=_imageUploadCap;
@property(copy, nonatomic) CDUnknownBlockType uploadImageBlock; // @synthesize uploadImageBlock=_uploadImageBlock;
@property(retain, nonatomic) NSURL *uploadImageUrl; // @synthesize uploadImageUrl=_uploadImageUrl;
@property(nonatomic) _Bool needResetASR; // @synthesize needResetASR=_needResetASR;
@property(retain, nonatomic) UIView *shareAdView; // @synthesize shareAdView=_shareAdView;
@property(retain, nonatomic) NSDictionary *shareAdParams; // @synthesize shareAdParams=_shareAdParams;
@property(nonatomic) long long preOrient; // @synthesize preOrient=_preOrient;
@property(nonatomic) _Bool ignoreJSSDKStatusBarSetting; // @synthesize ignoreJSSDKStatusBarSetting=_ignoreJSSDKStatusBarSetting;
@property(nonatomic) long long currentStatusBarStyle; // @synthesize currentStatusBarStyle=_currentStatusBarStyle;
@property(retain, nonatomic) UIBarButtonItem *defaultShareBtn; // @synthesize defaultShareBtn=_defaultShareBtn;
@property(retain, nonatomic) UIButton *shareBtn; // @synthesize shareBtn=_shareBtn;
@property(nonatomic) _Bool shouldSlide; // @synthesize shouldSlide=_shouldSlide;
@property(nonatomic) _Bool orientationLandscape; // @synthesize orientationLandscape=_orientationLandscape;
@property(nonatomic) _Bool needSupportOrientation; // @synthesize needSupportOrientation=_needSupportOrientation;
@property(nonatomic) _Bool bForceLandscape; // @synthesize bForceLandscape=_bForceLandscape;
@property(nonatomic) _Bool closeWebViewAfterCloseAppStore; // @synthesize closeWebViewAfterCloseAppStore=_closeWebViewAfterCloseAppStore;
@property(nonatomic) long long activityId; // @synthesize activityId=_activityId;
@property(nonatomic) _Bool isActivityUrl; // @synthesize isActivityUrl=_isActivityUrl;
@property(retain, nonatomic) NSString *shareSource; // @synthesize shareSource=_shareSource;
@property(nonatomic) _Bool isShareByJSSDKOrYa; // @synthesize isShareByJSSDKOrYa=_isShareByJSSDKOrYa;
@property(nonatomic) _Bool isShare; // @synthesize isShare=_isShare;
@property(nonatomic) _Bool isExternalUrl; // @synthesize isExternalUrl=_isExternalUrl;
@property(nonatomic) _Bool hasInjectJSSDK; // @synthesize hasInjectJSSDK=_hasInjectJSSDK;
@property(copy, nonatomic) NSString *urlOfCurrentPage; // @synthesize urlOfCurrentPage=_urlOfCurrentPage;
@property(retain, nonatomic) XMHTMLShareModel *htmlShareModel; // @synthesize htmlShareModel=_htmlShareModel;
@property(retain, nonatomic) XMPayReq *payReq; // @synthesize payReq=_payReq;
@property(retain, nonatomic) XMHybridPageStartLogModel *startPageLogModel; // @synthesize startPageLogModel=_startPageLogModel;
@property(retain, nonatomic) XMUploadProgressView *uploadProgressView; // @synthesize uploadProgressView=_uploadProgressView;
@property(retain, nonatomic) XMHybridAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(nonatomic) long long backgroundAudioTrackId; // @synthesize backgroundAudioTrackId=_backgroundAudioTrackId;
@property(retain, nonatomic) XMHCapGplayerMonitor *gplayerMonitor; // @synthesize gplayerMonitor=_gplayerMonitor;
@property(retain, nonatomic) XMHCapBackgroundAudioMonitor *backgroundAudioMonitor; // @synthesize backgroundAudioMonitor=_backgroundAudioMonitor;
@property(nonatomic) float audioDuration; // @synthesize audioDuration=_audioDuration;
@property(nonatomic) long long currentTime; // @synthesize currentTime=_currentTime;
@property(copy, nonatomic) CDUnknownBlockType imageSaveHandler; // @synthesize imageSaveHandler=_imageSaveHandler;
@property(retain, nonatomic) XMHCapNotificationPushModel *notificationPushModel; // @synthesize notificationPushModel=_notificationPushModel;
@property(retain, nonatomic) XMHCapRefreshModel *refreshModel; // @synthesize refreshModel=_refreshModel;
@property(retain, nonatomic) XMHCBModel *pagePauseModel; // @synthesize pagePauseModel=_pagePauseModel;
@property(retain, nonatomic) XMHCBModel *pageResumeModel; // @synthesize pageResumeModel=_pageResumeModel;
@property(retain, nonatomic) NSMutableDictionary *receiverDict; // @synthesize receiverDict=_receiverDict;
@property(copy, nonatomic) CDUnknownBlockType pageResultBlock; // @synthesize pageResultBlock=_pageResultBlock;
@property(retain, nonatomic) NSString *pageResultData; // @synthesize pageResultData=_pageResultData;
@property(retain, nonatomic) XMHCapPageStartModel *pageStartModel; // @synthesize pageStartModel=_pageStartModel;
@property(retain, nonatomic) XMHCapLoginModel *dLoginModel; // @synthesize dLoginModel=_dLoginModel;
@property(retain, nonatomic) XMHCapLoginModel *loginModel; // @synthesize loginModel=_loginModel;
@property(copy, nonatomic) CDUnknownBlockType accountChangeCallback; // @synthesize accountChangeCallback=_accountChangeCallback;
@property(copy, nonatomic) CDUnknownBlockType dLoginCallback; // @synthesize dLoginCallback=_dLoginCallback;
@property(copy, nonatomic) CDUnknownBlockType loginCallback; // @synthesize loginCallback=_loginCallback;
@property(retain, nonatomic) UIButton *navTitleBtn; // @synthesize navTitleBtn=_navTitleBtn;
@property(retain, nonatomic) XMActionSheetView *sheetView; // @synthesize sheetView=_sheetView;
@property(retain, nonatomic) XMHCapNavTitleButtons *navRightBtnModels; // @synthesize navRightBtnModels=_navRightBtnModels;
@property(retain, nonatomic) XMHCBModel *navCloseCBModel; // @synthesize navCloseCBModel=_navCloseCBModel;
@property(retain, nonatomic) XMHCBModel *navBackCBModel; // @synthesize navBackCBModel=_navBackCBModel;
@property(retain, nonatomic) XMHCapNavBackTitleModel *navRightTitleModel; // @synthesize navRightTitleModel=_navRightTitleModel;
@property(retain, nonatomic) XMHCapNavBackTitleModel *navBackTitleModel; // @synthesize navBackTitleModel=_navBackTitleModel;
@property(retain, nonatomic) XMHCapNavTitleModel *navTitleBtnModel; // @synthesize navTitleBtnModel=_navTitleBtnModel;
@property(retain, nonatomic) XMHCapOrientationRegisterModel *orientationRegisterModel; // @synthesize orientationRegisterModel=_orientationRegisterModel;
@property(retain, nonatomic) XMHybridMiniGameRecord *hybridMiniGameRecorder; // @synthesize hybridMiniGameRecorder=_hybridMiniGameRecorder;
@property(nonatomic) _Bool recorderPermissionGranted; // @synthesize recorderPermissionGranted=_recorderPermissionGranted;
@property(retain, nonatomic) XMHybridRecorder *hybridRecorder; // @synthesize hybridRecorder=_hybridRecorder;
@property(retain, nonatomic) XMHComponentModel *component; // @synthesize component=_component;
@property(nonatomic) _Bool jsReady; // @synthesize jsReady=_jsReady;
@property(retain, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(copy, nonatomic) NSString *pageKey; // @synthesize pageKey=_pageKey;
@property(nonatomic) _Bool shouldAddCommonUseragent; // @synthesize shouldAddCommonUseragent=_shouldAddCommonUseragent;
@property(retain, nonatomic) NSURL *baseUrl; // @synthesize baseUrl=_baseUrl;
@property(copy, nonatomic) NSString *htmlString; // @synthesize htmlString=_htmlString;
@property(retain, nonatomic) XMHybridOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(retain, nonatomic) XMHybridErrorView *errorView; // @synthesize errorView=_errorView;
@property(copy, nonatomic) CDUnknownBlockType backActionBlock; // @synthesize backActionBlock=_backActionBlock;
@property(retain, nonatomic) XMHWebViewProvider *webProvider; // @synthesize webProvider;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
- (void).cxx_destruct;
- (void)webViewAbility:(id)arg1 jsSDKcompletedBlock:(CDUnknownBlockType)arg2;
- (_Bool)shouldTriggerBackPan:(id)arg1;
- (void)webViewWorkWithError:(id)arg1;
- (void)initOverlayViewIfNeeded;
- (void)showErrorView:(id)arg1;
- (void)onBack:(_Bool)arg1;
- (_Bool)goBack;
- (void)back;
- (void)invokePageResultBlock;
- (void)closeCallback;
- (void)clearJSEnv;
- (void)updateStateBarState;
- (_Bool)needFullScreenWithTransparentBar;
- (_Bool)needFullScreenWithStateBar;
- (_Bool)needFullScreen;
- (void)setScrollContentInsetSignal;
- (void)restoreUI;
- (void)customUI;
- (void)windowDidBecomeHidden:(id)arg1;
- (void)notificationPagePause;
- (void)notificationPageResume;
- (void)addRightButtonWithTitle:(id)arg1;
- (void)addLeftButtonWithTitle:(id)arg1;
- (void)webViewWorkWithClearJSEnv;
- (void)reloadWithURL:(id)arg1;
- (void)xmh_webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)xmh_webViewDidFinishLoad:(id)arg1;
- (_Bool)xmh_webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)xmh_webViewDidStartLoad:(id)arg1;
- (void)closeBtnDidTap;
- (void)rightBtnDidTap;
- (void)backBtnDidTap;
- (void)resetDefaultShareState:(id)arg1;
- (void)triggerPullToRefresh;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)initWebProviderWithConfig:(id)arg1;
- (void)initUrlWithUrl:(id)arg1;
- (id)initWithHTMLString:(id)arg1 baseURL:(id)arg2 withConfig:(id)arg3;
- (id)initWithHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)initWithURL:(id)arg1 withConfig:(id)arg2;
- (id)initWithURL:(id)arg1;
- (void)dealloc;
- (void)webViewAbility:(id)arg1 loadComponent:(id)arg2;
- (id)webViewAbilityGetCurrentComponent:(id)arg1;
- (void)sendXlogParams:(id)arg1;
- (_Bool)htmlXlogUrl:(id)arg1;
- (void)sendUBTParams:(id)arg1;
- (_Bool)htmlUBTUrl:(id)arg1;
- (void)fetchUserAgent;
- (void)postStatisticAction:(id)arg1 data:(id)arg2;
- (void)webViewAbility:(id)arg1 jssdkLog:(id)arg2;
- (void)webViewAbility:(id)arg1 trackModel:(id)arg2;
- (void)webViewAbility:(id)arg1 statisticModel:(id)arg2;
- (void)startPageLogFinishedSuccess;
- (void)startPageLogBeginWithURL:(id)arg1;
- (void)pageLogFail:(id)arg1 withCompModel:(id)arg2;
- (void)pageLogFail:(id)arg1;
- (void)webViewWorkWithUndefinedCommond:(id)arg1;
- (void)registerAccountNotifications;
- (id)getUserInfoWithoutParamIsLogin;
- (id)getUserInfo;
- (void)webViewAbility:(id)arg1 accountChangeWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 registerWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 logoutWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)accountChangeCallBack:(_Bool)arg1;
- (void)logoutOK;
- (void)loginCancel;
- (void)deviceLoginOK;
- (void)loginOK;
- (void)webViewAbility:(id)arg1 deviceLogin:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 withLoginModel:(id)arg2 loginWithCompletedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 getUserInfoWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 withAudioPlayer:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 withAudioMoniter:(id)arg2;
- (void)onBackgroundAudioStop;
- (void)onBackgroundAudioResume;
- (void)onBackgroundAudioPause;
- (void)audioPlayerStatusChanged:(id)arg1;
- (void)onBackgroundAudioPlayingProgress:(id)arg1;
- (void)onBackgroundAudioPlay;
- (void)backgroundAudioMonitorCallbackWithArgs:(id)arg1;
- (id)playArgsForCallbackType:(id)arg1 status:(id)arg2;
- (id)currentBackgroundAudioPlayInfo;
- (void)setupPlayerNotifications;
- (void)webViewAbility:(id)arg1 withPlayer:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 withBackgroundAudioMoniter:(id)arg2;
- (void)sendSubcribeMsg:(long long)arg1 params:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (id)sha1HashStringWithChinese:(id)arg1;
- (id)wxSubscribeSignatureWithDic:(id)arg1;
- (void)getSubscribeTS:(CDUnknownBlockType)arg1;
- (void)webViewAbility:(id)arg1 speechRecognition:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 wxSubscribe:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 ShareVote:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 shareActivity:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 shareSound:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 shareForCoupon:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 useCoupon:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 notifyApp:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 getUserListenDataWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 aliVeriFace:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 thirdAuthInfo:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 adInfoWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 deviceInfoWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 openScanCodeWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbilityJSReady:(id)arg1;
- (void)webViewAbility:(id)arg1 systemInfoWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)uploadAudioFileWithSliceMode:(id)arg1 path:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)uploadAudioFileModel:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)updateAudioUploadProgressViewFinished:(_Bool)arg1;
- (void)updateAudioUploadProgressView:(float)arg1;
- (void)showAudioUploadProgressView;
- (void)webViewAbility:(id)arg1 saveFileModel:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 sliceUploadFileModel:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 uploaFileModel:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)saveImage:(id)arg1;
- (void)longPressed:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)addLongPressGesture;
- (void)onGplayeronPlayEndForTry;
- (void)onGplayerResume;
- (void)audioPlayerStatusChanged:(id)arg1;
- (void)onGplayerPlayingProgress:(id)arg1;
- (void)onGplayerStop;
- (void)onGplayerPause;
- (void)onGplayerPlay;
- (void)gplayerMonitorCallbackWithArgs:(id)arg1;
- (id)playArgsForCallbackType:(id)arg1 status:(id)arg2;
- (void)setupPlayerNotifications;
- (id)currentAudioPlayInfo:(id)arg1;
- (void)webViewAbility:(id)arg1 withGplayerMoniter:(id)arg2;
- (void)webViewAbility:(id)arg1 gplayerSetPlaylist:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 gplayerPlaySeekModel:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbilityGplayerStop:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbilityGplayerResume:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbilityGplayerPause:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 gplayerPlayModel:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (_Bool)useCustomerLoadingAnimation;
- (void)stopLoadingAnimation;
- (void)startLoadingAnimation;
- (void)showPermissionDenied;
- (void)webViewAbility:(id)arg1 withMiniGameRegisterMoniter:(id)arg2;
- (void)webViewAbility:(id)arg1 withGameRecord:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)gotoRemoteSetting;
- (_Bool)notificationAvaliable;
- (void)callPushNotification:(_Bool)arg1;
- (void)pullToRefresh;
- (void)removePullToRefresh;
- (void)addPullToRefresh;
- (void)webViewAbilityStopPullToRefresh:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 pullToRefreshModel:(id)arg2;
- (void)notificationAvaliable:(id)arg1;
- (void)broadCastReceived:(id)arg1;
- (void)postBroadcast:(id)arg1;
- (void)removeReceiver:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)addReceiver:(id)arg1;
- (void)receivedBroadcast:(id)arg1;
- (void)webViewAbility:(id)arg1 pageReceiver:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 notificationPush:(id)arg2;
- (void)webViewAbility:(id)arg1 pageMessage:(id)arg2;
- (void)startPageOnCurrentVC:(id)arg1;
- (void)webViewAbility:(id)arg1 startPageForResult:(id)arg2;
- (void)webViewAbility:(id)arg1 startPage:(id)arg2;
- (void)webViewAbility:(id)arg1 pageResume:(id)arg2;
- (void)webViewAbility:(id)arg1 pagePause:(id)arg2;
- (void)xmPayDict:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)xmPayDict:(id)arg1 jssdk:(_Bool)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)aliPayDict:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)wxPayDict:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 withApplePay:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 withPayModel:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 getPayChannelsWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)stopRecordCompletion:(CDUnknownBlockType)arg1;
- (void)resumeRecordCompletion:(CDUnknownBlockType)arg1;
- (void)pauseRecordCompletion:(CDUnknownBlockType)arg1;
- (void)showPermissionDenied;
- (void)startRecordCompletion:(CDUnknownBlockType)arg1;
- (void)stopPlayVoiceCompletion:(CDUnknownBlockType)arg1;
- (void)resumePlayVoiceCompletion:(CDUnknownBlockType)arg1;
- (void)pausePlayVoiceCompletion:(CDUnknownBlockType)arg1;
- (void)startPlayVoiceCompletion:(CDUnknownBlockType)arg1;
- (void)webViewAbility:(id)arg1 withRecordText:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 withRecorderMoniter:(id)arg2;
- (void)webViewAbility:(id)arg1 withRecorder:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 withPlayVoice:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (_Bool)needExecuteJSCode;
- (void)executeShareCompletJS:(id)arg1 channel:(id)arg2;
- (void)imageUrlConvertToImage:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)shareContentWithSharedType:(unsigned long long)arg1 withShareModel:(id)arg2 adView:(id)arg3 completedBlock:(CDUnknownBlockType)arg4;
- (id)errormsg:(id)arg1 XMHCapShareModel:(id)arg2;
- (void)returnValue:(id)arg1 model:(id)arg2 WithSharedType:(unsigned long long)arg3 jssdk:(_Bool)arg4 withShareModel:(id)arg5 adView:(id)arg6 completedBlock:(CDUnknownBlockType)arg7;
- (void)shareContentWithSharedType:(unsigned long long)arg1 jssdk:(_Bool)arg2 withShareModel:(id)arg3 adView:(id)arg4 completedBlock:(CDUnknownBlockType)arg5;
- (void)webViewAbility:(id)arg1 withShareModel:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)onDefaultShareHTML:(id)arg1;
- (void)removeDefaultShareItem;
- (id)addDefaultShareButton;
- (_Bool)defaultShare:(id)arg1;
- (void)showDefaultShare:(id)arg1;
- (id)navBtnIconUrls:(id)arg1;
- (id)navBtnIconForBtnModel:(id)arg1;
- (void)showActionSheetForBtnModels;
- (void)actionSheetDismiss:(id)arg1;
- (void)btnModelDidTap:(id)arg1;
- (void)navRightBtnDidTap:(id)arg1;
- (void)navTitleBtnDidTap:(id)arg1;
- (id)moreBtnFromBtnModel;
- (id)btnFromBtnModel:(id)arg1;
- (void)webViewAbility:(id)arg1 withNavBarButtonsModel:(id)arg2;
- (void)webViewAbilityClose:(id)arg1;
- (void)webViewAbility:(id)arg1 withNavBarClose:(id)arg2;
- (void)webViewAbility:(id)arg1 withNavBarRightTitle:(id)arg2;
- (void)webViewAbility:(id)arg1 withNavBarBackTitle:(id)arg2;
- (void)webViewAbilityBack:(id)arg1 withModel:(id)arg2;
- (void)webViewAbility:(id)arg1 withNavBarBack:(id)arg2;
- (void)webViewAbility:(id)arg1 withNavBarModel:(id)arg2;
- (void)webViewAbility:(id)arg1 withStatusBarModel:(id)arg2;
- (void)interfaceOrientation:(long long)arg1;
- (void)ignoreJSSDKStatusBarStyle:(_Bool)arg1;
- (void)rotateCallBack;
- (void)webViewAbility:(id)arg1 orientationRegister:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 orientation:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 showSDKPrompt:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 showSDKAlert:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 showAlert:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 hideLoadingWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 showLoading:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 hideToastWithCompletedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 showToast:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)noNetGoBack:(id)arg1;
- (void)addNoNetBackButtonWhenFullScreen;
- (void)webViewAbility:(id)arg1 slideClose:(id)arg2;
- (void)uploadImagesWithUrl:(id)arg1 imagesDatas:(id)arg2 fileNames:(id)arg3 completedBlock:(CDUnknownBlockType)arg4;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingImage:(id)arg2 editingInfo:(id)arg3;
- (void)openCamera:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)webViewAbility:(id)arg1 uploadImage:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)webViewAbility:(id)arg1 downloadImage:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 preViewImages:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 openMiniProgram:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 openUrl:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 openLink:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (_Bool)isYouzanUrl:(id)arg1;
- (void)webViewAbility:(id)arg1 openPage:(id)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)xmh_webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)xmh_webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)xmh_webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)execTaskFollowWKInit;
- (void)webViewAbility:(id)arg1 useAudioPgEffect:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (id)soundName:(id)arg1;
- (void)webViewAbility:(id)arg1 useAudioBgEffect:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 audioSPEffectList:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)webViewAbility:(id)arg1 audioBgEffectList:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)adViewDidUpdateWithAdModels:(id)arg1 andPositionName:(id)arg2;
- (id)adViewWillRequestWithParamsForPositionName:(id)arg1;
- (void)adViewWillAddAds;
- (void)refreshJSSound;
- (void)onPlayingTrackPaused;
- (void)onPlayingTrackChanged;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (void)updateSupportOrientation:(_Bool)arg1;
- (void)updateAdParams:(id)arg1;
- (void)updateIsActivityUrl:(_Bool)arg1 activityId:(long long)arg2;
- (void)updateIsExternalUrl:(_Bool)arg1;
- (void)updateHtmlShareModel:(id)arg1;
- (void)addRightShare:(_Bool)arg1;
- (_Bool)rightShare;
- (id)xmHtmlShareModel;
- (id)webView;
- (id)webURL;
- (void)onFeedBack:(id)arg1;
- (void)addRightFeedBack;
- (void)callbackFunction:(id)arg1 success:(_Bool)arg2 message:(id)arg3 data:(id)arg4;
- (void)removeShareButton;
- (void)onShareHTML:(id)arg1;
- (id)addShareButton;
- (void)webViewWillOpenTingScheme:(id)arg1;
- (void)webView:(id)arg1 useCoupon:(long long)arg2;
- (id)callbackParam:(_Bool)arg1 withData:(id)arg2;
- (void)webView:(id)arg1 shareForCoupon:(id)arg2 withCallBack:(id)arg3;
- (void)webView:(id)arg1 downloadAppWithId:(id)arg2;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)webViewWillBack:(id)arg1;
- (void)webView:(id)arg1 showToast:(id)arg2;
- (void)webView:(id)arg1 iapPay:(id)arg2 withCallBack:(id)arg3;
- (void)webView:(id)arg1 xmPay:(id)arg2 withCallBack:(id)arg3;
- (void)webView:(id)arg1 aliPay:(id)arg2 withCallBack:(id)arg3;
- (void)webView:(id)arg1 wxPay:(id)arg2 withCallBack:(id)arg3;
- (void)webView:(id)arg1 payInfo:(id)arg2 supportPayCallBack:(id)arg3;
- (void)webView:(id)arg1 payFinishNotify:(id)arg2;
- (void)webView:(id)arg1 addCustomShareButtonWithCallBack:(id)arg2;
- (void)webView:(id)arg1 shareDict:(id)arg2 withCallBack:(id)arg3;
- (void)webView:(id)arg1 shareVote:(long long)arg2 withActivityId:(long long)arg3;
- (void)webView:(id)arg1 shareActivity:(long long)arg2;
- (void)webView:(id)arg1 shareSound:(long long)arg2 withActivityId:(long long)arg3;
- (void)webViewWillStopSound:(id)arg1;
- (void)webView:(id)arg1 playSound:(long long)arg2;
- (void)webView:(id)arg1 accessTokenCompleted:(CDUnknownBlockType)arg2;
- (void)webView:(id)arg1 deviceInfo:(id)arg2 appReady:(CDUnknownBlockType)arg3;
- (void)updateNavgationBarTitleFromWebView:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

