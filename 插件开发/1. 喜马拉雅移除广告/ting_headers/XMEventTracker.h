//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FMDatabaseQueue, NSMutableArray, NSString, NSURL, XMEventTrackerTimer;
@protocol XMEventTrackerRequestAgent;

@interface XMEventTracker : NSObject
{
    _Bool _reportAtBackground;
    _Bool _beVerbose;
    _Bool _allowCellerNet;
    _Bool _compressJSON;
    _Bool _useZipCompress;
    _Bool _reportRequestIsActive;
    NSString *_name;
    NSURL *_reportURL;
    double _reportInterval;
    unsigned long long _reportCount;
    unsigned long long _reportOnceEventCount;
    id <XMEventTrackerRequestAgent> _requestAgent;
    long long _netWorkStatus;
    NSMutableArray *_trackedEvents;
    NSMutableArray *_offlineTrackedEvents;
    XMEventTrackerTimer *_reportTimer;
    FMDatabaseQueue *_databaseQueue;
}

@property(retain, nonatomic) FMDatabaseQueue *databaseQueue; // @synthesize databaseQueue=_databaseQueue;
@property _Bool reportRequestIsActive; // @synthesize reportRequestIsActive=_reportRequestIsActive;
@property(retain, nonatomic) XMEventTrackerTimer *reportTimer; // @synthesize reportTimer=_reportTimer;
@property(retain, nonatomic) NSMutableArray *offlineTrackedEvents; // @synthesize offlineTrackedEvents=_offlineTrackedEvents;
@property(retain, nonatomic) NSMutableArray *trackedEvents; // @synthesize trackedEvents=_trackedEvents;
@property long long netWorkStatus; // @synthesize netWorkStatus=_netWorkStatus;
@property(nonatomic) __weak id <XMEventTrackerRequestAgent> requestAgent; // @synthesize requestAgent=_requestAgent;
@property unsigned long long reportOnceEventCount; // @synthesize reportOnceEventCount=_reportOnceEventCount;
@property(nonatomic) _Bool useZipCompress; // @synthesize useZipCompress=_useZipCompress;
@property _Bool compressJSON; // @synthesize compressJSON=_compressJSON;
@property _Bool allowCellerNet; // @synthesize allowCellerNet=_allowCellerNet;
@property _Bool beVerbose; // @synthesize beVerbose=_beVerbose;
@property(nonatomic) unsigned long long reportCount; // @synthesize reportCount=_reportCount;
@property(nonatomic) double reportInterval; // @synthesize reportInterval=_reportInterval;
@property _Bool reportAtBackground; // @synthesize reportAtBackground=_reportAtBackground;
@property(retain) NSURL *reportURL; // @synthesize reportURL=_reportURL;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)dealloc;
- (void)logVerboseMessage:(id)arg1;
- (void)logMessage:(id)arg1;
- (void)onReachabilityStatusChanged:(long long)arg1;
- (id)newReportRequestWithOfflineBody:(id)arg1;
- (id)newReportRequestWithBody:(id)arg1;
- (id)newPostBodyFromEvents:(id)arg1;
- (void)saveEventListToDb:(id)arg1 db:(id)arg2;
- (void)combineOfflineDataAndSend;
- (void)sendEventToServer:(id)arg1;
- (_Bool)offlineDataCanSend;
- (_Bool)onlineDataCanSend;
- (void)sendTrackedData;
- (void)sendTrackedDataWhenBackgrounding;
- (void)stopReportTimer;
- (void)ensureReportTimerIsRunning;
- (void)saveAllEventsToDB;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)loadTrackedListFromDb:(id)arg1;
- (void)initDbAndRestoreFailSendEventList;
- (id)initWithName:(id)arg1 dbQueue:(id)arg2;
- (void)trackXMEvent:(id)arg1;
- (id)expandQuery:(id)arg1;

@end

