//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RCTEventEmitter.h"

#import "RCTBridgeModule-Protocol.h"
#import "RNSoundMixControllerDelegate-Protocol.h"
#import "RNZegoInstanceDelegate-Protocol.h"
#import "XMAppAudioAction-Protocol.h"

@class NSDictionary, NSMutableArray, NSObject, NSString, NSTimer, RCTBridge;
@protocol OS_dispatch_queue;

@interface RNAudioLiveRoomBridgeModule : RCTEventEmitter <RNSoundMixControllerDelegate, RNZegoInstanceDelegate, XMAppAudioAction, RCTBridgeModule>
{
    double _flvPlayProgress;
    NSMutableArray *_bufferedSideInfos;
    double _flvPlayElapsedTime;
    double _flvPlayElapsedLastUpdateTime;
    long long _currentTime;
    long long _bufferStartTime;
    NSObject<OS_dispatch_queue> *_sideinfoOperationQueue;
    NSString *_lastPlayUrl;
    NSDictionary *_lastPlayParams;
    _Bool _isObserversRegistered;
    NSTimer *_livePlayProgressTimer;
}

+ (const struct RCTMethodInfo *)__rct_export__70326;
+ (const struct RCTMethodInfo *)__rct_export__39025;
+ (const struct RCTMethodInfo *)__rct_export__38524;
+ (const struct RCTMethodInfo *)__rct_export__37223;
+ (const struct RCTMethodInfo *)__rct_export__36722;
+ (const struct RCTMethodInfo *)__rct_export__35921;
+ (const struct RCTMethodInfo *)__rct_export__34920;
+ (const struct RCTMethodInfo *)__rct_export__33519;
+ (const struct RCTMethodInfo *)__rct_export__31918;
+ (const struct RCTMethodInfo *)__rct_export__31417;
+ (const struct RCTMethodInfo *)__rct_export__30816;
+ (const struct RCTMethodInfo *)__rct_export__30115;
+ (const struct RCTMethodInfo *)__rct_export__29614;
+ (const struct RCTMethodInfo *)__rct_export__28913;
+ (const struct RCTMethodInfo *)__rct_export__28312;
+ (const struct RCTMethodInfo *)__rct_export__27511;
+ (const struct RCTMethodInfo *)__rct_export__27110;
+ (const struct RCTMethodInfo *)__rct_export__2669;
+ (const struct RCTMethodInfo *)__rct_export__2498;
+ (const struct RCTMethodInfo *)__rct_export__2387;
+ (const struct RCTMethodInfo *)__rct_export__2126;
+ (const struct RCTMethodInfo *)__rct_export__1915;
+ (const struct RCTMethodInfo *)__rct_export__1784;
+ (const struct RCTMethodInfo *)__rct_export__1543;
+ (const struct RCTMethodInfo *)__rct_export__1452;
+ (const struct RCTMethodInfo *)__rct_export__1411;
+ (const struct RCTMethodInfo *)__rct_export__1370;
+ (void)load;
+ (id)moduleName;
@property(retain, nonatomic) NSTimer *livePlayProgressTimer; // @synthesize livePlayProgressTimer=_livePlayProgressTimer;
- (void).cxx_destruct;
- (_Bool)isCurrentPlayKTVLiveUrl;
- (void)dealloc;
- (void)demoSong:(CDUnknownBlockType)arg1 rejector:(CDUnknownBlockType)arg2;
- (void)zegoInstance:(id)arg1 onPublishQualityUpdate:(CDStruct_6c4cbc08)arg2;
- (void)zegoInstance:(id)arg1 captureSoundLevelUpdate:(float)arg2;
- (void)zegoInstance:(id)arg1 headsetStateChanged:(_Bool)arg2;
- (void)zegoInstance:(id)arg1 onPublishStatusUpdate:(int)arg2 streamId:(id)arg3;
- (void)zegoInstance:(id)arg1 onMixStreamResult:(int)arg2;
- (void)zegoInstanceOnTempBroken:(id)arg1;
- (void)zegoInstanceOnReconnect:(id)arg1;
- (void)zegoInstanceOnKickout:(id)arg1;
- (void)zegoInstanceOnDisconnect:(id)arg1;
- (void)zegoInstance:(id)arg1 recvSideInfo:(id)arg2;
- (_Bool)appSessionWasPreemptedByOther;
- (void)adPlayEndPlay:(id)arg1;
- (void)adPlayWillPlay:(id)arg1;
- (void)liveVideoPlayerDidStopNotification:(id)arg1;
- (void)liveVideoPlayerDidPauseNotification:(id)arg1;
- (void)otherPlayerDidStartNotification:(id)arg1;
- (void)otherPlayerPageDidShow:(id)arg1;
- (void)xmlivePlayerWhenNotLiving:(id)arg1;
- (void)XMLivePlayerDidDataBufferEnd:(id)arg1;
- (void)XMLivePlayerDidDataBufferStart:(id)arg1;
- (void)XMLiveRadioPlayer:(id)arg1 didFailWithError:(id)arg2;
- (void)XMLiveRadioPlayerDidStopped:(id)arg1;
- (void)XMLiveRadioPlayerDidStart:(id)arg1;
- (void)XMLivePlayerWillPlaying:(id)arg1;
- (void)XMLiveRadioPlayerDidPaused:(id)arg1;
- (void)XMLiveRadioPlayerDidEnd:(id)arg1;
- (void)livePlayerProgressNotify:(id)arg1;
- (void)XMLiveRadioPlayer:(id)arg1 didGetFLVUnknowData:(id)arg2;
- (void)updateFLVPlayElapsedTime;
- (void)livePlayProgressTimerTicked:(id)arg1;
- (void)clearLivePlayProgressTimer;
- (void)rnSoundMixController:(id)arg1 audioClip:(id)arg2 playFailed:(id)arg3;
- (void)rnSoundMixController:(id)arg1 audioClip:(id)arg2 updateProgress:(double)arg3 duration:(double)arg4;
- (void)rnSoundMixController:(id)arg1 audioClipFinishPlay:(id)arg2;
- (void)audioSessionWasResumed:(id)arg1;
- (void)audioSessionWasInterrupted:(id)arg1;
- (id)supportedEvents;
- (void)sendMediaSideInfo:(id)arg1;
- (void)stopSong;
- (void)seekSong:(double)arg1;
- (void)playSong:(id)arg1;
- (void)playAudioEffect:(id)arg1;
- (void)audioEffectList:(CDUnknownBlockType)arg1 rejector:(CDUnknownBlockType)arg2;
- (void)setEffectWithConfig:(id)arg1;
- (void)setEffect:(int)arg1;
- (void)setVolumeOfSong:(float)arg1;
- (void)setVolumeOfSinger:(float)arg1;
- (void)setTone:(float)arg1;
- (void)isHeadsetPluggedIn:(CDUnknownBlockType)arg1 rejector:(CDUnknownBlockType)arg2;
- (void)setLoopbackEnabled:(_Bool)arg1;
- (void)setMicEnabled:(_Bool)arg1 resolver:(CDUnknownBlockType)arg2 rejector:(CDUnknownBlockType)arg3;
- (void)resumeZegoPlayer;
- (void)pauseZegoPlayer;
- (void)finishPublish:(CDUnknownBlockType)arg1 rejector:(CDUnknownBlockType)arg2;
- (void)startPublish:(CDUnknownBlockType)arg1 rejector:(CDUnknownBlockType)arg2;
- (void)close:(CDUnknownBlockType)arg1 rejector:(CDUnknownBlockType)arg2;
- (void)join:(id)arg1 userInfo:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejector:(CDUnknownBlockType)arg4;
- (void)getPlayerState:(CDUnknownBlockType)arg1 rejector:(CDUnknownBlockType)arg2;
- (void)stopLive;
- (void)playLiveUrl:(id)arg1 roomInfo:(id)arg2;
- (void)setIsPlayerPage:(_Bool)arg1;
- (void)clearPlayerObservers;
- (void)registerPlayerObservers;
- (void)unregisterObservers;
- (void)registerObservers;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) __weak RCTBridge *bridge;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property(readonly) Class superclass;

@end

