//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSMutableDictionary, NSTimer, XMAVPlayer, XMMMoment, XMMomentVideoStatisticInfo, XMNRequest;
@protocol XMMomentVideoPlayerDelegate;

@interface XMMomentVideoPlayer : NSObject
{
    _Bool _mobileNetworkStillPlay;
    _Bool _shouldAutoPlay;
    _Bool _needPause;
    XMAVPlayer *_player;
    unsigned long long _videoStatus;
    XMMMoment *_currentMoment;
    double _volume;
    long long _scalingMode;
    unsigned long long _videoStatisticSource;
    id <XMMomentVideoPlayerDelegate> _videoDelegate;
    XMMomentVideoStatisticInfo *_reportInfo;
    NSTimer *_loadingMillisecondTimer;
    NSTimer *_playDurationTimer;
    NSDate *_blockStartTime;
    XMNRequest *_videoDetailRequest;
    XMNRequest *_preloadRequest;
    NSMutableDictionary *_addressCacheDictionary;
    unsigned long long _preloadMomentId;
    CDUnknownBlockType _preparedSeek;
}

+ (id)sharedManager;
@property(nonatomic) _Bool needPause; // @synthesize needPause=_needPause;
@property(copy, nonatomic) CDUnknownBlockType preparedSeek; // @synthesize preparedSeek=_preparedSeek;
@property(nonatomic) unsigned long long preloadMomentId; // @synthesize preloadMomentId=_preloadMomentId;
@property(retain, nonatomic) NSMutableDictionary *addressCacheDictionary; // @synthesize addressCacheDictionary=_addressCacheDictionary;
@property(retain, nonatomic) XMNRequest *preloadRequest; // @synthesize preloadRequest=_preloadRequest;
@property(retain, nonatomic) XMNRequest *videoDetailRequest; // @synthesize videoDetailRequest=_videoDetailRequest;
@property(retain, nonatomic) NSDate *blockStartTime; // @synthesize blockStartTime=_blockStartTime;
@property(retain, nonatomic) NSTimer *playDurationTimer; // @synthesize playDurationTimer=_playDurationTimer;
@property(retain, nonatomic) NSTimer *loadingMillisecondTimer; // @synthesize loadingMillisecondTimer=_loadingMillisecondTimer;
@property(retain, nonatomic) XMMomentVideoStatisticInfo *reportInfo; // @synthesize reportInfo=_reportInfo;
@property(nonatomic) __weak id <XMMomentVideoPlayerDelegate> videoDelegate; // @synthesize videoDelegate=_videoDelegate;
@property(nonatomic) unsigned long long videoStatisticSource; // @synthesize videoStatisticSource=_videoStatisticSource;
@property(nonatomic) _Bool shouldAutoPlay; // @synthesize shouldAutoPlay=_shouldAutoPlay;
@property(nonatomic) _Bool mobileNetworkStillPlay; // @synthesize mobileNetworkStillPlay=_mobileNetworkStillPlay;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(readonly, nonatomic) XMMMoment *currentMoment; // @synthesize currentMoment=_currentMoment;
@property(nonatomic) unsigned long long videoStatus; // @synthesize videoStatus=_videoStatus;
@property(readonly, nonatomic) XMAVPlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)removeAddressCacaheOfMomemt:(unsigned long long)arg1;
- (id)videoCacheAddress:(id)arg1;
- (void)preloadNextVideo:(id)arg1;
- (void)reportStatistic;
- (void)reportCount;
- (void)onPlayDurationTimer;
- (void)stopPlayDurationTimer;
- (void)startPlayDurationTimer;
- (void)onLoadingMillisecondTimer;
- (void)stopLoadingMillisecondTimer;
- (void)startLoadingMillisecondTimer;
- (void)changeOrientation:(long long)arg1;
- (void)showMobileNetwork;
- (void)showBadNetwork;
- (void)showNoNetwork;
- (void)shouldAutoResumeOrPlay;
- (void)shouldResumeOrPlay;
- (void)checkNetWorkStatus;
- (void)audioSessionWasInterrupted:(id)arg1;
- (void)reachabilityChanged;
- (void)removeNotification;
- (void)addNotification;
- (void)playFailed;
- (void)playEnd;
- (void)startPlaying;
- (void)startLoading;
- (void)addKVOWithPlayer:(id)arg1;
- (_Bool)inWindow;
- (void)play:(id)arg1;
- (void)getVideoAddressDetail;
- (void)seekToTime:(double)arg1;
- (double)currentTime;
- (_Bool)isPlaying;
- (void)resumePlayVideo;
- (void)pausePlayVideo:(_Bool)arg1;
- (void)replayVideo;
- (void)stopPlayVideo;
- (void)startPlayVideo;
- (void)playVideoOfMoment:(id)arg1 withDelegate:(id)arg2;
- (void)receiveApplicationWillTerminateNotification:(id)arg1;
- (void)receiveLoginSuccessNotification:(id)arg1;
- (void)receiveApplicationDidEnterBackgroundNotification:(id)arg1;
- (void)receiveApplicationWillEnterForegroundNotification:(id)arg1;
- (void)prepareVideoTask;
- (void)dealloc;
- (id)init;

@end

