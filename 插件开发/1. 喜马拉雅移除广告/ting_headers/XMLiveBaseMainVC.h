//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XMBaseVC.h"

#import "XMLiveActivityPendantViewDelegete-Protocol.h"
#import "XMLiveBaseMainVCProtocol-Protocol.h"
#import "XMLivePageScrollable-Protocol.h"
#import "XMLiveRoomChatMsgBaseManagerDelegate-Protocol.h"

@class NSString, XMLiveActivityPendantView, XMLiveBarrageHelper, XMLiveBaseInputView, XMLiveGiftPopHelper, XMLiveMiddlePageFragment, XMLiveNobleEntryHelper, XMLiveNormalEntryHelper, XMLivePageContainerView, XMLivePageFragment, XMLiveRoomCoverBgView, XMLiveTemplateEffectAnimHelper;
@protocol XMLiveApproachInfoProtocol, XMLiveBaseRootVCProtocol;

@interface XMLiveBaseMainVC : XMBaseVC <XMLiveActivityPendantViewDelegete, XMLiveRoomChatMsgBaseManagerDelegate, XMLiveBaseMainVCProtocol, XMLivePageScrollable>
{
    XMBaseVC<XMLiveBaseRootVCProtocol> *superViewCtrl;
    id <XMLiveApproachInfoProtocol> approachInfo;
    XMLivePageContainerView *pageContainer;
    XMLivePageFragment *topFragment;
    XMLiveMiddlePageFragment *middleFragment;
    XMLivePageFragment *bottomFragment;
    XMLiveRoomCoverBgView *bgCoverFragment;
    XMLiveBaseInputView *roomInputView;
    XMLiveBarrageHelper *barrageHelper;
    XMLiveGiftPopHelper *giftHelper;
    XMLiveNormalEntryHelper *entryHelper;
    XMLiveNobleEntryHelper *nobleEntryHelper;
    XMLiveTemplateEffectAnimHelper *tempEffectAnimHelper;
    XMLiveActivityPendantView *_majorPendantView;
    XMLiveActivityPendantView *_minorPendantView1;
    XMLiveActivityPendantView *_minorPendantView2;
    XMLiveActivityPendantView *_minorPendantView3;
}

- (void).cxx_destruct;
@property(retain, nonatomic) XMLiveActivityPendantView *minorPendantView3; // @synthesize minorPendantView3=_minorPendantView3;
@property(retain, nonatomic) XMLiveActivityPendantView *minorPendantView2; // @synthesize minorPendantView2=_minorPendantView2;
@property(retain, nonatomic) XMLiveActivityPendantView *minorPendantView1; // @synthesize minorPendantView1=_minorPendantView1;
@property(retain, nonatomic) XMLiveActivityPendantView *majorPendantView; // @synthesize majorPendantView=_majorPendantView;
@property(retain, nonatomic) XMLiveTemplateEffectAnimHelper *tempEffectAnimHelper; // @synthesize tempEffectAnimHelper;
@property(retain, nonatomic) XMLiveNobleEntryHelper *nobleEntryHelper; // @synthesize nobleEntryHelper;
@property(retain, nonatomic) XMLiveNormalEntryHelper *entryHelper; // @synthesize entryHelper;
@property(retain, nonatomic) XMLiveGiftPopHelper *giftHelper; // @synthesize giftHelper;
@property(retain, nonatomic) XMLiveBarrageHelper *barrageHelper; // @synthesize barrageHelper;
@property(retain, nonatomic) XMLiveBaseInputView *roomInputView; // @synthesize roomInputView;
@property(retain, nonatomic) XMLiveRoomCoverBgView *bgCoverFragment; // @synthesize bgCoverFragment;
@property(retain, nonatomic) XMLivePageFragment *bottomFragment; // @synthesize bottomFragment;
@property(retain, nonatomic) XMLiveMiddlePageFragment *middleFragment; // @synthesize middleFragment;
@property(retain, nonatomic) XMLivePageFragment *topFragment; // @synthesize topFragment;
@property(retain, nonatomic) XMLivePageContainerView *pageContainer; // @synthesize pageContainer;
@property(retain, nonatomic) id <XMLiveApproachInfoProtocol> approachInfo; // @synthesize approachInfo;
@property(nonatomic) __weak XMBaseVC<XMLiveBaseRootVCProtocol> *superViewCtrl; // @synthesize superViewCtrl;
- (void)dismissKeyBoard;
- (void)showKeyBoard:(_Bool)arg1;
- (_Bool)isInMicInteractive;
- (void)leaveCheckMicWithAlertCompletion:(CDUnknownBlockType)arg1;
- (_Bool)pageCanScrollOnDirection;
- (_Bool)pageScrollableMoveWithPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)pageScrollableTouchAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)switchRoom:(id)arg1;
- (void)reportEnterLiveRoomSuccess;
- (void)startPushStream;
- (void)startPullStream;
- (void)joinChatRoom;
- (void)addNotificationObserver;
- (void)onTapHandle:(id)arg1;
- (void)updateBgCoverImage;
- (void)configsMiddleFragment;
- (void)configBottomFragment;
- (void)configTopFragment;
- (void)addRoomPageContainer;
- (unsigned long long)liveBusinessType;
- (void)addNotify;
- (void)initEffectHelpers;
- (void)onLivePageDataReload:(id)arg1;
- (void)onLivePageRelease;
- (void)onLivePageInit;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)back;
- (void)viewDidLoad;
- (id)initWithApproachInfo:(id)arg1;
- (void)dealloc;
- (id)processConfigDictFrom184Iting:(id)arg1;
- (void)showActivityPopViewWithConfigDict:(id)arg1 pendantId:(long long)arg2;
- (void)showActivityPopViewWithItem:(id)arg1;
- (void)onReceiveOpenIting184WebContainer:(id)arg1;
- (void)activityView:(id)arg1 didWebPendantsLoadFinish:(id)arg2;
- (void)activityView:(id)arg1 webPendant:(id)arg2 didFailLoadWithError:(id)arg3;
- (void)activityView:(id)arg1 shouldActionForPendant:(id)arg2 targetURL:(id)arg3 callBack:(CDUnknownBlockType)arg4;
- (void)activityView:(id)arg1 didScrollToPendant:(id)arg2;
- (struct CGRect)minorPendantViewFrame;
- (struct CGRect)primaryPendantViewFrame;
- (id)createMinorPendantView;
- (id)createActivityPendantViewByType:(unsigned long long)arg1;
- (id)getCurrentPendantActivityViewByType:(unsigned long long)arg1;
- (void)updateMinorPendantView:(id)arg1 withData:(id)arg2 andRollTime:(long long)arg3 topOffset:(double)arg4;
- (void)updatePendantTab:(unsigned long long)arg1 pendant:(id)arg2;
- (void)updateActivityPendantView:(unsigned long long)arg1;
- (_Bool)shouldAggregateMinorActivityPendant:(_Bool)arg1;
- (_Bool)shouldShowMinorActivityPendant:(_Bool)arg1;
- (_Bool)shouldShowMajorActivityPendant;
- (id)configPendants:(id)arg1;
- (void)msgScrollViewEndScrolling:(id)arg1;
- (void)msgScrollViewWillBeginDragging:(id)arg1;
- (void)newMsgWillShow;
- (void)dealWithThirdTypeMessageOfGiftEffectAnim:(id)arg1;
- (void)dealWithThirdTypeMessageOfChangeSkin:(id)arg1;
- (void)dealWithThirdTypeMessageOfEntryRoom:(id)arg1;
- (void)onChatRoomReceiveVersionUpdataTips:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

