//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;
@protocol XMJSCocoaFFIDelegate;

@interface XMJSCocoaFFIArgument : NSObject
{
    BOOL typeEncoding;
    NSString *structureTypeEncoding;
    void *ptr;
    struct _ffi_type structureType;
    id customData;
    _Bool isReturnValue;
    _Bool ownsStorage;
    _Bool isOutArgument;
    struct OpaqueJSValue *_jsValue;
    _Bool _isBlock;
    _Bool _isFowardParam;
    _Bool _isSameContext;
    NSString *_pointerTypeEncoding;
    id <XMJSCocoaFFIDelegate> _delegate;
}

+ (struct OpaqueJSValue *)callJSFunctionWithValue:(struct OpaqueJSValue *)arg1 withParam:(const struct OpaqueJSValue **)arg2 withCount:(unsigned long long)arg3;
+ (id)formatJSToOC:(struct OpaqueJSValue *)arg1;
+ (struct OpaqueJSValue *)formatOCToJS:(id)arg1;
+ (_Bool)unboxJSHash:(struct OpaqueJSValue *)arg1 toObject:(id *)arg2 inContext:(struct OpaqueJSContext *)arg3;
+ (_Bool)unboxJSArray:(struct OpaqueJSValue *)arg1 toObject:(id *)arg2 inContext:(struct OpaqueJSContext *)arg3;
+ (_Bool)unboxJSValueRef:(struct OpaqueJSValue *)arg1 toObject:(id *)arg2 inContext:(struct OpaqueJSContext *)arg3;
+ (_Bool)boxObject:(id)arg1 toJSValueRef:(const struct OpaqueJSValue **)arg2 inContext:(struct OpaqueJSContext *)arg3;
+ (int)sizeOfStructure:(id)arg1;
+ (id)structureTypeEncodingDescription:(id)arg1;
+ (long long)structureTypeEncodingDescription:(id)arg1 inString:(id *)arg2;
+ (id)typeEncodingsFromStructureTypeEncoding:(id)arg1 parsedCount:(long long *)arg2;
+ (id)typeEncodingsFromStructureTypeEncoding:(id)arg1;
+ (id)structureFullTypeEncodingFromStructureName:(id)arg1;
+ (void)setStructFormatEncoding:(id)arg1 withName:(id)arg2;
+ (void)setStructFormatEncodingFromJSCall:(id)arg1 withName:(id)arg2 withMapArray:(id)arg3;
+ (id)getStructFormatEnconding:(id)arg1;
+ (id)structureFullTypeEncodingFromStructureTypeEncoding:(id)arg1;
+ (id)fixedEmptyStructNameByTypesEncoding:(id)arg1;
+ (id)fixedDeviceStructReturnEncoding:(id)arg1;
+ (id)encodingsFromStructureTypeEncoding:(id)arg1;
+ (id)structureNameFromStructureTypeEncoding:(id)arg1;
+ (id)formartNativeStructEncodingTypeToJSCoacoaStructEncoding:(id)arg1;
+ (id)oneTimeProcessEncoding:(const char *)arg1 withCount:(int)arg2 withDepth:(int)arg3 withMaptable:(id)arg4 randomMap:(_Bool)arg5;
+ (id)typeEncodingForType:(id)arg1;
+ (struct _ffi_type *)ffi_typeForTypeEncoding:(BOOL)arg1;
+ (int)alignmentOfTypeEncoding:(BOOL)arg1;
+ (int)sizeOfTypeEncoding:(BOOL)arg1;
+ (long long)structureFromJSObjectRef:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2 inParentJSValueRef:(struct OpaqueJSValue *)arg3 fromCString:(char *)arg4 fromStorage:(void **)arg5;
+ (long long)structTestEmptyStructFromJSObjectRef:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2 inParentJSValueRef:(struct OpaqueJSValue *)arg3 fromCString:(char *)arg4 fromStorage:(void **)arg5;
+ (long long)structureToJSValueRef:(const struct OpaqueJSValue **)arg1 inContext:(struct OpaqueJSContext *)arg2 fromCString:(char *)arg3 fromStorage:(void **)arg4 initialValues:(const struct OpaqueJSValue **)arg5 initialValueCount:(long long)arg6 convertedValueCount:(long long *)arg7;
+ (long long)structureToJSValueRef:(const struct OpaqueJSValue **)arg1 inContext:(struct OpaqueJSContext *)arg2 fromCString:(char *)arg3 fromStorage:(void **)arg4;
+ (_Bool)toJSValueRef:(const struct OpaqueJSValue **)arg1 inContext:(struct OpaqueJSContext *)arg2 typeEncoding:(BOOL)arg3 fullTypeEncoding:(id)arg4 fromStorage:(void *)arg5;
+ (_Bool)convertParamObjectToTargetStorage:(void **)arg1 toEncoding:(BOOL)arg2 toFullEncoding:(const char *)arg3 fromStorage:(id *)arg4 isMemfree:(_Bool *)arg5;
+ (_Bool)checkNativeNumberRawTypeWithTypeEncoding:(BOOL)arg1;
+ (_Bool)convertNativeNumberObjectToBlockArg:(id)arg1 withTypeEncoding:(BOOL)arg2 withOutResult:(void *)arg3;
+ (_Bool)fromJSValueRef:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2 typeEncoding:(BOOL)arg3 fullTypeEncoding:(id)arg4 fromStorage:(void *)arg5;
+ (void)advancePtr:(void **)arg1 accordingToEncoding:(BOOL)arg2;
+ (void)alignPtr:(void **)arg1 accordingToEncoding:(BOOL)arg2;
+ (id)typeDescriptionForTypeEncoding:(BOOL)arg1 fullTypeEncoding:(id)arg2;
@property(nonatomic) _Bool isSameContext; // @synthesize isSameContext=_isSameContext;
@property(nonatomic) id <XMJSCocoaFFIDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool isFowardParam; // @synthesize isFowardParam=_isFowardParam;
@property(nonatomic) _Bool isBlock; // @synthesize isBlock=_isBlock;
- (_Bool)boxBlockObject:(id)arg1 toJSValueRef:(const struct OpaqueJSValue **)arg2 inContext:(struct OpaqueJSContext *)arg3;
- (_Bool)toBlockJSValueRef:(const struct OpaqueJSValue **)arg1 inContext:(struct OpaqueJSContext *)arg2 typeEncoding:(BOOL)arg3 fullTypeEncoding:(id)arg4 fromStorage:(void *)arg5;
- (_Bool)toBlockJSValueRef:(const struct OpaqueJSValue **)arg1 inContext:(struct OpaqueJSContext *)arg2;
- (void)releaseMemory;
- (void)clearJSValueRef;
- (void)setJSValueRef:(struct OpaqueJSValue *)arg1 ctx:(struct OpaqueJSContext *)arg2;
- (_Bool)toJSValueRef:(const struct OpaqueJSValue **)arg1 inContext:(struct OpaqueJSContext *)arg2;
- (_Bool)fromJSValueRef:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2;
- (void **)rawStoragePointer;
- (void **)storage;
- (void *)allocatePointerStorage;
- (void *)allocateStorage;
- (struct _ffi_type *)ffi_type;
@property(retain, nonatomic) NSString *pointerTypeEncoding; // @synthesize pointerTypeEncoding=_pointerTypeEncoding;
- (void)updateWithCustomStorage:(void *)arg1 withSize:(int)arg2;
- (void)updateWithCustomStorage:(void *)arg1;
- (void)setStructureTypeEncoding:(id)arg1 withCustomStorage:(void *)arg2;
- (void)setStructureTypeEncoding:(id)arg1;
- (id)structureTypeEncoding;
- (_Bool)setTypeEncoding:(BOOL)arg1 withCustomStorage:(void *)arg2;
- (_Bool)setTypeEncoding:(BOOL)arg1;
- (BOOL)typeEncoding;
- (_Bool)isOutArgument;
- (void)setIsOutArgument:(_Bool)arg1;
- (_Bool)isReturnValue;
- (void)setIsReturnValue:(_Bool)arg1;
- (id)typeDescription;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (void)cleanUp;
- (id)init;

@end

