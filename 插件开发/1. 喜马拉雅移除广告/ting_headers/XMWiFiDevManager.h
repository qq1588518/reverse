//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableSet, NSString, PPMediaDevice, XMHTTPConnection, XMSoundItem;

@interface XMWiFiDevManager : NSObject
{
    _Bool _isDevPaused;
    _Bool _isCmdFromDevice;
    _Bool _isConnected;
    _Bool _isDevLinked;
    _Bool _wiimuRunning;
    _Bool _isSearching;
    _Bool _isGushijiConnecting;
    _Bool _isTingshubaoConnecting;
    int _lookForType;
    PPMediaDevice *currentDevice;
    XMSoundItem *currentTrack;
    XMHTTPConnection *playChannelRequest;
    NSMutableArray *sendArray;
    NSMutableArray *receiveArray;
    NSMutableArray *ximalayaDevices;
    NSMutableArray *dossDevices;
    NSString *channel1;
    NSString *channel2;
    NSString *channel3;
    NSString *channel4;
    long long _nCurChannel;
    long long _channelAlbumId;
    PPMediaDevice *_theDevice;
    NSMutableArray *_downloads;
    NSMutableArray *_downloading;
    NSMutableSet *_existTitles;
    long long _chosedIndexForDownload;
    long long _upgradeStatus;
    NSMutableArray *_shukeDevices;
    double _volume;
    NSMutableArray *_dossPlayList;
    CDUnknownBlockType _volChangeBlock;
}

+ (_Bool)isPrefixSet:(id)arg1 supportUUIDString:(id)arg2;
+ (id)userNameOfDevice:(id)arg1;
+ (void)setAVSystemVolume:(float)arg1;
+ (float)volumeOfAVSystem;
+ (id)getIpAddresses;
+ (id)WiFiName;
+ (void)pausePlayerIfNeed;
+ (long long)deviceType:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)shareInstance;
@property(copy, nonatomic) CDUnknownBlockType volChangeBlock; // @synthesize volChangeBlock=_volChangeBlock;
@property(retain, nonatomic) NSMutableArray *dossPlayList; // @synthesize dossPlayList=_dossPlayList;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(retain, nonatomic) NSMutableArray *shukeDevices; // @synthesize shukeDevices=_shukeDevices;
@property(nonatomic) _Bool isTingshubaoConnecting; // @synthesize isTingshubaoConnecting=_isTingshubaoConnecting;
@property(nonatomic) _Bool isGushijiConnecting; // @synthesize isGushijiConnecting=_isGushijiConnecting;
@property(nonatomic) _Bool isSearching; // @synthesize isSearching=_isSearching;
@property(nonatomic) long long upgradeStatus; // @synthesize upgradeStatus=_upgradeStatus;
@property(nonatomic, getter=isWiimuRunning) _Bool wiimuRunning; // @synthesize wiimuRunning=_wiimuRunning;
@property(nonatomic) long long chosedIndexForDownload; // @synthesize chosedIndexForDownload=_chosedIndexForDownload;
@property(nonatomic) _Bool isDevLinked; // @synthesize isDevLinked=_isDevLinked;
@property(retain, nonatomic) NSMutableSet *existTitles; // @synthesize existTitles=_existTitles;
@property(retain, nonatomic) NSMutableArray *downloading; // @synthesize downloading=_downloading;
@property(retain, nonatomic) NSMutableArray *downloads; // @synthesize downloads=_downloads;
@property(retain, nonatomic) PPMediaDevice *theDevice; // @synthesize theDevice=_theDevice;
@property(nonatomic) int lookForType; // @synthesize lookForType=_lookForType;
@property(nonatomic) long long channelAlbumId; // @synthesize channelAlbumId=_channelAlbumId;
@property(nonatomic) long long nCurChannel; // @synthesize nCurChannel=_nCurChannel;
@property(nonatomic) _Bool isConnected; // @synthesize isConnected=_isConnected;
@property(copy, nonatomic) NSString *channel4; // @synthesize channel4;
@property(copy, nonatomic) NSString *channel3; // @synthesize channel3;
@property(copy, nonatomic) NSString *channel2; // @synthesize channel2;
@property(copy, nonatomic) NSString *channel1; // @synthesize channel1;
@property(retain, nonatomic) NSMutableArray *dossDevices; // @synthesize dossDevices;
@property(retain, nonatomic) NSMutableArray *ximalayaDevices; // @synthesize ximalayaDevices;
@property(retain, nonatomic) NSMutableArray *receiveArray; // @synthesize receiveArray;
@property(retain, nonatomic) NSMutableArray *sendArray; // @synthesize sendArray;
@property(retain, nonatomic) XMHTTPConnection *playChannelRequest; // @synthesize playChannelRequest;
@property(retain, nonatomic) XMSoundItem *currentTrack; // @synthesize currentTrack;
@property(retain, nonatomic) PPMediaDevice *currentDevice; // @synthesize currentDevice;
- (void).cxx_destruct;
- (void)volumeChanged:(id)arg1;
- (void)addVolumeObserverWithChangedBlock:(CDUnknownBlockType)arg1;
- (void)removeVolumeObserver;
- (id)transXmlString:(id)arg1;
- (void)onDossPlayQueueNotification:(id)arg1;
- (_Bool)backUpQueueWithSpeaker:(id)arg1 queueName:(id)arg2 albumUrl:(id)arg3;
- (_Bool)setKeyMappingWithSpeaker:(id)arg1 queueName:(id)arg2 channelIndex:(long long)arg3;
- (_Bool)getKeyMappingWithSpeaker:(id)arg1;
- (void)onDossCreateQueueNotification;
- (_Bool)createQueueWithSpeaker:(id)arg1 list:(id)arg2 currentItem:(id)arg3;
- (_Bool)browseQueueForSpeaker:(id)arg1 queueName:(id)arg2;
- (void)playWithDevice:(id)arg1;
- (void)pauseWithDevice:(id)arg1;
- (void)playAfterCreateQueue:(id)arg1;
- (void)playQueueWithIndex:(int)arg1 queueName:(id)arg2 speaker:(id)arg3;
- (void)playWithSound:(id)arg1 list:(id)arg2 device:(id)arg3;
- (void)onPlayOrPauseNotification:(id)arg1;
- (void)playNextSound;
- (void)playPreSound;
- (void)WiFiDevStopNotification;
- (void)WiFiDevPauseNotification;
- (void)WiFiDevPlayNotification;
- (void)WiFiDevDidDisconnect;
- (void)disConnectWiFiDev;
- (void)seekToCurrentSecond:(unsigned long long)arg1;
- (void)updatePositionInfo;
- (void)WiFiDeviceStop;
- (void)WiFiDevicePause;
- (void)WiFiDevicePlay;
- (void)WiFiDevicePlayWithTrack;
- (void)playOtherItemWithUrl:(id)arg1 title:(id)arg2;
- (void)setPlayPercent;
- (void)onSeekNotification;
- (void)onPlayerPlaying:(id)arg1;
- (void)mutePlayer;
- (_Bool)isShukeDevice:(id)arg1;
- (_Bool)isDossDevice:(id)arg1;
- (_Bool)isXimalayaDevice:(id)arg1;
- (_Bool)isNeedPlaying;
- (long long)getWiFiModel;
- (id)getWiFiDevList;
- (id)getCurrentWiFi;
- (_Bool)isAPMode;
- (void)searchWiFiDevFinish;
- (void)stopSearch;
- (void)startSearch;
- (void)stopDLNA;
- (void)startDLNA;
- (void)stopDLNAFromPlayingView;
- (void)stopAfterNoResult;
- (void)cancelStopDLNA;
- (void)startDLNAFromPlayingView;
- (void)removeAllDevices;
- (void)onWifiAvailable;
- (void)onWifiUnAvailable;
- (void)unsubscribeWithDevice:(id)arg1;
- (void)subscribeWithDevice:(id)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

