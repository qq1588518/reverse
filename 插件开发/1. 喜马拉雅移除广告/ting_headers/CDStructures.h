//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, IFlyPcmPlayer, NSData, NSInputStream, NSOutputStream, NSString, NSURLRequest;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ABDetectInfo {
    struct CGRect faceSize;
    struct CGRect position;
    int faceCount;
    float yaw;
    float pitch;
    float motionBlur;
    float gaussianBlur;
    float leftEyeHwratio;
    float rightEyeHwratio;
    float mouthHwratio;
    float wearGlasses;
    float brightness;
    float integrity;
    _Bool notVideo;
    float smoothYaw;
    float smoothPitch;
    _Bool eyeBlink;
    _Bool mouthOpen;
    _Bool pitch3d;
    float quality;
    float staticQuality;
    float frontbright;
    float backbright;
    float faceshift;
    float inputImageWidth;
    float inputImageHeight;
    float pitchScore;
    float yawScore;
    float mouthScore;
    float blinkScore;
    float landmarkScore;
    float brightDiff;
    float backHightlight;
    float faceSpeed;
    int checkResult;
    char *exts;
};

struct ABDetectResult {
    _Bool faceExist;
    int failReason;
    int promptMessage;
    char *failLog;
    struct LivenessStatus status;
    struct ImageBuffer imagebuffer;
    char *pBigImage;
    char *pLocalImage;
    char *pOriginImage;
    char *pGlobalImage;
    char *pActionImage0;
    char *pActionImage1;
    int bigImageWidth;
    int bigImageHeight;
    int originImageWidth;
    int originImageHeight;
    int globalImageWidth;
    int globalImageHeight;
    int localImageWidth;
    int localImageHeight;
    int actionImageWidth;
    int actionImageHeight;
};

struct ABFaceDetectResult {
    int result;
    int facesDetected;
    struct CGRect faceSize;
    struct CGRect position;
    float gaussianBlur;
    float brightness;
    float quality;
    int checkResult;
    float pitchScore;
    float yawScore;
    float mouthScore;
    float blinkScore;
    float landmarkScore;
    float brightDiff;
    float backHightlight;
    float faceSpeed;
};

struct ABQAMPConfiguration {
    _Bool enabled;
    long long fallbackTarget;
    double fallbackTime;
};

struct ABQStreamSourceFirstByte {
    char _field1;
    char _field2;
};

struct AUPreset {
    int presetNumber;
    struct __CFString *presetName;
};

struct AVAppAsyncStatistic {
    unsigned long long size;
    long long buf_backwards;
    long long buf_forwards;
    long long buf_capacity;
};

struct AVBSFContext {
    struct AVClass *_field1;
    struct AVBitStreamFilter *_field2;
    struct AVBSFInternal *_field3;
    void *_field4;
    struct AVCodecParameters *_field5;
    struct AVCodecParameters *_field6;
    struct AVRational _field7;
    struct AVRational _field8;
};

struct AVBSFInternal;

struct AVBitStreamFilter;

struct AVBufferRef;

struct AVChapter;

struct AVClass;

struct AVCodec;

struct AVCodecContext {
    struct AVClass *_field1;
    int _field2;
    int _field3;
    struct AVCodec *_field4;
    char _field5[32];
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    void *_field9;
    struct AVCodecInternal *_field10;
    void *_field11;
    long long _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    char *_field18;
    int _field19;
    struct AVRational _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    CDUnknownFunctionPointerType _field30;
    CDUnknownFunctionPointerType _field31;
    int _field32;
    float _field33;
    int _field34;
    int _field35;
    float _field36;
    int _field37;
    int _field38;
    float _field39;
    float _field40;
    float _field41;
    float _field42;
    float _field43;
    float _field44;
    float _field45;
    int _field46;
    int _field47;
    int *_field48;
    struct AVRational _field49;
    int _field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    int _field55;
    int _field56;
    int _field57;
    int _field58;
    int _field59;
    int _field60;
    int _field61;
    int _field62;
    int _field63;
    int _field64;
    int _field65;
    int _field66;
    unsigned short *_field67;
    unsigned short *_field68;
    int _field69;
    int _field70;
    int _field71;
    int _field72;
    int _field73;
    int _field74;
    int _field75;
    float _field76;
    int _field77;
    int _field78;
    int _field79;
    int _field80;
    int _field81;
    int _field82;
    int _field83;
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    int _field88;
    int _field89;
    int _field90;
    int _field91;
    int _field92;
    int _field93;
    int _field94;
    int _field95;
    int _field96;
    int _field97;
    int _field98;
    int _field99;
    int _field100;
    int _field101;
    unsigned long long _field102;
    unsigned long long _field103;
    int _field104;
    int _field105;
    CDUnknownFunctionPointerType _field106;
    int _field107;
    float _field108;
    float _field109;
    int _field110;
    int _field111;
    int _field112;
    float _field113;
    float _field114;
    int _field115;
    int _field116;
    int _field117;
    struct RcOverride *_field118;
    char *_field119;
    long long _field120;
    long long _field121;
    float _field122;
    float _field123;
    float _field124;
    float _field125;
    int _field126;
    int _field127;
    int _field128;
    int _field129;
    int _field130;
    int _field131;
    int _field132;
    int _field133;
    int _field134;
    int _field135;
    int _field136;
    int _field137;
    long long _field138;
    CDUnknownFunctionPointerType _field139;
    int _field140;
    int _field141;
    int _field142;
    int _field143;
    int _field144;
    int _field145;
    int _field146;
    int _field147;
    int _field148;
    int _field149;
    char *_field150;
    char *_field151;
    int _field152;
    int _field153;
    int _field154;
    int _field155;
    int _field156;
    int _field157;
    long long _field158;
    struct AVHWAccel *_field159;
    void *_field160;
    unsigned long long _field161[8];
    int _field162;
    int _field163;
    int _field164;
    int _field165;
    int _field166;
    struct AVFrame *_field167;
    int _field168;
    int _field169;
    int _field170;
    int _field171;
    CDUnknownFunctionPointerType _field172;
    CDUnknownFunctionPointerType _field173;
    int _field174;
    int _field175;
    int _field176;
    int _field177;
    int _field178;
    int _field179;
    char *_field180;
    int _field181;
    int _field182;
    unsigned long long _field183;
    int _field184;
    int _field185;
    struct AVRational _field186;
    int _field187;
    struct AVRational _field188;
    struct AVCodecDescriptor *_field189;
    long long _field190;
    long long _field191;
    long long _field192;
    long long _field193;
    char *_field194;
    int _field195;
    int _field196;
    int _field197;
    unsigned short *_field198;
    char *_field199;
    char *_field200;
    unsigned int _field201;
    struct AVPacketSideData *_field202;
    int _field203;
    struct AVBufferRef *_field204;
    int _field205;
};

struct AVCodecDescriptor;

struct AVCodecInternal;

struct AVCodecParameters;

struct AVCodecParser;

struct AVCodecParserContext {
    void *_field1;
    struct AVCodecParser *_field2;
    long long _field3;
    long long _field4;
    long long _field5;
    int _field6;
    int _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    int _field12;
    int _field13;
    long long _field14[4];
    long long _field15[4];
    long long _field16[4];
    int _field17;
    long long _field18;
    long long _field19[4];
    int _field20;
    long long _field21;
    int _field22;
    int _field23;
    int _field24;
    long long _field25[4];
    long long _field26;
    long long _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
};

struct AVConnectionType;

struct AVDictionary;

struct AVFormatContext {
    struct AVClass *_field1;
    struct AVInputFormat *_field2;
    struct AVOutputFormat *_field3;
    void *_field4;
    struct AVIOContext *_field5;
    int _field6;
    unsigned int _field7;
    struct AVStream **_field8;
    char _field9[1024];
    long long _field10;
    long long _field11;
    long long _field12;
    unsigned int _field13;
    int _field14;
    int _field15;
    long long _field16;
    long long _field17;
    char *_field18;
    int _field19;
    unsigned int _field20;
    struct AVProgram **_field21;
    int _field22;
    int _field23;
    int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    struct AVChapter **_field28;
    struct AVDictionary *_field29;
    long long _field30;
    int _field31;
    int _field32;
    struct AVIOInterruptCB _field33;
    int _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    int _field45;
    int _field46;
    long long _field47;
    unsigned int _field48;
    int _field49;
    int _field50;
    int _field51;
    int _field52;
    char *_field53;
    char *_field54;
    struct AVFormatInternal *_field55;
    int _field56;
    struct AVCodec *_field57;
    struct AVCodec *_field58;
    struct AVCodec *_field59;
    struct AVCodec *_field60;
    int _field61;
    void *_field62;
    CDUnknownFunctionPointerType _field63;
    long long _field64;
    char *_field65;
    int _field66;
    CDUnknownFunctionPointerType _field67;
    char *_field68;
    CDUnknownFunctionPointerType _field69;
    CDUnknownFunctionPointerType _field70;
    char *_field71;
};

struct AVFormatInternal;

struct AVFrac {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct AVFrame {
    char *_field1[8];
    int _field2[8];
    char **_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct AVRational _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    int _field14;
    int _field15;
    int _field16;
    void *_field17;
    unsigned long long _field18[8];
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    long long _field23;
    int _field24;
    unsigned long long _field25;
    struct AVBufferRef *_field26[8];
    struct AVBufferRef **_field27;
    int _field28;
    struct AVFrameSideData **_field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    struct AVBufferRef *_field37;
    long long _field38;
    long long _field39;
    long long _field40;
    struct AVDictionary *_field41;
    int _field42;
    int _field43;
    int _field44;
    char *_field45;
    int _field46;
    int _field47;
    struct AVBufferRef *_field48;
};

struct AVFrameSideData;

struct AVHWAccel;

struct AVIOContext;

struct AVIOInterruptCB {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct AVIndexEntry;

struct AVInputFormat;

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    struct AVMessage *next;
};

struct AVOutputFormat;

struct AVPacket {
    struct AVBufferRef *_field1;
    long long _field2;
    long long _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
    struct AVPacketSideData *_field8;
    int _field9;
    long long _field10;
    long long _field11;
    long long _field12;
};

struct AVPacketList;

struct AVPacketSideData;

struct AVPlayerState;

struct AVProbeData {
    char *_field1;
    char *_field2;
    int _field3;
    char *_field4;
};

struct AVProgram;

struct AVRational {
    int _field1;
    int _field2;
};

struct AVStream {
    int _field1;
    int _field2;
    struct AVCodecContext *_field3;
    void *_field4;
    struct AVFrac _field5;
    struct AVRational _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    int _field10;
    int _field11;
    struct AVRational _field12;
    struct AVDictionary *_field13;
    struct AVRational _field14;
    struct AVPacket _field15;
    struct AVPacketSideData *_field16;
    int _field17;
    int _field18;
    struct AVCodecParameters *_field19;
    CDStruct_183601bc *_field20;
    int _field21;
    long long _field22;
    long long _field23;
    long long _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    struct AVCodecParserContext *_field29;
    struct AVPacketList *_field30;
    struct AVProbeData _field31;
    long long _field32[17];
    struct AVIndexEntry *_field33;
    int _field34;
    unsigned int _field35;
    struct AVRational _field36;
    int _field37;
    long long _field38;
    long long _field39;
    int _field40;
    int _field41;
    int _field42;
    long long _field43;
    long long _field44;
    long long _field45;
    int _field46;
    long long _field47;
    long long _field48;
    int _field49;
    int _field50;
    long long _field51[17];
    unsigned char _field52[17];
    long long _field53;
    unsigned char _field54;
    unsigned char _field55;
    int _field56;
    char *_field57;
    struct AVRational _field58;
    struct FFFrac *_field59;
    struct AVStreamInternal *_field60;
};

struct AVStreamInternal;

struct ActionPlaceInfo;

struct AdSize {
    int _field1;
    int _field2;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState;

struct AudioQueueParameterEvent {
    unsigned int _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct BMWRemotingClientFactory {
    CDUnknownFunctionPointerType *_field1;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPathElement {
    int _field1;
    struct CGPoint *_field2;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CLShanYanCellularProviders {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct CNvAppFxDesc {
    CDUnknownFunctionPointerType *_field1;
    struct TNvSmartPtr<INvEffectDescriptor> _field2;
    struct vector<CNvAppFxDesc::__SNvOverridenDefParamVal, std::__1::allocator<CNvAppFxDesc::__SNvOverridenDefParamVal>> _field3;
    struct map<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef, std::__1::less<CNvAppFxParamId>, std::__1::allocator<std::__1::pair<const CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef>>> _field4;
    struct map<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef, std::__1::less<CNvAppFxParamId>, std::__1::allocator<std::__1::pair<const CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef>>> _field5;
};

struct CNvAssetPackageManager {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct mutex _field3;
    struct deque<CNvEvent *, std::__1::allocator<CNvEvent *>> _field4;
    struct CNvProjContext *_field5;
    struct CNvString _field6;
    struct CNvString _field7;
    struct SNvAssetPackageManagerCallback *_field8;
    struct CNvString _field9;
    struct CNvAssetPackageManagerWorker *_field10;
    struct CNvThread *_field11;
    struct unordered_map<CNvUuid, CNvAssetPackage *, std::__1::hash<CNvUuid>, std::__1::equal_to<CNvUuid>, std::__1::allocator<std::__1::pair<const CNvUuid, CNvAssetPackage *>>> _field12;
    struct unordered_map<CNvUuid, CNvAssetPackage *, std::__1::hash<CNvUuid>, std::__1::equal_to<CNvUuid>, std::__1::allocator<std::__1::pair<const CNvUuid, CNvAssetPackage *>>> _field13[8];
    _Bool _field14[8];
    struct CNvString _field15;
    int _field16;
};

struct CNvAssetPackageManagerWorker;

struct CNvElapsedTimer {
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field1;
};

struct CNvEvent;

struct CNvIconEngine;

struct CNvLiveWindowContainer;

struct CNvLiveWindowHelper {
    struct CNvTransform m_matCanonicalToWidget;
    struct CNvTransform m_matWidgetToCanonical;
    _Bool m_matrixUpToDate;
    int m_fillMode;
    struct CNvSizeF m_liveWindowSize;
    struct SNvRectF m_videoFrameRect;
    struct SNvRectF m_defaultVideoFrameRect;
    struct SNvColor m_bgColor;
};

struct CNvMatrix {
    float _m11;
    float _m12;
    float _m21;
    float _m22;
    float _dx;
    float _dy;
};

struct CNvProjCaptureScene;

struct CNvProjContext;

struct CNvReadWriteLock {
    struct _opaque_pthread_rwlock_t _field1;
};

struct CNvSize {
    int _field1;
    int _field2;
};

struct CNvSizeF {
    float wd;
    float ht;
};

struct CNvStreamingContext {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct INvStreamingContextCallback *_field3;
    struct function<void (CNvProjObject *)> _field4;
    int _field5;
    unsigned long long _field6;
    struct CNvStreamingEngine *_field7;
    struct CNvIconEngine *_field8;
    struct CNvWaveformEngine *_field9;
    struct CNvProjContext *_field10;
    unsigned int _field11;
    _Bool _field12;
    struct CNvReadWriteLock _field13;
    struct unordered_map<CNvString, SNvAVFileInfo *, std::__1::hash<CNvString>, std::__1::equal_to<CNvString>, std::__1::allocator<std::__1::pair<const CNvString, SNvAVFileInfo *>>> _field14;
    struct CNvReadWriteLock _field15;
    struct unordered_map<CNvString, int, std::__1::hash<CNvString>, std::__1::equal_to<CNvString>, std::__1::allocator<std::__1::pair<const CNvString, int>>> _field16;
    struct unordered_map<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *, std::__1::hash<TNvSmartPtr<CNvProjTimeline>>, std::__1::equal_to<TNvSmartPtr<CNvProjTimeline>>, std::__1::allocator<std::__1::pair<const TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>>> _field17;
    struct unordered_map<unsigned long, CNvLiveWindowContainer *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CNvLiveWindowContainer *>>> _field18;
    struct CNvLiveWindowContainer *_field19;
    struct CNvReadWriteLock _field20;
    struct unordered_map<int, CNvLiveWindowContainer *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, CNvLiveWindowContainer *>>> _field21;
    struct CNvVideoFrameSynchronizer *_field22;
    struct CNvThread *_field23;
    struct vector<TNvSmartPtr<CNvProjCaptureVideoFx>, std::__1::allocator<TNvSmartPtr<CNvProjCaptureVideoFx>>> _field24;
    struct TNvSmartPtr<CNvProjCaptureScene> _field25;
    struct CNvString _field26;
    int _field27;
    int _field28;
    float _field29;
    int _field30;
    int _field31;
    int _field32;
    struct CNvsParticleInternalWithAction _field33;
    _Bool _field34;
};

struct CNvStreamingEngine;

struct CNvString {
    struct SNvTypedArrayData<unsigned short> *d;
};

struct CNvSyncEvent {
    _Bool m_manualReset;
    _Bool m_signaled;
    struct condition_variable m_cond;
    struct mutex m_mutex;
};

struct CNvThread;

struct CNvTransform {
    struct CNvMatrix affine;
    float m_13;
    float m_23;
    float m_33;
    unsigned int m_type:5;
    unsigned int m_dirty:5;
    struct Private *d;
};

struct CNvVideoFrameSynchronizer;

struct CNvWaveformEngine;

struct CNvsIconGeneratorGetter;

struct CNvsParticleInternalWithAction {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    struct TNvSmartPtr<INvParticleSystemEffectContext> _field3;
    int _field4;
    int _field5;
    struct vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>> _field6;
    struct map<int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>>>> _field7;
    struct CNvString _field8;
    struct CNvSize _field9;
    struct CNvElapsedTimer _field10;
    int _field11;
    int _field12;
    int _field13;
    struct vector<int, std::__1::allocator<int>> _field14;
};

struct CxxModule;

struct EchoEffect;

struct EchoFilter {
    struct EchoEffect *_field1;
    struct SchroederReverb *_field2;
    short *_field3;
    short _field4;
    short *_field5;
    short *_field6;
};

struct Encoder {
    struct Encoder_Opaque *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct Encoder_Opaque;

struct EtchAsyncResult<EtchBool>;

struct EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>>;

struct EtchAsyncResult<EtchInt32>;

struct EtchAsyncResult<EtchNativeArray<signed char>>;

struct EtchAsyncResult<EtchObject>;

struct EtchAsyncResult<EtchString>;

struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>;

struct EtchAsyncResultNone;

struct EtchBool;

struct EtchByte;

struct EtchDeliveryService;

struct EtchException;

struct EtchFloat;

struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchHash<EtchString>> {
    CDUnknownFunctionPointerType *_field1;
    struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> _field2;
    struct __hash_table<std::__1::__hash_value_type<EtchString, EtchObject *>, std::__1::__unordered_map_hasher<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchHash<EtchString>, true>, std::__1::__unordered_map_equal<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchComparator<EtchString>, true>, std::__1::allocator<std::__1::__hash_value_type<EtchString, EtchObject *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchHash<EtchString>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchComparator<EtchString>, true>> {
            float _field1;
        } _field4;
    } _field3;
};

struct EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>;

struct EtchInt32 {
    CDUnknownFunctionPointerType *_field1;
    struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> _field2;
    int _field3;
};

struct EtchNativeArray<signed char>;

struct EtchNativeArray<std::__1::shared_ptr<EtchObject>>;

struct EtchObject;

struct EtchResources {
    struct EtchResources *_field1;
    struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchHash<EtchString>> _field2;
};

struct EtchRuntime;

struct EtchSessionData;

struct EtchShort;

struct EtchStack;

struct EtchString {
    CDUnknownFunctionPointerType *_field1;
    struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> _field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct EtchValueFactory;

struct FFFrac;

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct HighSpeedLogger {
    CDUnknownFunctionPointerType _field1;
    char *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct _malloc_zone_t *_field5;
    struct __sFILE *_field6;
    _Bool _field7;
};

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IDBclConnection {
    CDUnknownFunctionPointerType *_field1;
    struct EtchSessionData *_field2;
    id _field3;
    id _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct mutex _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct IDEtchSessionCppAdaptor {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct IFlyAQCallBackStruct {
    struct OpaqueAudioQueue *queue;
    unsigned int frameCount;
    struct AudioQueueBuffer *mBuffers[5];
    _Bool mBuffersEmpty[5];
    struct AudioStreamBasicDescription mDataFormat;
    unsigned int sampleLen;
    unsigned int playPtr;
    IFlyPcmPlayer *player;
    CDStruct_183601bc *bufferQueue;
};

struct IJKOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    int _field7;
    int _field8;
    struct __CVBuffer *_field9;
};

struct IMediaDataSourceIOS {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
};

struct INvCustomGpuVideoEffectCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct INvEffectDescriptor;

struct INvFaceUnityEffectContext {
    CDUnknownFunctionPointerType *_field1;
};

struct INvParticleSystemEffectContext {
    CDUnknownFunctionPointerType *_field1;
};

struct INvStreamingContextCallback;

struct INvVideoFrame {
    CDUnknownFunctionPointerType *_field1;
};

struct ImageBuffer {
    int eyeDisInBigImage;
    int imageWidth;
    int imageHeight;
    char *pFrameBuffer0;
    char *pFrameBuffer1;
    float faceMinX0;
    float faceMinY0;
    float faceMaxX0;
    float faceMaxY0;
    float faceMinX1;
    float faceMinY1;
    float faceMaxX1;
    float faceMaxY1;
    int faceLeft;
    int faceTop;
    int faceWidth;
    int faceHeight;
    float minPoseScore;
    float maxPitchValue;
    float maxYawValue;
    float maxMouthValue;
    float minBlinkValue;
    float landmarkInFrameBuffer0[36];
    int outputBigImageSize;
    int outputLosslessImageSize;
    int outputActionImageSize;
    char *pOutputBigImage;
    char *pOutputGlobalLosslessImage;
    char *pOutputLocalLosslessImage;
    char *pOutputActionImage0;
    char *pOutputActionImage1;
};

struct Instance;

struct Item;

struct JSExecutorFactory;

struct JSValueRefAndContextRef {
    struct OpaqueJSValue *_field1;
    struct OpaqueJSContext *_field2;
};

struct KSJSONDecodeCallbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LivenessStatus {
    _Bool bFaceExist;
    _Bool bFaceExistOnce;
    int faceExistTime;
    float landmark[36];
    int faceRectSmoothToDraw[4];
    unsigned long long initTime;
    int detectType;
    int detectTypeOld;
    int detectState;
    int msecChangeDetectType;
    int msecCurrentTime;
    _Bool bOutOfRegion;
    _Bool bTooSmall;
    _Bool bTooBig;
    _Bool bStill;
    _Bool bTooDark;
    _Bool bUneven;
    _Bool bYawNeutral;
    _Bool bPitchNeutral;
    _Bool bEyeClose;
    _Bool bSmallGesture;
    float brightness;
    float quality;
    float staticQuality;
    float pitchScore;
    float yawScore;
    float mouthScore;
    float blinkScore;
    float landmarkScore;
    float brightDiff;
    float backHightlight;
    float faceSpeed;
    int countPitch;
    int msecLatestPitch;
    int countYaw;
    int msecLatestYaw;
    int countRoll;
    int countMouth;
    int msecLatestMouth;
    int countBlink;
    int msecLatestBlink;
    int countPanning;
    int msecLatestGetBigImage;
    int countFaceDisappear;
    _Bool bFaceChange;
    _Bool bMouthOcclusion;
    _Bool bEyeOcclusionOnce;
    _Bool bConfirm3D;
    _Bool bGetValidBigImage;
    int msecLeft;
};

struct LogLevel;

struct MapMode;

struct MediaResoulution {
    float _field1;
    float _field2;
};

struct Method {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    unsigned long long _field2;
    struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> _field3;
    struct function<folly::dynamic (folly::dynamic)> _field4;
};

struct ModuleRegistry;

struct MuxState {
    int _field1;
    char **_field2;
    char *_field3;
    int _field4;
    struct Encoder *_field5;
    struct Encoder *_field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    int _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    unsigned long long _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    void *_field18;
    struct _opaque_pthread_t *_field19;
};

struct NPT_Array<NPT_Reference<PLT_DeviceData>> {
    unsigned int _field1;
    unsigned int _field2;
    NPT_Reference_6d0af16d *_field3;
};

struct NPT_Array<PLT_Argument *> {
    unsigned int _field1;
    unsigned int _field2;
    struct PLT_Argument **_field3;
};

struct NPT_Array<PLT_DeviceIcon> {
    unsigned int _field1;
    unsigned int _field2;
    struct PLT_DeviceIcon *_field3;
};

struct NPT_Array<PLT_MediaItemResource> {
    unsigned int _field1;
    unsigned int _field2;
    struct PLT_MediaItemResource *_field3;
};

struct NPT_Array<PLT_Service *> {
    unsigned int _field1;
    unsigned int _field2;
    struct PLT_Service **_field3;
};

struct NPT_HttpEntity;

struct NPT_HttpHeaders {
    struct NPT_List<NPT_HttpHeader *> _field1;
};

struct NPT_HttpRequest;

struct NPT_HttpResponse {
    CDUnknownFunctionPointerType *_field1;
    struct NPT_String _field2;
    struct NPT_HttpHeaders _field3;
    struct NPT_HttpEntity *_field4;
    unsigned int _field5;
    struct NPT_String _field6;
};

struct NPT_HttpUrl {
    CDUnknownFunctionPointerType *_field1;
    struct NPT_String _field2;
    int _field3;
    struct NPT_String _field4;
    unsigned short _field5;
    struct NPT_String _field6;
    _Bool _field7;
    struct NPT_String _field8;
    _Bool _field9;
    struct NPT_String _field10;
};

struct NPT_IpAddress {
    struct NPT_String _field1;
    unsigned char _field2[4];
};

struct NPT_List<NPT_HttpHeader *> {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct NPT_List<NPT_Reference<PLT_CtrlPoint>> {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct NPT_List<NPT_Reference<PLT_DeviceHost>> {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct NPT_List<NPT_Reference<PLT_MediaObjectList>> {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct NPT_List<NPT_String> {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct NPT_List<PLT_AlbumArtInfo> {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct NPT_List<PLT_SearchClass> {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct NPT_Message {
    CDUnknownFunctionPointerType *_field1;
};

struct NPT_MessageHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct NPT_MessageHandlerProxy {
    CDUnknownFunctionPointerType *_field1;
    struct NPT_MessageHandler *_field2;
    unsigned int _field3;
    struct NPT_Mutex _field4;
};

struct NPT_Mutex {
    CDUnknownFunctionPointerType *_field1;
    struct NPT_MutexInterface *_field2;
};

struct NPT_MutexInterface;

struct NPT_Reference<PLT_CtrlPoint> {
    struct PLT_CtrlPoint *_field1;
    unsigned int *_field2;
    struct NPT_Mutex *_field3;
    _Bool _field4;
};

struct NPT_Reference<PLT_DeviceData> {
    struct PLT_DeviceData *_field1;
    unsigned int *_field2;
    struct NPT_Mutex *_field3;
    _Bool _field4;
};

struct NPT_Reference<PLT_DeviceHost> {
    struct PLT_DeviceHost *_field1;
    unsigned int *_field2;
    struct NPT_Mutex *_field3;
    _Bool _field4;
};

struct NPT_Reference<PLT_TaskManager> {
    struct PLT_TaskManager *_field1;
    unsigned int *_field2;
    struct NPT_Mutex *_field3;
    _Bool _field4;
};

struct NPT_SocketAddress {
    struct NPT_IpAddress _field1;
    unsigned int _field2;
};

struct NPT_String {
    char *_field1;
};

struct NPT_TimeStamp {
    long long _field1;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMapTable {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NvsAssetPackageManagerCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct NvsCallbackInterface {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct OSSCancellationTokenSource {
    Class _field1;
};

struct OpaqueAudioComponentInstance;

struct OpaqueAudioConverter;

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct OpaqueJSContext;

struct OpaqueJSValue;

struct PLT_Action {
    struct PLT_ActionDesc *_field1;
    struct NPT_Array<PLT_Argument *> _field2;
    unsigned int _field3;
    struct NPT_String _field4;
    NPT_Reference_6d0af16d _field5;
};

struct PLT_ActionDesc;

struct PLT_Argument;

struct PLT_CtrlPoint;

struct PLT_DeviceData {
    CDUnknownFunctionPointerType *_field1;
    struct NPT_String _field2;
    struct NPT_String _field3;
    struct NPT_String _field4;
    struct NPT_String _field5;
    struct NPT_String _field6;
    struct NPT_String _field7;
    struct NPT_String _field8;
    struct NPT_String _field9;
    struct NPT_String _field10;
    struct NPT_String _field11;
    struct NPT_String _field12;
    struct NPT_String _field13;
    struct NPT_String _field14;
    struct NPT_String _field15;
    struct NPT_HttpUrl _field16;
    struct NPT_HttpUrl _field17;
    struct NPT_String _field18;
    struct NPT_String _field19;
    struct NPT_TimeStamp _field20;
    struct NPT_TimeStamp _field21;
    struct NPT_Array<PLT_Service *> _field22;
    struct NPT_Array<NPT_Reference<PLT_DeviceData>> _field23;
    struct NPT_Array<PLT_DeviceIcon> _field24;
    struct NPT_IpAddress _field25;
    struct NPT_String _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
};

struct PLT_DeviceHost;

struct PLT_DeviceIcon;

struct PLT_HttpRequestContext {
    CDUnknownFunctionPointerType *_field1;
    struct NPT_SocketAddress _field2;
    struct NPT_SocketAddress _field3;
    struct NPT_HttpRequest *_field4;
};

struct PLT_MediaBrowser;

struct PLT_MediaContainer {
    CDUnknownFunctionPointerType *_field1;
    CDStruct_c900da6e _field2;
    struct NPT_String _field3;
    struct NPT_String _field4;
    struct NPT_String _field5;
    struct NPT_String _field6;
    struct NPT_String _field7;
    struct NPT_String _field8;
    CDStruct_2e80e159 _field9;
    CDStruct_faa727b8 _field10;
    CDStruct_ca68cdfb _field11;
    CDStruct_759f4f3f _field12;
    _Bool _field13;
    CDStruct_9dbfcb21 _field14;
    CDStruct_7920ea43 _field15;
    struct NPT_Array<PLT_MediaItemResource> _field16;
    struct NPT_String _field17;
    struct NPT_List<PLT_SearchClass> _field18;
    _Bool _field19;
    int _field20;
    unsigned int _field21;
};

struct PLT_MediaController;

struct PLT_MediaItem {
    CDUnknownFunctionPointerType *_field1;
    CDStruct_c900da6e _field2;
    struct NPT_String _field3;
    struct NPT_String _field4;
    struct NPT_String _field5;
    struct NPT_String _field6;
    struct NPT_String _field7;
    struct NPT_String _field8;
    CDStruct_2e80e159 _field9;
    CDStruct_faa727b8 _field10;
    CDStruct_ca68cdfb _field11;
    CDStruct_759f4f3f _field12;
    _Bool _field13;
    CDStruct_9dbfcb21 _field14;
    CDStruct_7920ea43 _field15;
    struct NPT_Array<PLT_MediaItemResource> _field16;
    struct NPT_String _field17;
};

struct PLT_MediaItemResource;

struct PLT_MediaObject {
    CDUnknownFunctionPointerType *_field1;
    CDStruct_c900da6e _field2;
    struct NPT_String _field3;
    struct NPT_String _field4;
    struct NPT_String _field5;
    struct NPT_String _field6;
    struct NPT_String _field7;
    struct NPT_String _field8;
    CDStruct_2e80e159 _field9;
    CDStruct_faa727b8 _field10;
    CDStruct_ca68cdfb _field11;
    CDStruct_759f4f3f _field12;
    _Bool _field13;
    CDStruct_9dbfcb21 _field14;
    CDStruct_7920ea43 _field15;
    struct NPT_Array<PLT_MediaItemResource> _field16;
    struct NPT_String _field17;
};

struct PLT_PersonRoles {
    unsigned int _field1;
    struct Item *_field2;
    struct Item *_field3;
};

struct PLT_Service;

struct PLT_SsdpListenTask;

struct PLT_TaskManager;

struct PLT_UPnP {
    struct NPT_Mutex _field1;
    struct NPT_List<NPT_Reference<PLT_DeviceHost>> _field2;
    struct NPT_List<NPT_Reference<PLT_CtrlPoint>> _field3;
    struct NPT_Reference<PLT_TaskManager> _field4;
    _Bool _field5;
    struct PLT_SsdpListenTask *_field6;
    _Bool _field7;
};

struct PP_MediaController {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
    struct NPT_Reference<PLT_CtrlPoint> _field4;
    struct PLT_MediaController *_field5;
    struct PLT_MediaBrowser *_field6;
    id _field7;
    id _field8;
    id _field9;
    id _field10;
};

struct PP_MediaDevice {
    CDUnknownFunctionPointerType *_field1;
    NPT_Reference_6d0af16d _field2;
    id _field3;
};

struct PP_MediaObject {
    CDUnknownFunctionPointerType *_field1;
    struct PLT_MediaObject *_field2;
    id _field3;
    struct NPT_List<NPT_Reference<PLT_MediaObjectList>> _field4;
};

struct PitchTracker;

struct Private;

struct ProtocolState {
    int state;
    int type;
    unsigned int len;
    unsigned int processedLen;
};

struct RCTLayoutContext {
    struct CGPoint _field1;
    id _field2;
    id _field3;
};

struct RCTLayoutMetrics {
    struct CGRect frame;
    struct CGRect contentFrame;
    struct UIEdgeInsets borderWidth;
    long long displayType;
    long long layoutDirection;
};

struct RCTMessageThread;

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RHMIDataTable;

struct RHMIMetaData;

struct RHMIResourceType;

struct RHMIVersion;

struct RNGHHitSlop {
    double top;
    double left;
    double bottom;
    double right;
    double width;
    double height;
};

struct RcOverride;

struct RemoteBMWRemotingServer {
    CDUnknownFunctionPointerType *_field1;
    shared_ptr_628bbfde _field2;
    struct EtchDeliveryService *_field3;
    struct EtchValueFactory *_field4;
    struct EtchStack *_field5;
    CDUnknownFunctionPointerType *_field6;
    struct EtchInt32 _field7;
    struct EtchInt32 _field8;
    shared_ptr_628bbfde _field9;
    CDUnknownFunctionPointerType *_field10;
    CDUnknownFunctionPointerType *_field11;
    struct EtchInt32 _field12;
    struct EtchInt32 _field13;
};

struct Retriever {
    struct AVFormatContext *_field1;
    struct AVCodecContext *_field2;
    struct AVCodecContext *_field3;
    int _field4;
    int _field5;
    struct AVStream *_field6;
    struct AVStream *_field7;
    int _field8;
    long long _field9;
    char *_field10;
    struct SwsContext *_field11;
};

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct SDL_Class;

struct SDL_SpeedSampler2 {
    long long sample_range;
    long long last_profile_tick;
    long long last_profile_duration;
    long long last_profile_quantity;
    long long last_profile_speed;
};

struct SDL_VoutOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    int _field7;
    int _field8;
    int _field9;
    struct SDL_Class *_field10;
    struct SDL_VoutOverlay_Opaque *_field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
};

struct SDL_VoutOverlay_Opaque;

struct SDSDialogCommand;

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SNvAVFileInfo {
    int type;
    unsigned int numVideoStreams;
    struct SNvVideoStreamInfo videoStreamInfo;
    unsigned int numAudioStreams;
    struct SNvAudioStreamInfo audioStreamInfo[4];
    unsigned int numAudioStreamsInMeidaFile;
    long long duration;
    unsigned long long dataRate;
};

struct SNvAssetPackageManagerCallback;

struct SNvAudioStreamInfo {
    long long duration;
    unsigned int sampleRate;
    unsigned int channelCount;
};

struct SNvCaptureDeviceCaps {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
    struct vector<float, std::__1::allocator<float>> _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    int _field13;
    float _field14;
};

struct SNvColor {
    float r;
    float g;
    float b;
    float a;
};

struct SNvImageBuffer {
    void *_field1[4];
    int _field2[4];
};

struct SNvRational {
    int num;
    int den;
};

struct SNvRectF {
    float left;
    float top;
    float right;
    float bottom;
};

struct SNvTypedArrayData<unsigned short>;

struct SNvVideoStreamInfo {
    long long duration;
    unsigned int imageWidth;
    unsigned int imageHeight;
    int videoCodec;
    struct SNvRational pixelAspectRatio;
    struct SNvRational frameRate;
    int displayRotation;
    unsigned int componentBitCount;
};

struct SchroederReverb;

struct SolaFs {
    short *_field1;
    short _field2;
    struct _SOLA_INST *_field3;
    short *_field4;
    short _field5;
    struct SwrContext *_field6;
    char **_field7;
    char **_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
};

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct SwrContext;

struct SwsContext;

struct TNvSmartPtr<CNvProjCaptureScene> {
    struct CNvProjCaptureScene *_field1;
};

struct TNvSmartPtr<CNvProjCaptureVideoFx>;

struct TNvSmartPtr<CNvsIconGeneratorGetter> {
    struct CNvsIconGeneratorGetter *m_ptr;
};

struct TNvSmartPtr<INvEffectDescriptor> {
    struct INvEffectDescriptor *_field1;
};

struct TNvSmartPtr<INvParticleSystemEffectContext> {
    struct INvParticleSystemEffectContext *_field1;
};

struct TNvSmartPtr<INvVideoFrame> {
    struct INvVideoFrame *m_ptr;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIView {
    Class _field1;
};

struct UMCLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct UMCMRotationRate {
    double _field1;
    double _field2;
    double _field3;
};

struct VersionInfo;

struct VoiceMorph {
    struct PitchTracker *_field1;
    float *_field2;
    short _field3;
    float *_field4;
    short _field5;
    short _field6;
    float *_field7;
    float *_field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    short *_field13;
    float *_field14;
    float *_field15;
    short _field16;
    float *_field17;
    short _field18;
    struct SwrContext *_field19;
    char **_field20;
    char **_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
};

struct VoicePriorityType;

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct XMAGCParam {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct XMAudioStreamProcess {
    CDStruct_183601bc *_field1;
    int _field2;
    struct XMAGCParam _field3;
};

struct XMLiveAlertLayout {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    struct CGRect _field10;
    double _field11;
    struct CGRect _field12;
    struct CGRect _field13;
    struct CGRect _field14;
    double _field15;
};

struct XMStackItem {
    unsigned long long *_field1;
    int _field2;
    unsigned long long _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    unsigned long long _field9;
    unsigned long long _field10;
};

struct XMVCCenterRect {
    struct CGPoint center;
    struct CGSize size;
};

struct XMVCPathRect {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct XMVCRotateRect {
    struct XMVCCenterRect centerRect;
    double radian;
};

struct XMVCTransform {
    struct CGPoint translation;
    double scale;
    double radian;
};

struct XMVDataRange {
    long long start;
    long long end;
};

struct XMWeKeAlertLayout {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    struct CGRect _field10;
    double _field11;
    struct CGRect _field12;
    struct CGRect _field13;
    struct CGRect _field14;
    double _field15;
};

struct XYAQCallbackStruct {
    struct AudioStreamBasicDescription mDataFormat;
    struct OpaqueAudioQueue *queue;
    struct AudioQueueBuffer *mBuffers[3];
    struct OpaqueAudioFileID *outputFile;
    unsigned long long frameSize;
    long long recPtr;
    int run;
};

struct YGValue {
    float value;
    int unit;
};

struct _DDRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _SOLA_INST;

struct _XMAlertTaskPriorityRange {
    long long maxPriority;
    long long minPriority;
};

struct _XMRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __CVBuffer;

struct __SNvOverridenDefParamVal;

struct __Thumbnail {
    struct __ThumbnailSequence *_field1;
    long long _field2;
    id _field3;
    long long _field4;
    _Bool _field5;
    _Bool _field6;
};

struct __ThumbnailSequence;

struct __audio_level_monitor_t {
    _Bool monitoringEnabled;
    double meanAccumulator;
    double chanMeanAccumulator[16];
    int meanBlockCount;
    int chanMeanBlockCount;
    float chanPeak[16];
    float chanAverage[16];
    float peak;
    float average;
    void *floatConverter;
    struct AudioBufferList *scratchBuffer;
    int channels;
    _Bool reset;
};

struct __callback_table_t {
    int count;
    struct __callback_t {
        void *callback;
        void *userInfo;
        unsigned char flags;
    } callbacks[15];
};

struct __channel_t {
    int _field1;
    void *_field2;
    void *_field3;
    struct _channel_group_t *_field4;
    _Bool _field5;
    float _field6;
    float _field7;
    _Bool _field8;
    struct AudioStreamBasicDescription _field9;
    struct __callback_table_t _field10;
    struct AudioTimeStamp _field11;
    _Bool _field12;
    void *_field13;
    void *_field14;
    void *_field15;
    struct AudioBufferList *_field16;
};

struct __hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*> *_field1;
};

struct __list_node<const EtchObjectType *, void *>;

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _channel_group_t {
    struct __channel_t *_field1;
    int _field2;
    struct OpaqueAudioComponentInstance *_field3;
    struct __channel_t *_field4[100];
    int _field5;
    int _field6;
    _Bool _field7;
    struct OpaqueAudioComponentInstance *_field8;
    struct __audio_level_monitor_t _field9;
};

struct _ffi_type {
    unsigned long long size;
    unsigned short alignment;
    unsigned short type;
    struct _ffi_type **elements;
};

struct _mspheader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned int _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
    long long __sig;
    char __opaque[8];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _void {
    int _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    long long _field18;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct alt_queue {
    struct chan_alt *_field1;
    struct chan_alt *_field2;
    unsigned int _field3;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct chan_alt;

struct chan_queue {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct co_channel {
    struct chan_queue _field1;
    struct alt_queue _field2;
    struct alt_queue _field3;
    struct _opaque_pthread_mutex_t _field4;
    CDUnknownFunctionPointerType _field5;
};

struct condition_variable {
    struct _opaque_pthread_cond_t __cv_;
};

struct coroutine {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    void *_field4;
    void *_field5;
    int _field6;
    unsigned int _field7;
    void *_field8;
    void *_field9;
    struct coroutine_scheduler *_field10;
    struct coroutine *_field11;
    struct coroutine *_field12;
    void *_field13;
    void *_field14;
    _Bool _field15;
    char _field16;
};

struct coroutine_scheduler;

struct deque<CNvEvent *, std::__1::allocator<CNvEvent *>> {
    struct __split_buffer<CNvEvent **, std::__1::allocator<CNvEvent **>> {
        struct CNvEvent ***_field1;
        struct CNvEvent ***_field2;
        struct CNvEvent ***_field3;
        struct __compressed_pair<CNvEvent ***, std::__1::allocator<CNvEvent **>> {
            struct CNvEvent ***_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<CNvEvent *>> {
        unsigned long long _field1;
    } _field3;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct function<folly::dynamic (folly::dynamic)> {
    struct __value_func<folly::dynamic (folly::dynamic)> {
        struct type _field1;
        struct __base<folly::dynamic (folly::dynamic)> *_field2;
    } _field1;
};

struct function<void (CNvProjObject *)> {
    struct type _field1;
    struct __base<void (CNvProjObject *)> *_field2;
};

struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> {
    struct __value_func<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> {
        struct type _field1;
        struct __base<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> *_field2;
    } _field1;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct ip_addr {
    unsigned int addr;
};

struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> {
    struct __list_node_base<const EtchObjectType *, void *> {
        struct __list_node<const EtchObjectType *, void *> *_field1;
        struct __list_node<const EtchObjectType *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const EtchObjectType *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef, std::__1::less<CNvAppFxParamId>, std::__1::allocator<std::__1::pair<const CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef>>> {
    struct __tree<std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef>, std::__1::__map_value_compare<CNvAppFxParamId, std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef>, std::__1::less<CNvAppFxParamId>, true>, std::__1::allocator<std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<CNvAppFxParamId, std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxGeneralParamDef>, std::__1::less<CNvAppFxParamId>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef, std::__1::less<CNvAppFxParamId>, std::__1::allocator<std::__1::pair<const CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef>>> {
    struct __tree<std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef>, std::__1::__map_value_compare<CNvAppFxParamId, std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef>, std::__1::less<CNvAppFxParamId>, true>, std::__1::allocator<std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<CNvAppFxParamId, std::__1::__value_type<CNvAppFxParamId, CNvAppFxDesc::SNvAppFxMenuParamDef>, std::__1::less<CNvAppFxParamId>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<double, __ThumbnailSequence *, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, __ThumbnailSequence *>>> {
    struct __tree<std::__1::__value_type<double, __ThumbnailSequence *>, std::__1::__map_value_compare<double, std::__1::__value_type<double, __ThumbnailSequence *>, std::__1::less<double>, true>, std::__1::allocator<std::__1::__value_type<double, __ThumbnailSequence *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<double, __ThumbnailSequence *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, std::__1::__value_type<double, __ThumbnailSequence *>, std::__1::less<double>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::tuple<NSMethodSignature *, bool>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::tuple<NSMethodSignature *, bool>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::tuple<NSMethodSignature *, bool>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::tuple<NSMethodSignature *, bool>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::tuple<NSMethodSignature *, bool>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::tuple<NSMethodSignature *, bool>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::tuple<NSMethodSignature *, bool>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::pair<int, long long>, __Thumbnail *, std::__1::less<std::__1::pair<int, long long>>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, long long>, __Thumbnail *>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<int, long long>, __Thumbnail *>, std::__1::__map_value_compare<std::__1::pair<int, long long>, std::__1::__value_type<std::__1::pair<int, long long>, __Thumbnail *>, std::__1::less<std::__1::pair<int, long long>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, long long>, __Thumbnail *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, long long>, __Thumbnail *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<int, long long>, std::__1::__value_type<std::__1::pair<int, long long>, __Thumbnail *>, std::__1::less<std::__1::pair<int, long long>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, TNvSmartPtr<INvVideoFrame>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TNvSmartPtr<INvVideoFrame>>>> {
    struct __tree<std::__1::__value_type<unsigned int, TNvSmartPtr<INvVideoFrame>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TNvSmartPtr<INvVideoFrame>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TNvSmartPtr<INvVideoFrame>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TNvSmartPtr<INvVideoFrame>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TNvSmartPtr<INvVideoFrame>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mg_header {
    char *_field1;
    char *_field2;
};

struct mg_request_info {
    void *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    long long _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct mg_header _field13[64];
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct netif {
    struct netif *next;
    struct ip_addr ip_addr;
    struct ip_addr netmask;
    struct ip_addr gw;
    CDUnknownFunctionPointerType input;
    CDUnknownFunctionPointerType output;
    CDUnknownFunctionPointerType linkoutput;
    void *state;
    char *hostname;
    unsigned short mtu;
    unsigned char hwaddr_len;
    unsigned char hwaddr[6];
    unsigned char flags;
    char name[2];
    unsigned char num;
    struct pbuf *loop_first;
    struct pbuf *loop_last;
};

struct payAudioDataCtx {
    unsigned int realDataLen;
    unsigned int sampleDataLen;
};

struct paySampleCtx {
    float sampleDuration;
    unsigned int sampleLength;
};

struct pbuf;

struct protocolChunkHeader {
    unsigned int chunkLen;
};

struct protocolDataHeader {
    unsigned int type;
    unsigned int len;
    unsigned int blockLen;
    unsigned int blockIndex;
};

struct protocolHeader {
    unsigned long long magic;
    unsigned int version;
    unsigned int len;
    unsigned int blockLen;
    unsigned int reverse;
    char keys[32];
};

struct shared_ptr<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>>> {
    struct EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchBool> {
    struct EtchBool *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchByte> {
    struct EtchByte *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchException> {
    struct EtchException *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchFloat> {
    struct EtchFloat *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> {
    struct EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchInt32> {
    struct EtchInt32 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchNativeArray<std::__1::shared_ptr<EtchObject>>> {
    struct EtchNativeArray<std::__1::shared_ptr<EtchObject>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchObject> {
    struct EtchObject *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchRuntime> {
    struct EtchRuntime *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchShort> {
    struct EtchShort *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchString> {
    struct EtchString *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIDataTable> {
    struct RHMIDataTable *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::SDSDialogCommand> {
    struct SDSDialogCommand *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::Instance> {
    struct Instance *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::RCTMessageThread> {
    struct RCTMessageThread *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_storage {
    unsigned char ss_len;
    unsigned char ss_family;
    char __ss_pad1[6];
    long long __ss_align;
    char __ss_pad2[112];
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct streamURLPotocol {
    NSInputStream *inputStream;
    NSURLRequest *request;
    id ctxObj;
    _Bool isStop;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct tm_unz_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
};

struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::xplat::module::CxxModule::Method, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
        struct Method *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<CNvString, SNvAVFileInfo *, std::__1::hash<CNvString>, std::__1::equal_to<CNvString>, std::__1::allocator<std::__1::pair<const CNvString, SNvAVFileInfo *>>> {
    struct __hash_table<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, std::__1::__unordered_map_hasher<CNvString, std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, std::__1::hash<CNvString>, true>, std::__1::__unordered_map_equal<CNvString, std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, std::__1::equal_to<CNvString>, true>, std::__1::allocator<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CNvString, std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, std::__1::hash<CNvString>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CNvString, std::__1::__hash_value_type<CNvString, SNvAVFileInfo *>, std::__1::equal_to<CNvString>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<CNvString, int, std::__1::hash<CNvString>, std::__1::equal_to<CNvString>, std::__1::allocator<std::__1::pair<const CNvString, int>>> {
    struct __hash_table<std::__1::__hash_value_type<CNvString, int>, std::__1::__unordered_map_hasher<CNvString, std::__1::__hash_value_type<CNvString, int>, std::__1::hash<CNvString>, true>, std::__1::__unordered_map_equal<CNvString, std::__1::__hash_value_type<CNvString, int>, std::__1::equal_to<CNvString>, true>, std::__1::allocator<std::__1::__hash_value_type<CNvString, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvString, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CNvString, std::__1::__hash_value_type<CNvString, int>, std::__1::hash<CNvString>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CNvString, std::__1::__hash_value_type<CNvString, int>, std::__1::equal_to<CNvString>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<CNvUuid, CNvAssetPackage *, std::__1::hash<CNvUuid>, std::__1::equal_to<CNvUuid>, std::__1::allocator<std::__1::pair<const CNvUuid, CNvAssetPackage *>>> {
    struct __hash_table<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, std::__1::__unordered_map_hasher<CNvUuid, std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, std::__1::hash<CNvUuid>, true>, std::__1::__unordered_map_equal<CNvUuid, std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, std::__1::equal_to<CNvUuid>, true>, std::__1::allocator<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CNvUuid, std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, std::__1::hash<CNvUuid>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CNvUuid, std::__1::__hash_value_type<CNvUuid, CNvAssetPackage *>, std::__1::equal_to<CNvUuid>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *, std::__1::hash<TNvSmartPtr<CNvProjTimeline>>, std::__1::equal_to<TNvSmartPtr<CNvProjTimeline>>, std::__1::allocator<std::__1::pair<const TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>>> {
    struct __hash_table<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, std::__1::__unordered_map_hasher<TNvSmartPtr<CNvProjTimeline>, std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, std::__1::hash<TNvSmartPtr<CNvProjTimeline>>, true>, std::__1::__unordered_map_equal<TNvSmartPtr<CNvProjTimeline>, std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, std::__1::equal_to<TNvSmartPtr<CNvProjTimeline>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNvSmartPtr<CNvProjTimeline>, std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, std::__1::hash<TNvSmartPtr<CNvProjTimeline>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNvSmartPtr<CNvProjTimeline>, std::__1::__hash_value_type<TNvSmartPtr<CNvProjTimeline>, CNvStreamingContext::__SNvTimelineInfo *>, std::__1::equal_to<TNvSmartPtr<CNvProjTimeline>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, CNvLiveWindowContainer *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, CNvLiveWindowContainer *>>> {
    struct __hash_table<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, CNvLiveWindowContainer *>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long, CNvLiveWindowContainer *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CNvLiveWindowContainer *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, CNvLiveWindowContainer *>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unz_file_info_s {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    struct tm_unz_s _field15;
};

struct unz_global_info_s {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct vector<CNvAppFxDesc::__SNvOverridenDefParamVal, std::__1::allocator<CNvAppFxDesc::__SNvOverridenDefParamVal>> {
    struct __SNvOverridenDefParamVal *_field1;
    struct __SNvOverridenDefParamVal *_field2;
    struct __compressed_pair<CNvAppFxDesc::__SNvOverridenDefParamVal *, std::__1::allocator<CNvAppFxDesc::__SNvOverridenDefParamVal>> {
        struct __SNvOverridenDefParamVal *_field1;
    } _field3;
};

struct vector<CNvParticleWithActionBase::ActionPlaceInfo, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>> {
    struct ActionPlaceInfo *_field1;
    struct ActionPlaceInfo *_field2;
    struct __compressed_pair<CNvParticleWithActionBase::ActionPlaceInfo *, std::__1::allocator<CNvParticleWithActionBase::ActionPlaceInfo>> {
        struct ActionPlaceInfo *_field1;
    } _field3;
};

struct vector<TNvSmartPtr<CNvProjCaptureVideoFx>, std::__1::allocator<TNvSmartPtr<CNvProjCaptureVideoFx>>> {
    struct TNvSmartPtr<CNvProjCaptureVideoFx> *_field1;
    struct TNvSmartPtr<CNvProjCaptureVideoFx> *_field2;
    struct __compressed_pair<TNvSmartPtr<CNvProjCaptureVideoFx>*, std::__1::allocator<TNvSmartPtr<CNvProjCaptureVideoFx>>> {
        struct TNvSmartPtr<CNvProjCaptureVideoFx> *_field1;
    } _field3;
};

struct vector<__ThumbnailSequence *, std::__1::allocator<__ThumbnailSequence *>> {
    struct __ThumbnailSequence **__begin_;
    struct __ThumbnailSequence **__end_;
    struct __compressed_pair<__ThumbnailSequence **, std::__1::allocator<__ThumbnailSequence *>> {
        struct __ThumbnailSequence **__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct xmMetaData {
    char magic[8];
    int ver;
};

struct xm_cpu_info {
    long long _field1;
    long long _field2;
    long long _field3;
    float _field4;
};

struct xm_thread_info {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    unsigned int _field7;
    char _field8[64];
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool gestureBegan;
    _Bool gestureMoved;
    _Bool gestureEnded;
    _Bool gestureTap;
} CDStruct_e4c37880;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool _field1;
    float _field2;
    float _field3;
    float _field4;
    _Bool _field5;
    _Bool _field6;
    float _field7;
} CDStruct_43591f40;

typedef struct {
    _Bool _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
} CDStruct_0c191ff4;

typedef struct {
    _Bool skipPermissionRequests;
} CDStruct_3f9b6990;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned int _field1;
    int _field2;
    unsigned int _field3;
} CDStruct_7db97aa2;

typedef struct {
    unsigned int timerIsInvalidated;
} CDStruct_cd3ffdc5;

typedef struct {
    unsigned long long _field1;
    _Bool _field2;
} CDStruct_5577c19c;

typedef struct {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long patch;
} CDStruct_3b4937be;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    short _field1[4];
    int _field2;
} CDStruct_deded3ef;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    char *data;
    int storage;
    int fill;
    int returned;
    int unsynced;
    int headerbytes;
    int bodybytes;
} CDStruct_d20ade7d;

typedef struct {
    char *_field1;
    long long _field2;
    long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    char *_field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
    char *_field10;
} CDStruct_483cd0ba;

typedef struct {
    char *body_data;
    long long body_storage;
    long long body_fill;
    long long body_returned;
    int *lacing_vals;
    long long *granule_vals;
    long long lacing_storage;
    long long lacing_fill;
    long long lacing_packet;
    long long lacing_returned;
    unsigned char header[282];
    int header_fill;
    int e_o_s;
    int b_o_s;
    long long serialno;
    long long pageno;
    long long packetno;
    long long granulepos;
} CDStruct_a58b8198;

typedef struct {
    void *_field1;
    unsigned int _field2;
} CDStruct_f8bc7150;

typedef struct {
    void *buffer;
    int length;
    int tail;
    int head;
    int fillCount;
    _Bool atomic;
} CDStruct_c5d49230;

typedef struct {
    double broadcastRequestTimeout;
    double applicationDeleteTimeout;
    double applicationStartTimeout;
    unsigned long long maxConnectedAppsCount;
    unsigned long long defaultStubButtonWeight;
} CDStruct_35e1d499;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
    _Bool useSignificantChanges;
} CDStruct_6dd8fab3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    _Bool _field17;
    int _field18;
    int _field19;
} CDStruct_e0e1cbd9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    int _field8;
    int _field9;
    int _field10;
    _Bool _field11;
    int _field12;
    int _field13;
} CDStruct_64582893;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    int _field5;
    int _field6;
    int _field7;
} CDStruct_6c4cbc08;

typedef struct {
    double topLeft;
    double topRight;
    double bottomLeft;
    double bottomRight;
} CDStruct_ba12166d;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double duration;
    long long sampleRate;
    int numberOfChannel;
    long long encodeBitRate;
    int format;
    _Bool convertToMp3;
} CDStruct_896004a1;

typedef struct {
    float left;
    float right;
    float bottom;
    float top;
} CDStruct_426b4421;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int length;
    void *data;
    _Bool canRead;
} CDStruct_20644ef1;

typedef struct {
    int _field1;
    int _field2;
    int _field3[4];
    void *_field4[4];
    int _field5;
    long long _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    _Bool _field10;
} CDStruct_2a94828d;

typedef struct {
    int num;
    int den;
} CDStruct_af73b18c;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
} CDStruct_6a53955a;

typedef struct CDStruct_183601bc;

typedef struct {
    union {
        unsigned int _field1;
        unsigned char _field2[4];
    } _field1;
    unsigned char _field2;
    union {
        unsigned int :24;
        unsigned char _field1[3];
    } _field3;
    unsigned int _field4;
} CDStruct_6058e4f7;

typedef struct {
    unsigned int imageWidth;
    unsigned int imageHeight;
    CDStruct_af73b18c imagePAR;
} CDStruct_59ad98fe;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    struct NPT_String _field3;
    struct NPT_String _field4;
} CDStruct_7920ea43;

typedef struct {
    unsigned long long count;
    double baseLine;
    double lineHeight;
    struct __CTLine **lines;
    double *widths;
} CDStruct_7a56664d;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    char *buffer;
    unsigned long long readIndex;
    unsigned long long writeIndex;
    unsigned long long bufferSize;
    struct _opaque_pthread_mutex_t readMutex;
    struct _opaque_pthread_mutex_t writeMutex;
} CDStruct_4e1900ea;

typedef struct {
    void *_field1;
    void *_field2;
    CDStruct_183601bc *_field3;
    CDUnknownFunctionPointerType _field4;
    void *_field5;
} CDStruct_a1491473;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    struct __CVBuffer *_field1;
    unsigned int _field2;
} CDStruct_3d818a69;

typedef struct {
    int abi;
    unsigned int nargs;
    struct _ffi_type **arg_types;
    struct _ffi_type *rtype;
    unsigned int bytes;
    unsigned int flags;
    unsigned int aarch64_nfixedargs;
} CDStruct_4a179dc8;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    id _field4;
    id _field5;
    id _field6;
    int _field7;
    struct _opaque_pthread_mutex_t *_field8;
    struct _opaque_pthread_mutex_t *_field9;
    unsigned int *_field10;
    unsigned int *_field11;
    int _field12;
    int _field13;
    int _field14;
    float _field15;
    double _field16;
} CDStruct_cb8a688a;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct NPT_String _field1;
    struct NPT_String _field2;
    unsigned int _field3;
} CDStruct_759f4f3f;

typedef struct {
    struct NPT_String _field1;
    struct NPT_String _field2;
    struct NPT_String _field3;
    struct NPT_String _field4;
    struct NPT_String _field5;
    struct NPT_String _field6;
    struct NPT_String _field7;
    struct NPT_String _field8;
} CDStruct_ca68cdfb;

typedef struct {
    struct NPT_String _field1;
    struct NPT_String _field2;
} CDStruct_c900da6e;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

typedef struct {
    struct NPT_List<NPT_String> _field1;
    struct NPT_String _field2;
    struct NPT_String _field3;
} CDStruct_faa727b8;

typedef struct {
    struct NPT_List<PLT_AlbumArtInfo> _field1;
    struct NPT_String _field2;
    struct NPT_String _field3;
    struct NPT_List<NPT_String> _field4;
} CDStruct_9dbfcb21;

typedef struct {
    struct PLT_PersonRoles _field1;
    struct PLT_PersonRoles _field2;
    struct PLT_PersonRoles _field3;
    struct NPT_String _field4;
    struct NPT_String _field5;
    struct NPT_String _field6;
    struct NPT_String _field7;
} CDStruct_2e80e159;

// Ambiguous groups
typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    long long index;
    long long section;
} CDStruct_7ea651ba;

typedef struct NPT_Reference<PLT_DeviceData> {
    struct PLT_DeviceData *_field1;
    unsigned int *_field2;
    struct NPT_Mutex *_field3;
    _Bool _field4;
} NPT_Reference_6d0af16d;

typedef struct NPT_Reference<PLT_DeviceHost> {
    struct PLT_DeviceHost *_field1;
    unsigned int *_field2;
    struct NPT_Mutex *_field3;
    _Bool _field4;
} NPT_Reference_02f97ea3;

typedef struct shared_ptr<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4760166f;

typedef struct shared_ptr<EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>>> {
    struct EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b278485e;

typedef struct shared_ptr<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_64f13db7;

typedef struct shared_ptr<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9e448cc3;

typedef struct shared_ptr<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_8422e678;

typedef struct shared_ptr<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_86a9717a;

typedef struct shared_ptr<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_ad0c0903;

typedef struct shared_ptr<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_db9b4e3e;

typedef struct shared_ptr<EtchBool> {
    struct EtchBool *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6049e213;

typedef struct shared_ptr<EtchByte> {
    struct EtchByte *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d1a96395;

typedef struct shared_ptr<EtchException> {
    struct EtchException *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6e242317;

typedef struct shared_ptr<EtchFloat> {
    struct EtchFloat *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d725f4e5;

typedef struct shared_ptr<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> {
    struct EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_987f58d3;

typedef struct shared_ptr<EtchInt32> {
    struct EtchInt32 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6d134981;

typedef struct shared_ptr<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9280a9be;

typedef struct shared_ptr<EtchNativeArray<std::__1::shared_ptr<EtchObject>>> {
    struct EtchNativeArray<std::__1::shared_ptr<EtchObject>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4c384e63;

typedef struct shared_ptr<EtchObject> {
    struct EtchObject *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_cdcbacd5;

typedef struct shared_ptr<EtchRuntime> {
    struct EtchRuntime *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_628bbfde;

typedef struct shared_ptr<EtchShort> {
    struct EtchShort *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d40d6c12;

typedef struct shared_ptr<EtchString> {
    struct EtchString *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_bb08349a;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9f50eacd;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0b1fe177;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIDataTable> {
    struct RHMIDataTable *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_2c7d29fd;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_06cdad31;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d04dc555;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e92c9ff6;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e9bf6e71;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_585487b4;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_51068687;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::SDSDialogCommand> {
    struct SDSDialogCommand *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_95c73aa4;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_c41975d0;

typedef struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7c4996dd;

typedef struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_8e97821c;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
} unique_ptr_0e0e1873;

typedef struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
} unique_ptr_bcc8199d;

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

