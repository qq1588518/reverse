//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AMPClientDelegate-Protocol.h"
#import "AMPServerDelegate-Protocol.h"
#import "AQHAPCommandControlDelegate-Protocol.h"
#import "JavaScriptHandlerProtocol-Protocol.h"
#import "KPILogging-Protocol.h"
#import "NSFileManagerDelegate-Protocol.h"
#import "deviceDelegate-Protocol.h"

@class ABQAppSwitchHandler, ABQChoreoNetworkEngine, ABQFileUploadManager, ABQHandlerMap, ABQIdentifier, ABQSynchronousCounter, AMPClient, AMPServer, HAPConfiguration, HeadUnitConfiguration, HeadUnitType, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSURL, StreamSource, _AQHAP_MipNet;
@protocol ABQCalendarService, ABQGeofenceService, ABQHeadUnitInfoHandler, ABQProtocolMap, AMPServerCertificateChainProvider, AQHAPMessengerDelegate, OS_dispatch_queue;

@interface AQHAP : NSObject <deviceDelegate, JavaScriptHandlerProtocol, NSFileManagerDelegate, AMPServerDelegate, AMPClientDelegate, AQHAPCommandControlDelegate, KPILogging>
{
    _Bool _notificationsRegistered;
    _Bool _connected;
    _Bool _connectionPaused;
    _Bool _backgrounded;
    _Bool _isProcessingDeviceConnection;
    _Bool _mfiAccessoryDidDisconnectWasReceived;
    _Bool _isFirstStart;
    _Bool _isTemplateBasedHeadUnit;
    _Bool _isThirdPartyApp;
    _Bool _oembaSupportsMeas;
    _Bool _shouldLogKPI;
    _Bool _shouldLogHAPtoHMI;
    _Bool _shouldLogHMItoHAP;
    _Bool _shouldLogToConsole;
    _Bool _appWasLaunchedIntoBackground;
    NSDictionary *_headUnitInfoDict;
    NSString *_version;
    _AQHAP_MipNet *_mipnet;
    AMPServer *_ampServer;
    AMPClient *_ampClient;
    NSDate *_ampConnectionStartTime;
    ABQIdentifier *_activeAppName;
    unsigned long long _backgroundTask;
    NSString *_designatedAccessoryProtocol;
    long long _initializationCounter;
    id <AQHAPMessengerDelegate> _hapMessenger;
    NSURL *_deferredAppSwitchURL;
    NSData *_handsetProfileResponseData;
    id <ABQProtocolMap> _protocolMap;
    NSObject<OS_dispatch_queue> *_sendQueue;
    NSObject<OS_dispatch_queue> *_appSwitchQueue;
    ABQAppSwitchHandler *_appSwitchHandler;
    NSString *_headUnitModelNumber;
    NSString *_mostRecentlyConnectedHeadUnitModelNumber;
    id _delegate;
    StreamSource *_streamController;
    NSString *_countryCode;
    ABQIdentifier *_appName;
    NSString *_appVersion;
    ABQIdentifier *_appScheme;
    ABQIdentifier *_oemAppScheme;
    ABQSynchronousCounter *_sequenceNumber;
    NSMutableDictionary *_sequenceToConnectionMap;
    NSString *_brandId;
    NSString *_oemAppVersion;
    NSString *_headUnitName;
    ABQHandlerMap *_handlerMap;
    HeadUnitConfiguration *_connectedHeadUnitConfig;
    HeadUnitType *_connectedHeadUnitType;
    ABQIdentifier *_restartSource;
    NSString *_AQLogIPAddress;
    NSMutableArray *_error;
    ABQChoreoNetworkEngine *_choreoNetworkEngine;
    ABQFileUploadManager *_fileUploadManager;
    HAPConfiguration *_hapConfiguration;
    NSNumber *_desiredHAPConfigurationVersion;
    NSString *_handsetProfileHapPlatformVersion;
    id <ABQHeadUnitInfoHandler> _headUnitInfoHandler;
    id <ABQCalendarService> _calendarService;
    id <AMPServerCertificateChainProvider> _ampCertChainProvider;
    id <ABQGeofenceService> _geofenceService;
    struct ABQAMPConfiguration _mostRecentlyConnectedHeadUnitAmpConfiguration;
}

+ (id)getURLParametersFromURL:(id)arg1;
+ (id)mipProtocolsForAccessory:(id)arg1 excludingDefaultProtocol:(_Bool)arg2;
+ (_Bool)connectedToMIPAccessory;
+ (id)sharedInstance;
@property _Bool appWasLaunchedIntoBackground; // @synthesize appWasLaunchedIntoBackground=_appWasLaunchedIntoBackground;
@property(nonatomic) __weak id <ABQGeofenceService> geofenceService; // @synthesize geofenceService=_geofenceService;
@property(nonatomic) __weak id <AMPServerCertificateChainProvider> ampCertChainProvider; // @synthesize ampCertChainProvider=_ampCertChainProvider;
@property(nonatomic) __weak id <ABQCalendarService> calendarService; // @synthesize calendarService=_calendarService;
@property(nonatomic) __weak id <ABQHeadUnitInfoHandler> headUnitInfoHandler; // @synthesize headUnitInfoHandler=_headUnitInfoHandler;
@property(nonatomic) _Bool shouldLogToConsole; // @synthesize shouldLogToConsole=_shouldLogToConsole;
@property _Bool shouldLogHMItoHAP; // @synthesize shouldLogHMItoHAP=_shouldLogHMItoHAP;
@property _Bool shouldLogHAPtoHMI; // @synthesize shouldLogHAPtoHMI=_shouldLogHAPtoHMI;
@property _Bool shouldLogKPI; // @synthesize shouldLogKPI=_shouldLogKPI;
@property(copy, nonatomic) NSString *handsetProfileHapPlatformVersion; // @synthesize handsetProfileHapPlatformVersion=_handsetProfileHapPlatformVersion;
@property(readonly, copy, nonatomic) NSNumber *desiredHAPConfigurationVersion; // @synthesize desiredHAPConfigurationVersion=_desiredHAPConfigurationVersion;
@property(retain, nonatomic) HAPConfiguration *hapConfiguration; // @synthesize hapConfiguration=_hapConfiguration;
@property(readonly, nonatomic) ABQFileUploadManager *fileUploadManager; // @synthesize fileUploadManager=_fileUploadManager;
@property(readonly, nonatomic) ABQChoreoNetworkEngine *choreoNetworkEngine; // @synthesize choreoNetworkEngine=_choreoNetworkEngine;
@property(nonatomic) _Bool oembaSupportsMeas; // @synthesize oembaSupportsMeas=_oembaSupportsMeas;
@property(retain) NSMutableArray *error; // @synthesize error=_error;
@property(retain, nonatomic) NSString *AQLogIPAddress; // @synthesize AQLogIPAddress=_AQLogIPAddress;
@property(retain) ABQIdentifier *restartSource; // @synthesize restartSource=_restartSource;
@property(retain, nonatomic) HeadUnitType *connectedHeadUnitType; // @synthesize connectedHeadUnitType=_connectedHeadUnitType;
@property(retain) HeadUnitConfiguration *connectedHeadUnitConfig; // @synthesize connectedHeadUnitConfig=_connectedHeadUnitConfig;
@property _Bool isThirdPartyApp; // @synthesize isThirdPartyApp=_isThirdPartyApp;
@property(readonly, nonatomic) ABQHandlerMap *handlerMap; // @synthesize handlerMap=_handlerMap;
@property _Bool isTemplateBasedHeadUnit; // @synthesize isTemplateBasedHeadUnit=_isTemplateBasedHeadUnit;
@property(retain) NSString *headUnitName; // @synthesize headUnitName=_headUnitName;
@property(retain) NSString *oemAppVersion; // @synthesize oemAppVersion=_oemAppVersion;
@property(retain) NSString *brandId; // @synthesize brandId=_brandId;
@property _Bool isFirstStart; // @synthesize isFirstStart=_isFirstStart;
@property(retain) NSMutableDictionary *sequenceToConnectionMap; // @synthesize sequenceToConnectionMap=_sequenceToConnectionMap;
@property(readonly, nonatomic) ABQSynchronousCounter *sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain) ABQIdentifier *oemAppScheme; // @synthesize oemAppScheme=_oemAppScheme;
@property(retain) ABQIdentifier *appScheme; // @synthesize appScheme=_appScheme;
@property(retain) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(retain) ABQIdentifier *appName; // @synthesize appName=_appName;
@property(retain) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(retain) StreamSource *streamController; // @synthesize streamController=_streamController;
@property(retain) id delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct ABQAMPConfiguration mostRecentlyConnectedHeadUnitAmpConfiguration; // @synthesize mostRecentlyConnectedHeadUnitAmpConfiguration=_mostRecentlyConnectedHeadUnitAmpConfiguration;
@property(retain) NSString *mostRecentlyConnectedHeadUnitModelNumber; // @synthesize mostRecentlyConnectedHeadUnitModelNumber=_mostRecentlyConnectedHeadUnitModelNumber;
@property(retain) NSString *headUnitModelNumber; // @synthesize headUnitModelNumber=_headUnitModelNumber;
@property _Bool mfiAccessoryDidDisconnectWasReceived; // @synthesize mfiAccessoryDidDisconnectWasReceived=_mfiAccessoryDidDisconnectWasReceived;
@property(retain, nonatomic) ABQAppSwitchHandler *appSwitchHandler; // @synthesize appSwitchHandler=_appSwitchHandler;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *appSwitchQueue; // @synthesize appSwitchQueue=_appSwitchQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sendQueue; // @synthesize sendQueue=_sendQueue;
@property(retain, nonatomic) id <ABQProtocolMap> protocolMap; // @synthesize protocolMap=_protocolMap;
@property(retain) NSData *handsetProfileResponseData; // @synthesize handsetProfileResponseData=_handsetProfileResponseData;
@property _Bool isProcessingDeviceConnection; // @synthesize isProcessingDeviceConnection=_isProcessingDeviceConnection;
@property(copy, nonatomic) NSURL *deferredAppSwitchURL; // @synthesize deferredAppSwitchURL=_deferredAppSwitchURL;
@property _Bool backgrounded; // @synthesize backgrounded=_backgrounded;
@property _Bool connectionPaused; // @synthesize connectionPaused=_connectionPaused;
@property _Bool connected; // @synthesize connected=_connected;
@property _Bool notificationsRegistered; // @synthesize notificationsRegistered=_notificationsRegistered;
@property(retain) id <AQHAPMessengerDelegate> hapMessenger; // @synthesize hapMessenger=_hapMessenger;
@property long long initializationCounter; // @synthesize initializationCounter=_initializationCounter;
@property(copy, nonatomic) NSString *designatedAccessoryProtocol; // @synthesize designatedAccessoryProtocol=_designatedAccessoryProtocol;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(copy, nonatomic) ABQIdentifier *activeAppName; // @synthesize activeAppName=_activeAppName;
@property(retain, nonatomic) NSDate *ampConnectionStartTime; // @synthesize ampConnectionStartTime=_ampConnectionStartTime;
@property(retain, nonatomic) AMPClient *ampClient; // @synthesize ampClient=_ampClient;
@property(retain, nonatomic) AMPServer *ampServer; // @synthesize ampServer=_ampServer;
@property(retain, nonatomic) _AQHAP_MipNet *mipnet; // @synthesize mipnet=_mipnet;
@property(retain) NSString *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (void)logEvent:(id)arg1 withInfoText:(id)arg2;
- (void)logChoreoFileDownloadFailed:(id)arg1;
- (void)logChoreoFileDownloadComplete:(id)arg1;
- (void)logChoreoFileDownloadQueued:(id)arg1;
- (void)logChoreoFailure:(id)arg1;
- (void)logChoreoResponse:(id)arg1;
- (void)logChoreoRequest:(id)arg1;
- (_Bool)configureMipNetWithAdrress:(id)arg1 mipNetGateway:(id)arg2 mipNetMask:(id)arg3;
- (id)deafultChoreoServerPins;
@property(readonly, nonatomic) _Bool ampEnabled;
- (void)ampClientFallbackToOemba;
- (void)ampClientDidLoseConnectionToAMPServer:(id)arg1;
- (void)ampClient:(id)arg1 didFailToConnectToAMPServer:(long long)arg2;
- (void)ampClientDidConnectToAMPServer:(id)arg1;
- (_Bool)canRouteMessageForAppWithName:(id)arg1;
- (_Bool)canRouteMessageForAppWithScheme:(id)arg1;
- (void)reconfigureHAPForNewActiveAppWithName:(id)arg1;
- (id)ampServerRemoteLogIPAddress:(id)arg1;
- (void)ampServer:(id)arg1 clientDidFailToAppSwitch:(struct NSObject *)arg2 backgrounded:(_Bool)arg3;
- (void)ampServer:(id)arg1 didReceiveActivationMessageFromClient:(struct NSObject *)arg2;
- (void)ampServer:(id)arg1 didReceiveSynchronousMessageFromClient:(struct NSObject *)arg2 withSequenceNumber:(int)arg3 payload:(id)arg4 contentType:(id)arg5;
- (void)ampServer:(id)arg1 didReceiveAsynchronousMessageFromClient:(struct NSObject *)arg2 withPayload:(id)arg3 contentType:(id)arg4;
- (void)ampServer:(id)arg1 didDisconnectFromClient:(struct NSObject *)arg2;
- (void)ampServer:(id)arg1 didConnectToClient:(struct NSObject *)arg2;
- (id)ampServerSSLCertificateChain:(id)arg1;
- (void)uploadHUPSourcedFileWithName:(id)arg1 forTargetDomain:(id)arg2 usingData:(id)arg3;
- (void)didCompleteProfileSync;
- (_Bool)isReadyForProfileSync;
- (void)clearApps;
- (void)clearProfileSyncCache;
- (void)statusDidChangeTo:(_Bool)arg1 forAppWithName:(id)arg2;
- (void)startProfileSync;
- (void)saveHandsetProfileResponse:(id)arg1;
- (id)handsetProfileLegacyResponse;
- (id)handsetProfileResponse;
- (void)oembaWasRestartedWithUrl:(id)arg1;
- (id)schemeForApp:(id)arg1;
- (id)getNextSequenceNumber;
- (id)handsetInfoDictionary;
- (void)buildHandsetProfile:(long long)arg1;
- (id)headUnitTypeFromHeadUnitInfoDict;
@property(retain) NSDictionary *headUnitInfoDict; // @synthesize headUnitInfoDict=_headUnitInfoDict;
- (void)triggerLocationServicesInitialization;
- (void)saveCountryCode:(id)arg1;
- (void)initializeMipId:(id)arg1 andAuthToken:(id)arg2;
- (id)getProtocolStrings;
- (void)dataRecieved;
- (void)handleURL:(id)arg1;
- (void)PM_CommandControlMessageReceived:(id)arg1 usingSequenceNumber:(long long)arg2 withPayload:(id)arg3 forAppWithName:(id)arg4;
- (void)AQHAP_CommandControlMessageRecieved:(id)arg1 usingSequenceNumber:(long long)arg2 withPayload:(id)arg3 forAppWithName:(id)arg4;
- (_Bool)aqHapSendMessageOfType:(id)arg1 usingSequenceNumber:(long long)arg2 withPayload:(id)arg3;
- (_Bool)aqSendMessageWithPayload:(id)arg1 contentType:(id)arg2;
- (_Bool)aqSendResponseWithSequenceNumber:(int)arg1 payload:(id)arg2 contentType:(id)arg3;
- (void)aqHapDeinit;
- (long long)aqHapInitialize:(id)arg1 withScheme:(id)arg2 withVersion:(id)arg3 delegate:(id)arg4;
- (void)onHapGeneralError;
- (void)onHapConnectionLost;
- (void)onHapServiceEstablished;
- (void)onHapServiceNotEstablished;
- (void)onHapCommandReceivedWithSequenceNumber:(int)arg1 payload:(id)arg2 contentType:(id)arg3;
- (void)callOnHapGeneralError;
- (void)callOnHapConnectionLost;
- (void)callOnHapServiceNotEstablished;
- (void)callOnHapServiceEstablished;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)simulateHMIMessage:(id)arg1;
- (void)sendChoreoErrorToHMI:(id)arg1;
- (_Bool)checkForInstalledOEMApp:(id)arg1;
- (void)onForegroundNotification:(id)arg1;
- (void)onBackgroundNotification:(id)arg1;
- (void)onTerminateNotification:(id)arg1;
- (void)onActiveNotification:(id)arg1;
- (id)pasteBoardEncryptionKey;
- (_Bool)getStateFromPasteboard;
- (void)saveStateToPasteboard;
- (id)arrayFromJson:(id)arg1;
- (id)jsonFromObj:(id)arg1;
- (id)dictionaryFromJson:(id)arg1;
- (void)configureDefaultAppTokenErrorHandler;
- (void)doReLogin;
- (_Bool)validateAppScheme:(id)arg1;
- (void)completeAppSwitchWithResult:(long long)arg1;
- (id)registerAppSwitchHandlerForAppWithName:(id)arg1 appSwitchURL:(id)arg2 handlerBlock:(CDUnknownBlockType)arg3;
- (_Bool)initializeHMIContainerForApp:(id)arg1 withURL:(id)arg2 thenResetHMIContainerWhenComplete:(_Bool)arg3;
- (_Bool)initializeHMIContainerForApp:(id)arg1 withURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)configureAppSwitchURL:(id)arg1;
- (void)doTheAppSwitchWith:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)switchToApp:(id)arg1 withURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)switchToApp:(id)arg1 withURL:(id)arg2;
- (_Bool)switchToAppWithURL:(id)arg1;
- (void)didReceiveHeadUnitInformation:(id)arg1;
- (id)protocolStringForConnectingToAccessory:(id)arg1;
- (void)releaseMFI;
- (_Bool)MFIready;
- (void)closeDataSession;
- (_Bool)openDataSession;
- (void)setupMipNetWithHapAddress:(id)arg1 mipNetGateway:(id)arg2 mipNetMask:(id)arg3;
- (void)deviceDisconnected;
- (void)mfiAccessoryDidDisconnect;
- (void)deviceConnected:(id)arg1;
- (void)deviceConnected;
- (_Bool)isHeadUnitWithInfo:(id)arg1 validForAppScheme:(id)arg2;
- (void)maybeCallDelegateOnMainQueue:(SEL)arg1;
- (void)resumeConnection;
- (void)pauseConnection;
- (_Bool)setupConnectionForTCPIPTemplateManagerUsingConfig:(id)arg1;
- (_Bool)setupConnectionForLWIPStack;
- (void)setupConnectionForPM;
- (_Bool)configureHeadUnitManagerWithHeadUnitConfiguration:(id)arg1;
- (_Bool)determineConnectedHeadUnitConfigUsingAccessoryInfo:(id)arg1;
- (void)stopHAP;
- (void)accessoryDidDisconnect:(id)arg1;
- (id)connectedToSupportedAccessory;
- (void)accessoryDidConnect:(id)arg1;
- (void)unregisterNotifications;
- (void)registerNotifications;
- (_Bool)setupHAP:(id)arg1;
- (void)processMipId:(id)arg1 andAuthToken:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
@property(copy, nonatomic) NSArray *appStartUpInfoList;
- (id)initWithChoreoNetworkEngine:(id)arg1 isThirdPartyApp:(_Bool)arg2;
- (id)initForOEMAppWithChoreoNetworkEngine:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

