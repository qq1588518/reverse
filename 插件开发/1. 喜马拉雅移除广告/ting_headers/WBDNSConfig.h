//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"

@class NSArray, NSDictionary, NSString;

@interface WBDNSConfig : NSObject <NSCopying>
{
    _Bool _enableHttpDnsCache;
    _Bool _enableRequestFromHttpDnsServer;
    _Bool _enableSDKUpdateServerIpOrder;
    _Bool _isUdpdnsServer;
    _Bool _isDnspodServer;
    _Bool _enableErrorLog;
    _Bool _enableSpeedTest;
    int _logSamplingRate;
    int _uploadLogInterval;
    int _speedTestInterval;
    int _refreshDomainIpInterval;
    int _speedTestFactorWeight;
    int _serverSuggestionFactorWeight;
    int _errorFactorWeight;
    int _successTimeFactorWeight;
    int _successNumFactorWeight;
    int _ipOverdueDelay;
    int _domainMaxIpNum;
    int _retryIpNum;
    int _failedIpClearInterval;
    int _lostInitConnectionInterval;
    NSArray *_supportedDomainList;
    NSArray *_httpDnsServerUrlList;
    NSString *_dnspodServerApiUrl;
    NSString *_dnspodId;
    NSString *_dnspodKey;
    NSDictionary *_domainDetails;
    NSString *_udpdnsServerApiUrl;
    NSString *_configVersion;
    long long _retryCountPerRequest;
}

@property int lostInitConnectionInterval; // @synthesize lostInitConnectionInterval=_lostInitConnectionInterval;
@property long long retryCountPerRequest; // @synthesize retryCountPerRequest=_retryCountPerRequest;
@property _Bool enableSpeedTest; // @synthesize enableSpeedTest=_enableSpeedTest;
@property _Bool enableErrorLog; // @synthesize enableErrorLog=_enableErrorLog;
@property int failedIpClearInterval; // @synthesize failedIpClearInterval=_failedIpClearInterval;
@property(retain) NSString *configVersion; // @synthesize configVersion=_configVersion;
@property int retryIpNum; // @synthesize retryIpNum=_retryIpNum;
@property int domainMaxIpNum; // @synthesize domainMaxIpNum=_domainMaxIpNum;
@property int ipOverdueDelay; // @synthesize ipOverdueDelay=_ipOverdueDelay;
@property(retain) NSString *udpdnsServerApiUrl; // @synthesize udpdnsServerApiUrl=_udpdnsServerApiUrl;
@property(retain) NSDictionary *domainDetails; // @synthesize domainDetails=_domainDetails;
@property(retain) NSString *dnspodKey; // @synthesize dnspodKey=_dnspodKey;
@property(retain) NSString *dnspodId; // @synthesize dnspodId=_dnspodId;
@property _Bool isDnspodServer; // @synthesize isDnspodServer=_isDnspodServer;
@property int successNumFactorWeight; // @synthesize successNumFactorWeight=_successNumFactorWeight;
@property int successTimeFactorWeight; // @synthesize successTimeFactorWeight=_successTimeFactorWeight;
@property _Bool isUdpdnsServer; // @synthesize isUdpdnsServer=_isUdpdnsServer;
@property int errorFactorWeight; // @synthesize errorFactorWeight=_errorFactorWeight;
@property(retain) NSString *dnspodServerApiUrl; // @synthesize dnspodServerApiUrl=_dnspodServerApiUrl;
@property(retain) NSArray *httpDnsServerUrlList; // @synthesize httpDnsServerUrlList=_httpDnsServerUrlList;
@property(retain) NSArray *supportedDomainList; // @synthesize supportedDomainList=_supportedDomainList;
@property int serverSuggestionFactorWeight; // @synthesize serverSuggestionFactorWeight=_serverSuggestionFactorWeight;
@property int speedTestFactorWeight; // @synthesize speedTestFactorWeight=_speedTestFactorWeight;
@property _Bool enableSDKUpdateServerIpOrder; // @synthesize enableSDKUpdateServerIpOrder=_enableSDKUpdateServerIpOrder;
@property _Bool enableRequestFromHttpDnsServer; // @synthesize enableRequestFromHttpDnsServer=_enableRequestFromHttpDnsServer;
@property int refreshDomainIpInterval; // @synthesize refreshDomainIpInterval=_refreshDomainIpInterval;
@property int speedTestInterval; // @synthesize speedTestInterval=_speedTestInterval;
@property int uploadLogInterval; // @synthesize uploadLogInterval=_uploadLogInterval;
@property int logSamplingRate; // @synthesize logSamplingRate=_logSamplingRate;
@property _Bool enableHttpDnsCache; // @synthesize enableHttpDnsCache=_enableHttpDnsCache;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

