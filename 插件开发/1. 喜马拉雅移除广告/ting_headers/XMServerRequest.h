//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XMReSessionRequestBase.h"

#import "HttpDnsExtensionProtocol-Protocol.h"
#import "NSURLConnectionDataDelegate-Protocol.h"
#import "NSURLConnectionDelegate-Protocol.h"
#import "XMReSessionManagerProtocol-Protocol.h"

@class NSArray, NSDictionary, NSError, NSMutableArray, NSMutableData, NSMutableDictionary, NSMutableSet, NSString, NSThread, NSURL, NSURLConnection, NSURLResponse, UIView, XMEventHttpModel, XMGatewayChecker, XMRequestARCDelegate;
@protocol XMServerRequestProgressDelegate;

@interface XMServerRequest : XMReSessionRequestBase <HttpDnsExtensionProtocol, XMReSessionManagerProtocol, NSURLConnectionDataDelegate, NSURLConnectionDelegate>
{
    long long _statusCode;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _failBlock;
    CDUnknownBlockType _afterCompleteionBlock;
    CDUnknownBlockType _afterFailBlock;
    long long _serverRetCode;
    NSThread *_requestThread;
    _Bool showsNetworkActivityIndicator;
    _Bool allowsCellularAccess;
    _Bool errorHint;
    _Bool _lowPriority;
    _Bool _isCommonParam;
    _Bool _notCheckRetData;
    _Bool _usingDefaultUserAgent;
    _Bool _isValidate;
    _Bool _isNeedHost;
    _Bool _isCache;
    _Bool _isOpenApi;
    _Bool _usingRawUrl;
    _Bool _libBackupTried;
    _Bool _shouldRetryWhenFailed;
    _Bool _isHttpdnsRoute;
    _Bool _isUseReSession;
    id delegate;
    SEL didFailSelector;
    SEL didFinishSelector;
    NSMutableData *data;
    NSURLConnection *connection;
    NSURL *url;
    NSError *error;
    NSString *requestMethod;
    NSDictionary *userInfo;
    unsigned long long postBodyEncoding;
    NSMutableDictionary *headerFields;
    double timeoutSeconds;
    long long totalBytesSent;
    long long postLength;
    unsigned long long cachePolicy;
    NSDictionary *retDictionary;
    NSString *serverErrorMessage;
    double errorYOffset;
    id <XMServerRequestProgressDelegate> progressDelegate;
    NSString *cookie;
    NSString *dateStrForLastModified;
    XMEventHttpModel *respEventHttpModel;
    NSMutableDictionary *dateTrackDic;
    long long _reTryCount;
    long long _failedCount;
    NSDictionary *_respEventTagDict;
    NSArray *_updateTrackTagViews;
    UIView *_preTrackTagView;
    NSString *_cacheKey;
    NSURL *_originURL;
    NSURL *_convertedUrl;
    long long _seqNum;
    NSMutableArray *_eventsArr;
    NSURLResponse *_respInfo;
    NSMutableSet *_requestedHosts;
    unsigned long long _taskIdentifier;
    NSString *_requestId;
    id _urlSession;
    NSString *_retryRequestHost;
    XMRequestARCDelegate *_arcDelegate;
    XMGatewayChecker *_gwChecker;
    NSString *_currentDomain;
}

+ (id)requestWithURL:(id)arg1;
@property(copy, nonatomic) NSString *currentDomain; // @synthesize currentDomain=_currentDomain;
@property(retain, nonatomic) XMGatewayChecker *gwChecker; // @synthesize gwChecker=_gwChecker;
@property(nonatomic) _Bool isUseReSession; // @synthesize isUseReSession=_isUseReSession;
@property(nonatomic) _Bool isHttpdnsRoute; // @synthesize isHttpdnsRoute=_isHttpdnsRoute;
@property(retain, nonatomic) XMRequestARCDelegate *arcDelegate; // @synthesize arcDelegate=_arcDelegate;
@property(retain, nonatomic) NSString *retryRequestHost; // @synthesize retryRequestHost=_retryRequestHost;
@property(retain, nonatomic) id urlSession; // @synthesize urlSession=_urlSession;
@property(retain, nonatomic) NSString *requestId; // @synthesize requestId=_requestId;
@property(nonatomic) _Bool shouldRetryWhenFailed; // @synthesize shouldRetryWhenFailed=_shouldRetryWhenFailed;
@property(nonatomic) unsigned long long taskIdentifier; // @synthesize taskIdentifier=_taskIdentifier;
@property(retain, nonatomic) NSMutableSet *requestedHosts; // @synthesize requestedHosts=_requestedHosts;
@property(retain, nonatomic) NSURLResponse *respInfo; // @synthesize respInfo=_respInfo;
@property(retain, nonatomic) NSMutableArray *eventsArr; // @synthesize eventsArr=_eventsArr;
@property(nonatomic) long long seqNum; // @synthesize seqNum=_seqNum;
@property(nonatomic) _Bool libBackupTried; // @synthesize libBackupTried=_libBackupTried;
@property(retain, nonatomic) NSURL *convertedUrl; // @synthesize convertedUrl=_convertedUrl;
@property(retain, nonatomic) NSURL *originURL; // @synthesize originURL=_originURL;
@property(nonatomic) _Bool usingRawUrl; // @synthesize usingRawUrl=_usingRawUrl;
@property(nonatomic) _Bool isOpenApi; // @synthesize isOpenApi=_isOpenApi;
@property(retain, nonatomic) NSString *cacheKey; // @synthesize cacheKey=_cacheKey;
@property(nonatomic) _Bool isCache; // @synthesize isCache=_isCache;
@property(nonatomic) _Bool isNeedHost; // @synthesize isNeedHost=_isNeedHost;
@property(nonatomic) _Bool isValidate; // @synthesize isValidate=_isValidate;
@property(retain, nonatomic) UIView *preTrackTagView; // @synthesize preTrackTagView=_preTrackTagView;
@property(retain, nonatomic) NSArray *updateTrackTagViews; // @synthesize updateTrackTagViews=_updateTrackTagViews;
@property(retain, nonatomic) NSDictionary *respEventTagDict; // @synthesize respEventTagDict=_respEventTagDict;
@property(nonatomic) _Bool usingDefaultUserAgent; // @synthesize usingDefaultUserAgent=_usingDefaultUserAgent;
@property(nonatomic) _Bool notCheckRetData; // @synthesize notCheckRetData=_notCheckRetData;
@property(nonatomic) _Bool isCommonParam; // @synthesize isCommonParam=_isCommonParam;
@property(nonatomic) _Bool lowPriority; // @synthesize lowPriority=_lowPriority;
@property(nonatomic) long long failedCount; // @synthesize failedCount=_failedCount;
@property(nonatomic) long long reTryCount; // @synthesize reTryCount=_reTryCount;
@property(retain, nonatomic) NSMutableDictionary *dateTrackDic; // @synthesize dateTrackDic;
@property(retain, nonatomic) XMEventHttpModel *respEventHttpModel; // @synthesize respEventHttpModel;
@property(retain, nonatomic) NSString *dateStrForLastModified; // @synthesize dateStrForLastModified;
@property(retain, nonatomic) NSString *cookie; // @synthesize cookie;
@property(nonatomic) __weak id <XMServerRequestProgressDelegate> progressDelegate; // @synthesize progressDelegate;
@property(nonatomic) double errorYOffset; // @synthesize errorYOffset;
@property(nonatomic) _Bool errorHint; // @synthesize errorHint;
@property(copy, nonatomic) NSString *serverErrorMessage; // @synthesize serverErrorMessage;
@property(retain, nonatomic) NSDictionary *retDictionary; // @synthesize retDictionary;
@property(nonatomic) unsigned long long cachePolicy; // @synthesize cachePolicy;
@property(nonatomic) long long postLength; // @synthesize postLength;
@property(nonatomic) long long totalBytesSent; // @synthesize totalBytesSent;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess;
@property(nonatomic) double timeoutSeconds; // @synthesize timeoutSeconds;
@property(retain, nonatomic) NSMutableDictionary *headerFields; // @synthesize headerFields;
@property(nonatomic) unsigned long long postBodyEncoding; // @synthesize postBodyEncoding;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo;
@property(copy, nonatomic) NSString *requestMethod; // @synthesize requestMethod;
@property(nonatomic) _Bool showsNetworkActivityIndicator; // @synthesize showsNetworkActivityIndicator;
@property(retain, nonatomic) NSError *error; // @synthesize error;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data;
@property(nonatomic) SEL didFinishSelector; // @synthesize didFinishSelector;
@property(nonatomic) SEL didFailSelector; // @synthesize didFailSelector;
@property(nonatomic) __weak id delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)notifyIpFail;
- (void)checkUseHttpdnsRoute;
- (void)addReqTrackInfo;
- (_Bool)checkNeedRetry;
- (_Bool)checkNeedhttpdnsRetry;
- (_Bool)checkRetryRequest;
- (void)cacheResponseData;
- (id)cacheDictionary;
- (id)dictionaryWithErrorType;
- (void)updateTrackTagViews:(id)arg1 withViewController:(id)arg2;
- (void)setPreTrackTagView:(id)arg1 withViewController:(id)arg2;
- (void)updateTrackTagDicAndHeadFileWitheExtraData:(id)arg1;
- (void)setPreTrackTagView:(id)arg1 withViewControllerDic:(id)arg2;
- (void)updateTrackTagViews:(id)arg1;
- (void)setPreTrackTagView:(id)arg1 updateTrackTagViews:(id)arg2;
- (id)getEventTagFromHttpHeader;
- (void)updateEventHttpRespModel:(id)arg1;
- (void)setEventTagToHttpHeader:(id)arg1;
- (void)setEventModelToHttpHeader:(id)arg1;
- (_Bool)processHttpRespondDataStatus:(_Bool)arg1;
- (void)dealWithRespondAlertForDic:(id)arg1;
- (void)endURLSession;
- (void)didFailedRequest:(id)arg1;
- (void)didURLSessionFailed:(id)arg1;
- (void)didURLSessionReceiveData:(id)arg1;
- (void)didURLSessionResponse:(id)arg1;
- (void)didURLSessionWillSend:(id)arg1;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)addUrlSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)didStartDoRequest;
- (_Bool)isRequestCanceled;
- (id)getRequest;
- (void)connection:(id)arg1 didFinishCollectionMetrics:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)reportFinished;
- (void)reportFailed;
- (void)showServerFailErrorMsg:(id)arg1;
- (void)showFailErrorMsg:(id)arg1;
- (id)getLogErrorData;
- (void)failWithError:(id)arg1;
- (void)failWithError:(id)arg1 withMsg:(id)arg2;
- (id)lastModifiedDate;
- (id)postBody;
- (void)clearBlock;
- (void)clearDelegatesAndCancel;
- (void)cancel;
- (void)startSynchronous;
- (void)startAsynchronous;
- (void)sortUrl;
- (id)buildRequest;
- (_Bool)needAddUidParam;
- (void)updateRequestURL:(id)arg1;
- (id)getURLRequest;
- (void)onWifiUnAvailable;
- (id)shouldRedirectOrginURL:(id)arg1;
- (void)setFailedBlock:(CDUnknownBlockType)arg1;
- (void)setAfterFailedBlock:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)afterFailedBlock;
- (CDUnknownBlockType)afterCompletionBlock;
- (void)setAfterCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setCompletionBlock:(CDUnknownBlockType)arg1;
- (void)addCookieValue:(id)arg1 forKey:(id)arg2;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (long long)serverRetCode;
- (long long)statusCode;
- (id)responseDictionary;
- (id)responseData;
- (id)addTsForAdUrlIfNeeded:(id)arg1;
- (id)initWithURL:(id)arg1;
- (void)dealloc;
- (id)originDomain;
- (void)setOriginDomain:(id)arg1;
- (void)notifySuccess:(id)arg1;
- (void)notifyFailWithIpUrl:(id)arg1 domain:(id)arg2 error:(id)arg3;
- (id)getIpHostFromUrl:(id)arg1;
- (id)convertUrl:(id)arg1 previousHosts:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

