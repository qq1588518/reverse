//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSOperation.h>

@class NSError, NSObject, NSString, NSURL, XMAVDBItem, XMAVDModel, XMNDownloader;
@protocol OS_dispatch_queue, XMAVDownloadable;

@interface XMAVDownloader : NSOperation
{
    NSObject<OS_dispatch_queue> *_completedQueue;
    float _progress;
    NSURL *_downloadURL;
    NSString *_customFileName;
    XMNDownloader *_fileDownloader;
    unsigned long long _downloadSize;
    unsigned long long _state;
    unsigned long long _type;
    NSError *_error;
    XMAVDModel *_avdModel;
    NSString *_pathToFile;
    NSString *_pathToDownloadDirectory;
    unsigned long long _trackId;
    unsigned long long _uid;
    long long _trackQualityLevel;
    XMAVDBItem *_dbItem;
    CDUnknownBlockType _startBlock;
    CDUnknownBlockType _errorBlock;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completeBlock;
    CDUnknownBlockType _cancellBlock;
    CDUnknownBlockType _downloadableStateChangeBlock;
    CDUnknownBlockType _downloadInfoReqBlock;
    CDUnknownBlockType _downloadAntiTheftReqBlock;
}

+ (id)downloadMPayServerURL;
+ (unsigned long long)freeDiskSpace;
+ (void)requestAntiTheftUrlFromDict:(id)arg1 callBack:(CDUnknownBlockType)arg2;
+ (void)requestVideoPlayUrlForTrackId:(long long)arg1 quality:(long long)arg2 requestQueue:(id)arg3 completedBlock:(CDUnknownBlockType)arg4;
+ (void)requestAudioPlayUrlForTrackId:(long long)arg1 quality:(long long)arg2 requestQueue:(id)arg3 completedBlock:(CDUnknownBlockType)arg4;
+ (id)downloadDirectoryWithType:(unsigned long long)arg1;
@property(copy, nonatomic) CDUnknownBlockType downloadAntiTheftReqBlock; // @synthesize downloadAntiTheftReqBlock=_downloadAntiTheftReqBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadInfoReqBlock; // @synthesize downloadInfoReqBlock=_downloadInfoReqBlock;
@property(copy, nonatomic) CDUnknownBlockType downloadableStateChangeBlock; // @synthesize downloadableStateChangeBlock=_downloadableStateChangeBlock;
@property(copy, nonatomic) CDUnknownBlockType cancellBlock; // @synthesize cancellBlock=_cancellBlock;
@property(copy, nonatomic) CDUnknownBlockType completeBlock; // @synthesize completeBlock=_completeBlock;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(copy, nonatomic) CDUnknownBlockType errorBlock; // @synthesize errorBlock=_errorBlock;
@property(copy, nonatomic) CDUnknownBlockType startBlock; // @synthesize startBlock=_startBlock;
@property(retain, nonatomic) XMAVDBItem *dbItem; // @synthesize dbItem=_dbItem;
@property(nonatomic) long long trackQualityLevel; // @synthesize trackQualityLevel=_trackQualityLevel;
@property(nonatomic) unsigned long long uid; // @synthesize uid=_uid;
@property(nonatomic) unsigned long long trackId; // @synthesize trackId=_trackId;
@property(copy, nonatomic) NSString *pathToDownloadDirectory; // @synthesize pathToDownloadDirectory=_pathToDownloadDirectory;
@property(copy, nonatomic) NSString *pathToFile; // @synthesize pathToFile=_pathToFile;
@property(retain, nonatomic) XMAVDModel *avdModel; // @synthesize avdModel=_avdModel;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) unsigned long long downloadSize; // @synthesize downloadSize=_downloadSize;
@property(nonatomic) float progress; // @synthesize progress=_progress;
@property(retain, nonatomic) XMNDownloader *fileDownloader; // @synthesize fileDownloader=_fileDownloader;
@property(copy, nonatomic) NSString *customFileName; // @synthesize customFileName=_customFileName;
@property(copy, nonatomic) NSURL *downloadURL; // @synthesize downloadURL=_downloadURL;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <XMAVDownloadable> fileDownloaded;
- (_Bool)removeFileWithError:(id *)arg1;
- (void)notifyFromCompletionWithError:(id)arg1 pathToFile:(id)arg2;
- (void)cancel;
- (void)finishOperationWithState:(unsigned long long)arg1;
- (_Bool)downloadURLIsReady;
- (id)shouldReplaceURLWithDownloadURL:(id)arg1;
- (void)addDependentDownload:(id)arg1;
- (void)cancelDownloadAndRemoveFile:(_Bool)arg1 byUser:(_Bool)arg2;
- (void)doStartDownload;
- (void)prepareDownloadUrl:(id)arg1 andDownloadSize:(long long)arg2;
- (void)requestDownloadUrlWith:(id)arg1;
- (_Bool)isFinished;
- (_Bool)isCancelled;
- (_Bool)isExecuting;
- (void)start;
- (id)initWithURL:(id)arg1 downloadPath:(id)arg2;
- (id)initWithType:(unsigned long long)arg1 TrackId:(unsigned long long)arg2 uId:(unsigned long long)arg3 trackQualityLevel:(long long)arg4;
- (id)initVideoWithTrackId:(unsigned long long)arg1 uId:(unsigned long long)arg2 trackQualityLevel:(long long)arg3;
- (id)initAudioWithTrackId:(unsigned long long)arg1 uId:(unsigned long long)arg2 trackQualityLevel:(long long)arg3;
- (void)dealloc;
- (void)updateDBItemDownloadableStateOnCompletedQueue:(unsigned long long)arg1;
- (void)reqVideoDownloadInfoWithBlock:(CDUnknownBlockType)arg1;
- (void)reqAudioDownloadInfoWithBlock:(CDUnknownBlockType)arg1;
- (void)requestPlayUrlWithBlock:(CDUnknownBlockType)arg1;
- (void)reqDownloadInfo:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)reqDownloadableInfoWithBlock:(CDUnknownBlockType)arg1 dbCache:(_Bool)arg2;
- (void)clear;
- (id)initWithXMAVDBItem:(id)arg1;
- (id)description;
- (id)downloadFileNameWithURL:(id)arg1;
- (id)pathToFileWithURL:(id)arg1 downloadType:(unsigned long long)arg2;
- (id)shouldReplaceURLWithDownloadURL:(id)arg1;

@end

